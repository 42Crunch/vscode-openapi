{
  "name": "vscode-openapi",
  "author": "42Crunch",
  "displayName": "OpenAPI (Swagger) Editor",
  "description": "OpenAPI extension for Visual Studio Code",
  "license": "AGPL-3.0-only",
  "version": "4.19.0-rc1",
  "publisher": "42Crunch",
  "repository": {
    "type": "git",
    "url": "https://github.com/42Crunch/vscode-openapi.git"
  },
  "icon": "resources/icons/extension.png",
  "categories": [
    "Programming Languages",
    "Snippets",
    "Linters"
  ],
  "keywords": [
    "openapi",
    "swagger",
    "json",
    "yaml",
    "api"
  ],
  "engines": {
    "vscode": "^1.61.0"
  },
  "extensionDependencies": [
    "redhat.vscode-yaml"
  ],
  "activationEvents": [
    "*",
    "onFileSystem:openapi-42crunch"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    },
    "virtualWorkspaces": true
  },
  "main": "./out/extension",
  "scripts": {
    "vscode:prepublish": "npm run build",
    "postinstall": "cd packages && npm install",
    "build": "npm run build-webapps && npm run build-quickfixes && npm run build-whatsnew && npm run build-snippets && npm run build-schema && npm run compile",
    "build-snippets": "js-yaml snippets/snippets.yaml > src/generated/snippets.json",
    "build-quickfixes": "js-yaml quickfixes/quickfixes.yaml > src/generated/quickfixes.json",
    "build-whatsnew": "node scripts/build-whatsnew.js",
    "build-schema": "node scripts/build-schema.js",
    "build-webapps": "cd packages && npm run build",
    "compile": "tsc -b",
    "watch": "tsc -b -w",
    "pretest": "npm run build",
    "test": "node ./out/test/runTest.js"
  },
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "openapi-explorer",
          "title": "OpenAPI",
          "icon": "resources/icons/icon_api.svg"
        },
        {
          "id": "42crunch-platform",
          "title": "42Crunch",
          "icon": "resources/icon_42crunch_platform.svg"
        }
      ]
    },
    "views": {
      "42crunch-platform": [
        {
          "id": "platformExplorer",
          "name": "Platform",
          "when": "openapi.platform.credentials == present"
        }
      ],
      "openapi-explorer": [
        {
          "id": "openapiTwoSpecOutline",
          "name": "General",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoPathOutline",
          "name": "Paths",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoTagsOutline",
          "name": "Tags",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoOperationIdOutline",
          "name": "Operation ID",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoParametersOutline",
          "name": "Parameters",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoResponsesOutline",
          "name": "Responses",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoDefinitionOutline",
          "name": "Definitions",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoSecurityOutline",
          "name": "Security",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiTwoSecurityDefinitionOutline",
          "name": "Security Definitions",
          "when": "openapiTwoEnabled"
        },
        {
          "id": "openapiThreeSpecOutline",
          "name": "General",
          "when": "openapiThreeEnabled"
        },
        {
          "id": "openapiThreePathOutline",
          "name": "Paths",
          "when": "openapiThreeEnabled"
        },
        {
          "id": "openapiThreeTagsOutline",
          "name": "Tags",
          "when": "openapiThreeEnabled"
        },
        {
          "id": "openapiThreeOperationIdOutline",
          "name": "Operation ID",
          "when": "openapiThreeEnabled"
        },
        {
          "id": "openapiThreeServersOutline",
          "name": "Servers",
          "when": "openapiThreeEnabled"
        },
        {
          "id": "openapiThreeComponentsOutline",
          "name": "Components",
          "when": "openapiThreeEnabled"
        },
        {
          "id": "openapiThreeSecurityOutline",
          "name": "Security",
          "when": "openapiThreeEnabled"
        },
        {
          "id": "openapiNotSelectedOutline",
          "name": "",
          "when": "!openapiTwoEnabled && !openapiThreeEnabled"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "openapiNotSelectedOutline",
        "contents": "No OpenAPI file selected.\n[New OpenAPI file](command:openapi.createNewThreeYaml)"
      },
      {
        "view": "platformWelcome",
        "contents": "Please enter 42Crunch Platform credentials.\n[Configure](command:openapi.showConfiguration)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "openapiTwoEnabled && resourceScheme =~ /^untitled$|^file$/ || openapiThreeEnabled && resourceScheme =~ /^untitled$|^file$/",
          "command": "openapi.securityAudit",
          "group": "navigation"
        },
        {
          "when": "openapiTwoEnabled || openapiThreeEnabled",
          "command": "openapi.preview",
          "group": "navigation"
        },
        {
          "when": "resourceScheme == openapi-42crunch",
          "command": "openapi.platform.editorReloadApiFromUrl",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "openapi.addHost",
          "when": "!openapiErrors && view == openapiTwoSpecOutline && openapiMissingHost"
        },
        {
          "command": "openapi.addBasePath",
          "when": "!openapiErrors && view == openapiTwoSpecOutline && openapiMissingBasePath"
        },
        {
          "command": "openapi.addInfo",
          "when": "!openapiErrors && view == openapiTwoSpecOutline && openapiMissingInfo"
        },
        {
          "command": "openapi.addSecurity",
          "when": "!openapiErrors && view == openapiTwoSecurityOutline"
        },
        {
          "command": "openapi.addSecurity",
          "when": "!openapiErrors && view == openapiThreeSecurityOutline"
        },
        {
          "command": "openapi.addPath",
          "when": "!openapiErrors && view == openapiTwoPathOutline"
        },
        {
          "command": "openapi.addPath",
          "when": "!openapiErrors && view == openapiThreePathOutline"
        },
        {
          "command": "openapi.addParameterPath",
          "when": "!openapiErrors && view == openapiTwoParametersOutline"
        },
        {
          "command": "openapi.addParameterBody",
          "when": "!openapiErrors && view == openapiTwoParametersOutline"
        },
        {
          "command": "openapi.addParameterOther",
          "when": "!openapiErrors && view == openapiTwoParametersOutline"
        },
        {
          "command": "openapi.addResponse",
          "when": "!openapiErrors && view == openapiTwoResponsesOutline"
        },
        {
          "command": "openapi.addDefinitionObject",
          "when": "!openapiErrors && view == openapiTwoDefinitionOutline"
        },
        {
          "command": "openapi.addSecurityDefinitionBasic",
          "when": "!openapiErrors && view == openapiTwoSecurityDefinitionOutline"
        },
        {
          "command": "openapi.addSecurityDefinitionOauth2Access",
          "when": "!openapiErrors && view == openapiTwoSecurityDefinitionOutline"
        },
        {
          "command": "openapi.addSecurityDefinitionApiKey",
          "when": "!openapiErrors && view == openapiTwoSecurityDefinitionOutline"
        },
        {
          "command": "openapi.v3addInfo",
          "when": "!openapiErrors && view == openapiThreeSpecOutline && openapiMissingInfo"
        },
        {
          "command": "openapi.v3addServer",
          "when": "!openapiErrors && view == openapiThreeServersOutline"
        },
        {
          "command": "openapi.v3addComponentsParameter",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.v3addComponentsResponse",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.v3addComponentsSchema",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.v3addSecuritySchemeBasic",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.v3addSecuritySchemeApiKey",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.v3addSecuritySchemeJWT",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.v3addSecuritySchemeOauth2Access",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.copySelectedTwoPathOutlineJsonReference",
          "when": "!openapiErrors && view == openapiTwoPathOutline"
        },
        {
          "command": "openapi.copySelectedTwoParametersOutlineJsonReference",
          "when": "!openapiErrors && view == openapiTwoParametersOutline"
        },
        {
          "command": "openapi.copySelectedTwoResponsesOutlineJsonReference",
          "when": "!openapiErrors && view == openapiTwoResponsesOutline"
        },
        {
          "command": "openapi.copySelectedTwoDefinitionOutlineJsonReference",
          "when": "!openapiErrors && view == openapiTwoDefinitionOutline"
        },
        {
          "command": "openapi.copySelectedTwoSecurityOutlineJsonReference",
          "when": "!openapiErrors && view == openapiTwoSecurityOutline"
        },
        {
          "command": "openapi.copySelectedTwoSecurityDefinitionOutlineJsonReference",
          "when": "!openapiErrors && view == openapiTwoSecurityDefinitionOutline"
        },
        {
          "command": "openapi.copySelectedThreePathOutlineJsonReference",
          "when": "!openapiErrors && view == openapiThreePathOutline"
        },
        {
          "command": "openapi.copySelectedThreeServersOutlineJsonReference",
          "when": "!openapiErrors && view == openapiThreeServersOutline"
        },
        {
          "command": "openapi.copySelectedThreeComponentsOutlineJsonReference",
          "when": "!openapiErrors && view == openapiThreeComponentsOutline"
        },
        {
          "command": "openapi.copySelectedThreeSecurityOutlineJsonReference",
          "when": "!openapiErrors && view == openapiThreeSecurityOutline"
        },
        {
          "command": "openapi.platform.refreshCollections",
          "when": "view == platformExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "openapi.addOperation",
          "group": "inline",
          "when": "!openapiErrors && view == openapiTwoPathOutline && viewItem == path"
        },
        {
          "command": "openapi.addOperation",
          "group": "inline",
          "when": "!openapiErrors && view == openapiThreePathOutline && viewItem == path"
        },
        {
          "command": "openapi.platform.createCollection",
          "when": "view == platformExplorer && viewItem == collections"
        },
        {
          "command": "openapi.platform.deleteCollection",
          "when": "view == platformExplorer && viewItem == collection"
        },
        {
          "command": "openapi.platform.collectionAddToFavorite",
          "when": "view == platformExplorer && viewItem == collection"
        },
        {
          "command": "openapi.platform.collectionRemoveFromFavorite",
          "when": "view == platformExplorer && viewItem == favoriteCollection"
        },
        {
          "command": "openapi.platform.deleteApi",
          "when": "view == platformExplorer && viewItem == api"
        },
        {
          "command": "openapi.platform.apiRename",
          "when": "view == platformExplorer && viewItem == api"
        },
        {
          "command": "openapi.platform.collectionRename",
          "when": "view == platformExplorer && viewItem =~ /^collection$|^favoriteCollection$/"
        },
        {
          "command": "openapi.platform.createApi",
          "when": "view == platformExplorer && viewItem =~ /^collection$|^favoriteCollection$/"
        },
        {
          "command": "openapi.platform.createApiFromUrl",
          "when": "view == platformExplorer && viewItem =~ /^collection$|^favoriteCollection$/"
        },
        {
          "command": "openapi.platform.openInWebUI",
          "when": "view == platformExplorer && viewItem =~ /^collection$|^api$|^favoriteCollection$/"
        },
        {
          "command": "openapi.platform.collectionsFilter",
          "when": "view == platformExplorer && viewItem == collections",
          "group": "inline"
        },
        {
          "command": "openapi.platform.collectionsFilterReset",
          "title": "Remove filter",
          "when": "view == platformExplorer && viewItem == collectionFilter",
          "group": "inline"
        },
        {
          "command": "openapi.platform.apisFilter",
          "when": "view == platformExplorer && viewItem == collection",
          "group": "inline"
        },
        {
          "command": "openapi.platform.apisFilterReset",
          "title": "Remove filter",
          "when": "view == platformExplorer && viewItem == apiFilter",
          "group": "inline"
        },
        {
          "command": "openapi.platform.favoriteApisFilter",
          "when": "view == platformExplorer && viewItem == favoriteCollection",
          "group": "inline"
        },
        {
          "command": "openapi.platform.favoriteApisFilterReset",
          "title": "Remove filter",
          "when": "view == platformExplorer && viewItem == favoriteApiFilter",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "command": "openapi.showConfiguration",
        "title": "42Crunch: Update platform credentials"
      },
      {
        "command": "openapi.showSettings",
        "title": "42Crunch: Open Settings"
      },
      {
        "command": "openapi.platform.editorDataDictionaryBulkUpdateProperties",
        "title": "42Crunch: Update Data Dictionary properties everywhere in the document",
        "enablement": "openapi.platform.credentials == present"
      },
      {
        "command": "openapi.platform.favoriteApisFilter",
        "title": "Filter",
        "enablement": "view == platformExplorer && viewItem == favoriteCollection",
        "icon": "$(filter)"
      },
      {
        "command": "openapi.platform.favoriteApisFilterReset",
        "title": "Remove filter",
        "enablement": "view == platformExplorer && viewItem == favoriteApiFilter",
        "icon": "$(close)"
      },
      {
        "command": "openapi.platform.apisFilter",
        "title": "Filter",
        "enablement": "view == platformExplorer && viewItem == collection",
        "icon": "$(filter)"
      },
      {
        "command": "openapi.platform.apisFilterReset",
        "title": "Remove filter",
        "enablement": "view == platformExplorer && viewItem == apiFilter",
        "icon": "$(close)"
      },
      {
        "command": "openapi.platform.collectionsFilter",
        "title": "Filter",
        "enablement": "view == platformExplorer && viewItem == collections",
        "icon": "$(filter)"
      },
      {
        "command": "openapi.platform.collectionsFilterReset",
        "title": "Remove filter",
        "enablement": "view == platformExplorer && viewItem == collectionFilter",
        "icon": "$(close)"
      },
      {
        "command": "openapi.platform.refreshCollections",
        "title": "Refresh",
        "enablement": "view == platformExplorer",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "openapi.platform.deleteCollection",
        "enablement": "view == platformExplorer && viewItem == collection",
        "title": "Delete"
      },
      {
        "command": "openapi.platform.collectionAddToFavorite",
        "enablement": "view == platformExplorer && viewItem == collection",
        "title": "Add to My Favorite Collections"
      },
      {
        "command": "openapi.platform.collectionRemoveFromFavorite",
        "enablement": "view == platformExplorer && viewItem == favoriteCollection",
        "title": "Remove from Favorite"
      },
      {
        "command": "openapi.platform.deleteApi",
        "title": "Delete",
        "enablement": "view == platformExplorer && viewItem == api"
      },
      {
        "command": "openapi.platform.createCollection",
        "title": "Create new collection",
        "enablement": "view == platformExplorer && viewItem == collections"
      },
      {
        "command": "openapi.platform.apiRename",
        "title": "Rename",
        "enablement": "view == platformExplorer && viewItem == api"
      },
      {
        "command": "openapi.platform.collectionRename",
        "title": "Rename",
        "enablement": "view == platformExplorer && viewItem =~ /^collection$|^favoriteCollection$/"
      },
      {
        "command": "openapi.platform.createApi",
        "enablement": "view == platformExplorer && viewItem =~ /^collection$|^favoriteCollection$/",
        "title": "Import API"
      },
      {
        "command": "openapi.platform.createApiFromUrl",
        "enablement": "view == platformExplorer && viewItem =~ /^collection$|^favoriteCollection$/",
        "title": "Import API from URL"
      },
      {
        "command": "openapi.platform.editorReloadApiFromUrl",
        "enablement": "resourceScheme == openapi-42crunch",
        "title": "Reload API from URL",
        "icon": "$(sync)"
      },
      {
        "command": "openapi.platform.openInWebUI",
        "enablement": "view == platformExplorer && viewItem =~ /^collection$|^api$|^favoriteCollection$/",
        "title": "Open in Web UI"
      },
      {
        "command": "openapi.v3addServer",
        "title": "OpenAPI: add server"
      },
      {
        "command": "openapi.v3addComponentsParameter",
        "title": "OpenAPI: add parameter"
      },
      {
        "command": "openapi.v3addComponentsResponse",
        "title": "OpenAPI: add response"
      },
      {
        "command": "openapi.v3addComponentsSchema",
        "title": "OpenAPI: add 'object' scheme"
      },
      {
        "command": "openapi.v3addSecuritySchemeBasic",
        "title": "OpenAPI: add security scheme 'Basic'"
      },
      {
        "command": "openapi.v3addSecuritySchemeApiKey",
        "title": "OpenAPI: add security scheme 'API Key'"
      },
      {
        "command": "openapi.v3addSecuritySchemeJWT",
        "title": "OpenAPI: add security scheme 'JWT Bearer'"
      },
      {
        "command": "openapi.v3addSecuritySchemeOauth2Access",
        "title": "OpenAPI: add security scheme 'Oauth2 Authorization Code'"
      },
      {
        "command": "openapi.securityAudit",
        "title": "OpenAPI: perform security audit",
        "enablement": "!openapiErrors",
        "icon": {
          "light": "./resources/42crunch_icon.svg",
          "dark": "./resources/42crunch_icon.svg"
        }
      },
      {
        "command": "openapi.addHost",
        "title": "OpenAPI: add 'host' entry"
      },
      {
        "command": "openapi.addBasePath",
        "title": "OpenAPI: add 'basePath' entry"
      },
      {
        "command": "openapi.addInfo",
        "title": "OpenAPI: add 'info' entry"
      },
      {
        "command": "openapi.v3addInfo",
        "title": "OpenAPI: add 'info' entry"
      },
      {
        "command": "openapi.addSecurityDefinitionBasic",
        "title": "OpenAPI: add security scheme 'Basic'"
      },
      {
        "command": "openapi.addSecurityDefinitionOauth2Access",
        "title": "OpenAPI: add security scheme 'OAuth2 Authorization Code'"
      },
      {
        "command": "openapi.addSecurityDefinitionApiKey",
        "title": "OpenAPI: add security scheme 'API Key'"
      },
      {
        "command": "openapi.addDefinitionObject",
        "title": "OpenAPI: add 'object' definition"
      },
      {
        "command": "openapi.addParameterPath",
        "title": "OpenAPI: add 'path' parameter"
      },
      {
        "command": "openapi.addParameterBody",
        "title": "OpenAPI: add 'body' parameter"
      },
      {
        "command": "openapi.addParameterOther",
        "title": "OpenAPI: add 'query', 'header' or 'formData' parameter"
      },
      {
        "command": "openapi.addResponse",
        "title": "OpenAPI: add response definition"
      },
      {
        "command": "openapi.addPath",
        "title": "OpenAPI: add new path"
      },
      {
        "command": "openapi.addOperation",
        "title": "OpenAPI: add operation",
        "icon": {
          "light": "resources/icons/icon_plus_black.svg",
          "dark": "resources/icons/icon_plus_white.svg"
        }
      },
      {
        "command": "openapi.createNewTwo",
        "title": "OpenAPI: Create new OpenAPI v2.0 file"
      },
      {
        "command": "openapi.createNewThree",
        "title": "OpenAPI: Create new OpenAPI v3.0 file"
      },
      {
        "command": "openapi.createNewTwoYaml",
        "title": "OpenAPI: Create new OpenAPI v2.0 file (YAML)"
      },
      {
        "command": "openapi.createNewThreeYaml",
        "title": "OpenAPI: Create new OpenAPI v3.0 file (YAML)"
      },
      {
        "command": "openapi.addSecurity",
        "title": "OpenAPI: add new security entry"
      },
      {
        "command": "openapi.copyJsonReference",
        "title": "OpenAPI: Copy JSON Reference for the element under the cursor"
      },
      {
        "command": "openapi.previewRedoc",
        "title": "OpenAPI: show preview using ReDoc"
      },
      {
        "command": "openapi.previewSwaggerUI",
        "title": "OpenAPI: show preview using Swagger UI"
      },
      {
        "command": "openapi.preview",
        "title": "OpenAPI: show preview using the default renderer",
        "enablement": "!openapiErrors",
        "icon": {
          "light": "resources/icons/open-preview_black.svg",
          "dark": "resources/icons/open-preview_white.svg"
        }
      },
      {
        "command": "openapi.copySelectedTwoPathOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiTwoPathOutlineSelected"
      },
      {
        "command": "openapi.copySelectedTwoParametersOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiTwoParametersOutlineSelected"
      },
      {
        "command": "openapi.copySelectedTwoResponsesOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiTwoResponsesOutlineSelected"
      },
      {
        "command": "openapi.copySelectedTwoDefinitionOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiTwoDefinitionOutlineSelected"
      },
      {
        "command": "openapi.copySelectedTwoSecurityOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiTwoSecurityOutlineSelected"
      },
      {
        "command": "openapi.copySelectedTwoSecurityDefinitionOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiTwoSecurityDefinitionOutlineSelected"
      },
      {
        "command": "openapi.copySelectedThreePathOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiThreePathOutlineSelected"
      },
      {
        "command": "openapi.copySelectedThreeServersOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiThreeServersOutlineSelected"
      },
      {
        "command": "openapi.copySelectedThreeComponentsOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiThreeComponentsOutlineSelected"
      },
      {
        "command": "openapi.copySelectedThreeSecurityOutlineJsonReference",
        "title": "OpenAPI: copy JSON Pointer",
        "enablement": "openapiThreeSecurityOutlineSelected"
      },
      {
        "command": "openapi.platform.editorLoadAuditReportFromFile",
        "title": "42Crunch: Load Security Audit report from file",
        "enablement": "openapiTwoEnabled || openapiThreeEnabled"
      }
    ],
    "keybindings": [
      {
        "command": "openapi.preview",
        "key": "shift+alt+p",
        "mac": "shift+alt+p",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "OpenAPI",
      "properties": {
        "openapi.platformUrl": {
          "scope": "workbench",
          "type": "string",
          "default": "https://platform.42crunch.com",
          "description": "42Crunch platform URL"
        },
        "openapi.platformConformanceScanRuntime": {
          "scope": "workbench",
          "type": "string",
          "default": "docker",
          "enum": [
            "docker",
            "scand-manager"
          ],
          "enumDescriptions": [
            "Use Docker to execute 42Crunch API Conformance Scan",
            "Use Scand-Manager to execute 42Crunch API Conformance Scan"
          ]
        },
        "openapi.docker": {
          "scope": "workbench",
          "type": "object",
          "description": "Docker",
          "properties": {
            "replaceLocalhost": {
              "type": "boolean",
              "description": "When runnig Conformance Scan on Mac or Windows, replace 'locahost' hostname with 'host.docker.internal'"
            },
            "useHostNetwork": {
              "type": "boolean",
              "description": "When runnig Conformance Scan on Linux, use 'host' network"
            }
          },
          "required": [
            "replaceLocalhost",
            "useHostNetwork"
          ],
          "default": {
            "replaceLocalhost": true,
            "useHostNetwork": true
          }
        },
        "openapi.platformScandManager": {
          "scope": "workbench",
          "type": "object",
          "description": "Scand Manager",
          "properties": {
            "url": {
              "type": "string"
            },
            "auth": {
              "type": "string",
              "enum": [
                "none",
                "header"
              ]
            }
          },
          "required": [
            "url",
            "auth"
          ],
          "default": {
            "url": "",
            "auth": "none"
          }
        },
        "openapi.platformServices": {
          "scope": "workbench",
          "type": "string",
          "default": "",
          "description": "42Crunch platform Services in hostname:port format"
        },
        "openapi.platformConformanceScanImage": {
          "scope": "workbench",
          "type": "string",
          "default": "42crunch/scand-agent:v2.0.0",
          "description": "Docker image for 42Crunch Conformance Scan"
        },
        "openapi.securityAuditToken": {
          "scope": "workbench",
          "type": "string",
          "default": null,
          "description": "Authentication token for Security Audit"
        },
        "openapi.sortOutlines": {
          "scope": "workbench",
          "type": "boolean",
          "default": true,
          "description": "Alphabetically sort contents of OpenAPI explorer outlines"
        },
        "openapi.defaultPreviewRenderer": {
          "scope": "workbench",
          "type": "string",
          "default": "swaggerui",
          "enum": [
            "swaggerui",
            "redoc"
          ],
          "enumDescriptions": [
            "Use Swagger UI as a default renderer to preview OpenAPI files",
            "Use ReDoc as a default renderer to preview OpenAPI files"
          ]
        },
        "openapi.previewUpdateDelay": {
          "scope": "workbench",
          "type": "integer",
          "default": 1000,
          "description": "Preview update delay (in milliseconds after the last document change)"
        },
        "openapi.approvedHostnames": {
          "scope": "workbench",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of hostnames approved for resolving external http:// and https:// references"
        },
        "openapi.tryit.insecureSslHostnames": {
          "scope": "workbench",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of hostnames TryIt is allowed to connect ignoring SSL certificate errors"
        },
        "openapi.dataDictionaryPreAuditFix": {
          "scope": "workbench",
          "type": "string",
          "description": "Update document to match Data Dictionary definitions before running Security Audit",
          "default": "ask",
          "enum": [
            "ask",
            "always",
            "never"
          ],
          "enumDescriptions": [
            "Ask before updating",
            "Always update, don't ask for confirmation",
            "Never update, don't ask for confirmation"
          ]
        },
        "openapi.codeLens": {
          "scope": "workbench",
          "type": "boolean",
          "default": true,
          "description": "Show TryIt/Audit/Scan CodeLenses"
        }
      }
    },
    "jsonValidation": [
      {
        "fileMatch": "*.json",
        "url": "./schema/generated/openapi.json"
      }
    ]
  },
  "workspaces": [
    "packages/common/dist/cjs"
  ],
  "dependencies": {
    "@xliic/json-schema-ref-parser": "^9.3.0",
    "@xliic/preserving-json-yaml-parser": "^1.9.3",
    "form-data": "^2.5.1",
    "got": "^11.8.2",
    "js-yaml": "^4.1.0",
    "jsonc-parser": "^3.0.0",
    "semver": "^7.5.0",
    "yaml-language-server-parser": "^0.1.2"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/js-yaml": "^4.0.3",
    "@types/mocha": "^9.1.0",
    "@types/node": "^14.14.31",
    "@types/semver": "^6.2.0",
    "@types/vscode": "1.61.0",
    "@vscode/test-electron": "^2.3.4",
    "glob": "^7.1.4",
    "marked": "^4.0.10",
    "mocha": "^10.2.0",
    "typescript": "^5.0.2"
  }
}
