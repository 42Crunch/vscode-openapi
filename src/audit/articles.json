{
  "global-http-clear": {
    "group": "security",
    "subgroup": "transport",
    "title": {
      "text": "<h1>API accepts HTTP requests in the clear</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"schemes\": [\n    \"http\"\n  ],</code></pre>"
        },
        {
          "text": "\n                    <p>Having both HTTP and HTTPS enabled does not help, you are still accepting unencrypted connections:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"4\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"schemes\": [\n    \"https\",\n    \"http\"\n  ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If your API supports unencrypted HTTP connections, all requests and responses are transmitted in the open. Anyone listening to the network traffic while the calls are being made may intercept them.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove <code>http</code> from the <code>schemes</code> list, and only include <code>https</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"schemes\": [\n    \"https\"\n  ],\n}</code></pre>"
        }
      ]
    }
  },
  "global-security": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Global 'security' field is not defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The global <code>security</code> field of the API has not been defined. This field specifies if your API requires the API consumer to authenticate to use the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The global <code>security</code> field of the API has not been defined. This field specifies if your API requires the API consumer to authenticate to use the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The <code>security</code> field is tightly coupled with the <code>securityDefinitions</code> objects. The <code>security</code> field could be missing because:</p>\n                    <ul>\n                        <li value=\"1\">You forgot to define the <code>securityDefinitions</code> field altogether, leaving the API completely unprotected.</li>\n                        <li value=\"2\">You defined the <code>securityDefinitions</code> field but not the <code>security</code> field. The definitions are not actually getting applied.</li>\n                        <li value=\"3\">You defined the <code>securityDefinitions</code> field and the operation-level <code>security</code> field for some of the API operations. However, you did not define the <code>security</code> field on the global level for the whole API.</li>\n                    </ul>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not set the global <code>security</code> field, the API does not require any authentication by default. Anyone can use the API operations that do not have a <code>security</code> field defined. All they need to know is the URL for the API operation and how to invoke it.</p>\n                    <p>This sometimes happens to internal APIs. These are often created only to be used inside the company web pages and mobile applications. No one expects any outsiders to know that the API exists, so developers do not spend time implementing security.</p>\n                    <p>But attackers can look at the code of the mobile or web application, or listen to the API traffic, and reverse engineer how the API works. Once the attackers have figured this out, they can start using the API because it does not require any authentication.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>First, define the <code>securityDefinitions</code> or <code>securitySchemes</code> field on the global level, and list the authentication methods that you plan to use. For example:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"securityDefinitions\": {\n    \"petstore_auth\": {\n      \"type\": \"oauth2\",\n      \"authorizationUrl\": \"https://petstore.swagger.io/oauth/dialog\",\n      \"flow\": \"implicit\",\n      \"scopes\": {\n        \"write:pets\": \"Modify pets in your account.\",\n        \"read:pets\": \"Read your pets list.\"\n      }\n    },\n    \"api_key\": {\n      \"type\": \"apiKey\",\n      \"name\": \"api_key\",\n      \"in\": \"header\"\n    }\n  },</code></pre>"
        },
        {
          "text": "\n                    <p>Then, use the <code>security</code> field on the global level to set the default authentication requirements for the whole API.</p>\n                    <p>If you have more than one definition in <code>securityDefinitions</code> and you want to apply all of them for each API call, use the following syntax (semantically AND):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [], \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>If you want to apply only one of the definitions to an API call, use the following syntax (semantically OR):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [] },\n  { \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>You can add an exception to the security specified on the global level on the operation level as needed. This overrides the authentication requirements of the whole API. Simply add a separate <code>security</code> field to the operation in question.</p>\n                "
        }
      ]
    }
  },
  "global-securitydefinitions-undefined": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'SecurityDefinitions' field is not defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The global <code>securityDefinitions</code> field has not been defined. This specifies how API clients must authenticate to use your API's operations.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The global <code>securityDefinitions</code> field has not been defined. This specifies how API clients must authenticate to use your API's operations.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The <code>securityDefinitions</code> field could be missing altogether, or the field could be empty, with no security schemes specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"swagger\": \"2.0\"\n  ...\n  \"securityDefinitions\": {\n   }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Without the <code>securityDefinitions</code> field, your API does not specify any authentication method for consuming the API operations. This means that anyone can use API operations as long as they know the URLs of the operations and how to invoke them.</p>\n                    <p>This sometimes happens to internal APIs. These are often created only to be used inside the company web pages and mobile applications. No one expects any outsiders to know that the API exists, so developers do not spend time implementing security.</p>\n                    <p>But attackers can look at the code of the mobile or web application, or listen to the API traffic, and reverse engineer how the API works. Once the attackers have figured this out, they can start using the API because it does not require any authentication.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>First, define the security schemes in the <code>securityDefinitions</code> field:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"securityDefinitions\": {\n    \"api_key1\": {\n      \"type\": \"apiKey\",\n      \"name\": \"X-Api_Key\",\n      \"in\": \"header\",\n    }\n  }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>Then, use the global <code>security</code> field to set your API to require authentication:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n  { \"api_key1\": [] }\n  ],\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityrequirement-average": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Credentials transported over network</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API accepts credentials (basic authentication credentials or API keys) transported over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#securityDefinitionsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API accepts credentials (basic authentication credentials or API keys) transported over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Here, the authentication method is specified to be <code>regularSecurity</code> that uses basic authentication:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"4, 15\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    },\n    \"api_key\": {\n        \"type\": \"apiKey\",\n        \"name\": \"api_key\",\n        \"in\": \"header\"\n    }\n  },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": []\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can eavesdrop credentials transported over the network and try to intercept the traffic between the API consumer and your API to retrieve them. If they succeed, they can access all API operations protected with the same security requirement until the credentials are specifically revoked or changed. Both basic credentials and API keys have long lifetime providing extended opportunity for exploits.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Use a more secure security definition, like OAuth 2.0. Instead of just credentials, OAuth 2.0 uses access tokens with limited lifetime and authorizations (the scopes) granted that the Resource Owner grants from an authorization server.</p>\n                    <p>An API operation can be consumed only if the request includes an access token and the scopes of the token match the scopes that the API operation requires. Even if attackers successfully retrieved access tokens, they can only use the token on a subset of the API operation and for a limited time.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8, 19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    \"OAuth2\": [ \"readOnly\" ]\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityrequirement-clearcredentials": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Credentials sent as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Your API accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Your API accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...  \n  \"schemes\": [\n    \"http\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    }\n  },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": []\n    }\n  ],\n  ...\n}</code></pre>"
        },
        {
          "text": "\n                    <p>The <code>security</code> field defines that the API is protected with basic authentication (username and password). The <code>schemes</code> field sets HTTP as the supported transportation protocol. This means that the API accepts an API call over an unencrypted HTTP connection, and expects it to have the username and password in the clear.</p>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set the transport protocol to HTTPS only so that all traffic is encrypted. You could also improve the security of the authentication method. The OAuth 2.0 Authorization Code flow (Access Code flow in OAS v2) is considered the most secure way to provide API authorization.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 7, 19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    \"OAuth2\": [ \"readOnly\" ]\n  ]\n}</code>\n        </pre>"
        }
      ]
    }
  },
  "global-securityrequirement-emptyarray": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field contains an empty array</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>security</code> field of your API contract does not list any security schemes to be applied. Instead, it just contains an empty array.</p>\n                    <p>The top-level <code>security</code> field of the OpenAPI contract contains an array of the security schemes applied to the whole API. The list of values describes alternative security schemes that can be used. There is a logical <code>OR</code> between the security requirements. Individual operations can override the top-level <code>security</code> in the operation-level <code>security</code> fields if needed.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>security</code> field of your API contract does not list any security schemes to be applied. Instead, it just contains an empty array.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. An empty array in the <code>security</code> field does not apply any security scheme, and thus does not protect the API:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9-10\" xml:space=\"preserve\"><code class=\"language-json\">{\n  ... \n  \"info\": {\n    \"title\": \"Petstore API\"\n  },\n  \"paths\": {\n...\n  },\n  \"security\": [\n  ]\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Even though you can apply security schemes directly to individual operations, it is strongly recommended that you define your default security schemes on the API level. The operation-level <code>security</code> is meant to be used as an exception-handling mechanism only, not as a best practice.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define default <code>security</code> on the global level for the whole API, and only define exceptions to this on the operation level, if needed.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    \"OAuth2\": [ \"readOnly\" ]\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityrequirement-emptyscheme": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field contains an empty security requirement</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more of the objects defined in the global <code>security</code> field contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API requires. An empty requirement in the <code>security</code> field disables the authentication completely.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more of the objects defined in the global <code>security</code> field contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API requires. An empty requirement in the <code>security</code> field disables the authentication completely.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The <code>security</code> field contains an empty object:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"schemes\": [\n    \"http\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n    }\n  },\n  ...\n  \"security\": [\n    {}\n  ],\n  ...\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>An empty requirement in the <code>security</code> field disables the authentication completely. Attackers could access any API operations without any authentication and identification, and try to retrieve or push some incorrect data, like SQL injection or JSON hijacking. Without the first level of access control, you have no possibility to revoke their access in case you spot incorrect behavior.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you specify at least one security requirement in your security scheme to apply authentication to API operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"schemes\": [\n    \"http\"\n  ],\n  ...\n \"securityDefinitions\": {\n    \"regularSecurity\": {\n    }\n  },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": []\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityrequirement-oauth2-scope-unreferenced": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>OAuth2 security requirement requires a scope not declared in the referenced security scheme</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The OAuth2 security requirement in the <code>security</code> field requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API requires.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-requirement-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The OAuth2 security requirement in the <code>security</code> field requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API requires.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"read\": \"read objects in your account\",\n        \"write\": \"write objects to your account\",\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n{\n  \"security\" : [\n    \"OAuth2\": [ \"readWrite\" ]\n  ]\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not lock down all scopes the OAuth 2 security requirement can use, attackers could try to introduce their scopes to fill the gap.</p>\n                    <p>Attackers could, for example, specify an arbitrary scope containing an SQL injection or buffer overflow attack that is triggered when your API requests a token from the token URL. By limiting the scopes that the OAuth flow can use only to those defined in the OAuth2 security scheme, you ensure that only the strings you have specified are allowed through to the token endpoint. An unrecognized scope in the token request could also lead the attackers gaining extended permissions to access the your resources.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Ensure that all OAuth2 scopes referenced in the security requirements have a match in the OAuth2 security scheme, or remove the undefined scopes.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"read\": \"read objects in your account\",\n        \"write\": \"write objects to your account\",\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n{\n  \"security\" : [\n    \"OAuth2\": [ \"read\", \"write\" ]\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityrequirement-weak": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Access tokens transported as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Access tokens are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Access tokens are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"schemes\": [\n    \"http\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    {\"OAuth2\": [ \"readOnly\" ]\n    }\n  ]\n}\n</code></pre>"
        },
        {
          "text": "\n                    <p>The <code>security</code> field defines that the API is protected with OAuth2 <code>accessCode</code> flow. The <code>schemes</code> field sets HTTP as the supported transportation protocol. This means that the API accepts an API call over an unencrypted HTTP connection, and expects it to have the OAuth tokens in the clear.</p>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the access tokens simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the tokens.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set <code>schemes</code> to support HTTPS only so that all traffic is encrypted.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    {\"OAuth2\": [ \"readOnly\" ]\n    }\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityscheme-average": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Transporting credentials over the network allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more global security schemes allows transporting credentials (basic authentication credentials or API keys) over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.</p>\n                    <p>This is a potential risk, because the definition is in security schemes. However, it easily turns into an actual risk when the unsafe method is used in a security requirement.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#securityDefinitionsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more global security schemes allows transporting credentials (basic authentication credentials or API keys) over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"securityDefinitions\": {\n        \"regularSecurity\": {\n            \"type\": \"basic\"\n        },\n        \"api_key\": {\n            \"type\": \"apiKey\",\n            \"name\": \"api_key\",\n            \"in\": \"header\"\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can eavesdrop credentials transported over the network and try to intercept the traffic between the API consumer and your API to retrieve them. If they succeed, they can access all API operations protected with the same security requirement until the credentials are specifically revoked or changed. Both basic credentials and API keys have long lifetime providing extended opportunity for exploits.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Use a more secure security definition, like OAuth 2.0. Instead of just credentials, OAuth 2.0 uses access tokens with limited lifetime and authorizations (the scopes) granted that the Resource Owner grants from an authorization server.</p>\n                    <p>An API operation can be consumed only if the request includes an access token and the scopes of the token match the scopes that the API operation requires. Even if attackers successfully retrieved access tokens, they can only use the token on a subset of the API operation and for a limited time.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityscheme-clearcredentials": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Sending credentials as cleartext allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more global security schemes in the API allows to set security requirements that accept user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.</p>\n                    <p>This is a potential risk, because the definition is in security schemes. However, it easily turns into an actual risk when the unsafe method is used in a security requirement.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more global security schemes in the API allows to set security requirements that accept user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"schemes\": [\n    \"http\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    }\n  },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": []\n    }\n  ],\n  ...\n}</code></pre>"
        },
        {
          "text": "\n                    <p>The <code>security</code> field defines that the API is protected with basic authentication (username and password). The <code>schemes</code> field sets HTTP as the supported transportation protocol. This means that the API could accept an API call over an unencrypted HTTP connection, and expects it to have the username and password in the clear.</p>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set <code>schemes</code> to support HTTPS only so that all traffic is encrypted.</p>\n                    <p>You could also improve the security of the authentication method. The OAuth 2.0 accessCode flow is considered the most secure way to provide API authorization for OpenAPI Specification v2.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 7, 19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    \"OAuth2\": [ \"readOnly\" ]\n  ]\n}</code>\n        </pre>"
        }
      ]
    }
  },
  "global-securityscheme-oauth2-authorizationurl": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>Authorization URL of the OAuth2 security scheme is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API accepts basic credentials transported over the network. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-scheme-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API accepts basic credentials transported over the network. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"OAuth2\": {\n...\n      \"authorizationUrl\": \"http://bad_example.com#@evil.com/oauth/authorize\", \n    }\n  },\n  ...\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Depending on the underlying library used, your API consumer <a href=\"https://curl.haxx.se/docs/CVE-2016-8624.html\">might be redirected to nefarious sites when parsing non-standard URLs</a>.</p>\n                    <p>In addition, TLS certificates use the URL's host name to validate that the presented certificate matches the host that was contacted. An invalid host name could potentially scupper this validation. A badly encoded URL could be used as an attack vector when decoding the resource path.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"OAuth2\": {\n...\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\", \n    }\n  },\n  ...\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityscheme-oauth2-tokenurl": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>Token URL of the OAuth2 security scheme is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL you have entered in the <code>tokenUrl</code> field of the OAuth2 security scheme is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-scheme-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL you have entered in the <code>tokenUrl</code> field of the OAuth2 security scheme is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n...\n      \"tokenUrl\": \"http://bad_example.com#@evil.com/oauth/token\", \n    }\n  },\n  ...\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Depending on the underlying library used, your API consumer <a href=\"https://curl.haxx.se/docs/CVE-2016-8624.html\">might be redirected to nefarious sites when parsing non-standard URLs</a>.</p>\n                    <p>In addition, TLS certificates use the URL's host name to validate that the presented certificate matches the host that was contacted. An invalid host name could potentially scupper this validation. A badly encoded URL could be used as an attack vector when decoding the resource path.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n...\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n}</code></pre>"
        }
      ]
    }
  },
  "global-securityscheme-weak": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Transporting access tokens as cleartext allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more global security schemes in the API allows to set security requirements that accept access tokens sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.</p>\n                    <p>This is a potential risk, because the definition is in security schemes. However, it easily turns into an actual risk when the unsafe method is used in a security requirement.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more global security schemes in the API allows to set security requirements that accept access tokens sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"schemes\": [\n    \"http\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    {\"OAuth2\": [ \"readOnly\" ]\n    }\n  ]\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set <code>schemes</code> to support HTTPS only so that all traffic is encrypted.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 7, 19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"OAuth2\": {\n      \"type\": \"oauth2\",\n      \"flow\": \"accessCode\",\n      \"scopes\": {\n        \"readOnly\": \"read objects in your account\"\n      },\n      \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n      \"tokenUrl\": \"https://example.com/oauth/token\", \n    }\n  },\n  ...\n  \"security\" : [\n    \"OAuth2\": [ \"readOnly\" ]\n  ]\n}</code>\n        </pre>"
        }
      ]
    }
  },
  "operation-consumes": {
    "group": "security",
    "subgroup": "transport",
    "title": {
      "text": "<h1>Operation does not have the 'consumes' field defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>consumes</code> field for a <code>POST</code>, <code>PUT</code> or <code>PATCH</code> operation has not been defined, either in the operation itself or globally in the top-level <code>consumes</code> field. The <code>consumes</code> field defines how the exchanged object should be deserialized from HTTP messages.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>consumes</code> field for a <code>POST</code>, <code>PUT</code> or <code>PATCH</code> operation has not been defined, either in the operation itself or globally in the top-level <code>consumes</code> field. The <code>consumes</code> field defines how the exchanged object should be deserialized from HTTP messages.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"/pets\": {\n    \"put\": {\n      \"summary\": \"Updates a pet in the store with form data\",\n      \"operationId\": \"updatePetWithForm\",\n      \"produces\": [\n        \"application/json\",\n        \"application/xml\"\n      ],\n      \"parameters\": [\n...\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define the expected input format for the parameters an operation can take, your API could potentially accept any form of data as input. This could open your API to any number of potential attacks, like buffer overflow, decoding errors, or SQL injection attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Specify the MIME types of the accepted input data:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"/pets\": {\n    \"put\": {\n      \"summary\": \"Updates a pet in the store with form data\",\n      \"operationId\": \"updatePetWithForm\",\n      \"produces\": [\n        \"application/json\",\n        \"application/xml\"\n      ],\n      \"consumes\": [\n        \"application/x-www-form-urlencoded\"\n      ],\n      \"parameters\": [\n...\n}</code></pre>"
        }
      ]
    }
  },
  "operation-http-clear": {
    "group": "security",
    "subgroup": "transport",
    "title": {
      "text": "<h1>Operation accepts HTTP requests in the clear</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API operation accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API operation accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"schemes\": [\n    \"http\"\n  ],</code></pre>"
        },
        {
          "text": "\n                    <p>Having both HTTP and HTTPS enabled does not help, you are still accepting unencrypted connections:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"4\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"schemes\": [\n    \"https\",\n    \"http\"\n  ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If your API supports unencrypted HTTP connections, all requests and responses are transmitted in the open. Anyone listening to the network traffic while the calls are being made may intercept them.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove <code>http</code> from the <code>schemes</code> list, and only include <code>https</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"schemes\": [\n    \"https\"\n  ],\n}</code></pre>"
        }
      ]
    }
  },
  "operation-produces": {
    "group": "security",
    "subgroup": "transport",
    "title": {
      "text": "<h1>Operation does not have the 'produces' field defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>produces</code> field of a <code>GET</code> operation has not been defined, either in the operation itself or globally in a top-level <code>produces</code> field. The <code>produces</code> field defines the MIME type of the content your API returns.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>produces</code> field of a <code>GET</code> operation has not been defined, either in the operation itself or globally in a top-level <code>produces</code> field. The <code>produces</code> field defines the MIME type of the content your API returns.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"/pets\": {\n    \"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"responses\": {\n        \"200\": {\n          \"description\": \"A list of pets.\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/definitions/pet\"\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not restrict what data your API can return and attackers successfully breach your API, they can get the API to return practically anything they want, such as sensitive data or files, a database, or executables.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Specify the expected return type for the operation in the <code>produces</code> field to ensure that your API only returns the expected content:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"/pets\": {\n    \"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"responses\": {\n        \"200\": {\n          \"description\": \"A list of pets.\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/definitions/pet\"\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "operation-security": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field of the operation is not defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>security</code> field of the operation has not been defined. This field specifies if your API operation requires the API consumer to authenticate to use it.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>security</code> field of the operation has not been defined. This field specifies if your API operation requires the API consumer to authenticate to use it.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The <code>security</code> field is tightly coupled with the <code>securityDefinitions</code> objects. The <code>security</code> field could be missing because:</p>\n                    <ul>\n                        <li value=\"1\">You forgot to define the <code>securityDefinitions</code> field altogether, leaving the API completely unprotected.</li>\n                        <li value=\"2\">You defined the <code>securityDefinitions</code> field but not the <code>security</code> field. The definitions are not actually getting applied.</li>\n                        <li value=\"3\">You defined the <code>securityDefinitions</code> field and the operation-level <code>security</code> field for some of the API operations. However, you did not define the <code>security</code> field on the global level for the whole API.</li>\n                    </ul>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not set the global <code>security</code> field, the API does not require any authentication by default. Anyone can use the API operations that do not have a <code>security</code> field defined. All they need to know is the URL for the API operation and how to invoke it.</p>\n                    <p>This sometimes happens to internal APIs. These are often created only to be used inside the company web pages and mobile applications. No one expects any outsiders to know that the API exists, so developers do not spend time implementing security.</p>\n                    <p>But attackers can look at the code of the mobile or web application, or listen to the API traffic, and reverse engineer how the API works. Once the attackers have figured this out, they can start using the API because it does not require any authentication.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>First, define the <code>securityDefinitions</code> or <code>securitySchemes</code> field on the global level, and list the authentication methods that you plan to use. For example:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"securityDefinitions\": {\n    \"petstore_auth\": {\n      \"type\": \"oauth2\",\n      \"authorizationUrl\": \"https://petstore.swagger.io/oauth/dialog\",\n      \"flow\": \"implicit\",\n      \"scopes\": {\n        \"write:pets\": \"Modify pets in your account.\",\n        \"read:pets\": \"Read your pets list.\"\n      }\n    },\n    \"api_key\": {\n      \"type\": \"apiKey\",\n      \"name\": \"api_key\",\n      \"in\": \"header\"\n    }\n  },</code></pre>"
        },
        {
          "text": "\n                    <p>Then, use the <code>security</code> field on the global level to set the default authentication requirements for the whole API.</p>\n                    <p>If you have more than one definition in <code>securityDefinitions</code> and you want to apply all of them for each API call, use the following syntax (semantically AND):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [], \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>If you want to apply only one of the definitions to an API call, use the following syntax (semantically OR):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [] },\n  { \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>You can add an exception to the security specified on the global level on the operation level as needed. This overrides the authentication requirements of the whole API. Simply add a separate <code>security</code> field to the operation in question.</p>\n                "
        }
      ]
    }
  },
  "operation-securityrequirement-average": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Operation accepts credentials transported over the network</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API operation accepts credentials (basic authentication credentials or API keys)  transported over the network instead of the more secure tokens. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API operation accepts credentials (basic authentication credentials or API keys)  transported over the network instead of the more secure tokens. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can eavesdrop credentials transported over the network and try to intercept the traffic between the API consumer and your API to retrieve them. If they succeed, they can access all API operations protected with the same security requirement until the credentials are specifically revoked or changed. Both basic credentials and API keys have long lifetime providing extended opportunity for exploits.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Use a more secure security definition, like OAuth 2.0. Instead of just credentials, OAuth 2.0 uses access tokens with limited lifetime and authorizations (the scopes) granted that the Resource Owner grants from an authorization server.</p>\n                    <p>An API operation can be consumed only if the request includes an access token and the scopes of the token match the scopes that the API operation requires. Even if attackers successfully retrieved access tokens, they can only use the token on a subset of the API operation and for a limited time.</p>\n                "
        }
      ]
    }
  },
  "operation-securityrequirement-clearcredentials": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Operation accepts credentials sent as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API operation accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API operation accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set the transport protocol to HTTPS only so that all traffic is encrypted. You could also improve the security of the authentication method. The OAuth 2.0 Authorization Code flow (Access Code flow in OAS v2) is considered the most secure way to provide API authorization.</p>\n                "
        },
        {
          "code": "<p>Insert code example here</p>"
        }
      ]
    }
  },
  "operation-securityrequirement-emptyarray": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field of the operation contains an empty array</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>security</code> field of the operation does not list any security schemes to be applied. Instead, it just contains an empty array.</p>\n                    <p>The top-level <code>security</code> field of the OpenAPI contract contains an array of the security schemes applied to the whole API. The list of values describes alternative security schemes that can be used. There is a logical <code>OR</code> between the security requirements. Individual operations can override the top-level <code>security</code> in the operation-level <code>security</code> fields if needed.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>security</code> field of the operation does not list any security schemes to be applied. Instead, it just contains an empty array.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Even though you can apply security schemes directly to individual operations, it is strongly recommended that you define your default security schemes on the API level. The operation-level <code>security</code> is meant to be used as an exception-handling mechanism only, not as a best practice.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define default <code>security</code> on the global level for the whole API, and only define exceptions to this on the operation level, if needed.</p>\n                "
        }
      ]
    }
  },
  "operation-securityrequirement-emptyscheme": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field of the operation contains an empty security requirement</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more of the objects defined in the <code>security</code> field of the operation contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API operation requires. An empty requirement in the <code>security</code> field disables the authentication completely.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more of the objects defined in the <code>security</code> field of the operation contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API operation requires. An empty requirement in the <code>security</code> field disables the authentication completely.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>An empty requirement in the <code>security</code> field disables the authentication completely. Attackers could access any API operations without any authentication and identification, and try to retrieve or push some incorrect data, like SQL injection or JSON hijacking. Without the first level of access control, you have no possibility to revoke their access in case you spot incorrect behavior.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you specify at least one security requirement in your security scheme to apply authentication to API operations.</p>\n                "
        }
      ]
    }
  },
  "operation-securityrequirement-oauth2-scope-unreferenced": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>OAuth2 security requirement of the operation requires a scope not declared in the referenced security scheme</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The OAuth2 security requirement in the <code>security</code> field of the operation requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API operation requires.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-requirement-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The OAuth2 security requirement in the <code>security</code> field of the operation requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API operation requires.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not lock down all scopes the OAuth 2 security requirement can use, attackers could try to introduce their scopes to fill the gap.</p>\n                    <p>Attackers could, for example, specify an arbitrary scope containing an SQL injection or buffer overflow attack that is triggered when your API requests a token from the token URL. By limiting the scopes that the OAuth flow can use only to those defined in the OAuth2 security scheme, you ensure that only the strings you have specified are allowed through to the token endpoint. An unrecognized scope in the token request could also lead the attackers gaining extended permissions to access the your resources.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Ensure that all OAuth2 scopes referenced in the security requirements have a match in the OAuth2 security scheme, or remove the undefined scopes.</p>\n                "
        }
      ]
    }
  },
  "operation-securityrequirement-weak": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Operation accepts access tokens transported as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Access tokens for the API operation are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Access tokens for the API operation are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the access tokens simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the tokens.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set <code>schemes</code> to support HTTPS only so that all traffic is encrypted.</p>\n                "
        }
      ]
    }
  },
  "parameter-array-items-notype": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Array has no type of the items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays in your API do not have the type of items they can contain specified.</p>\n                    <p>Open API Specification (OAS) v2 <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">requires the <code>type</code> property for <code>items</code> objects</a>. However, most OAS v2 validators do not raise an error on <code>items</code> that do not have <code>type</code> set.</p>\n                "
    },
    "shortDescription": "One or more arrays in your API do not have the type of items they can contain specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n      \"description\": \"ID of a specific user\"\n    }\n  }\n...\n]</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If an array does not specify <code>type</code> property for the <code>items</code> in it, users cannot tell the data type of items your API expects. The users may try to send data of unexpected type to your API, which could cause the backend server crash.</p>\n                    <p>In addition, protection services based on OpenAPI definitions are not able to filter out items of unexpected data types. Attackers can try various types for the items, which again could crash the backend server.</p>\n                    <p>When your backend server crashes, the error messages or exception trace could leak information on the implementation of your services. Attackers could then use to this information to make further attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure your array definitions include the <code>type</code> property in the <code>items</code> field describing accepted items for the array:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9\" xml:space=\"preserve\"><code class=\"language-json\">\"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"integer\",\n      \"description\": \"ID of a specific user\"\n    }\n  }\n...\n]</code></pre>"
        }
      ]
    }
  },
  "parameter-array-maxitems": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Array has no maximum number of items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays in your API do not have the maximum number of items they can contain specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more arrays in your API do not have the maximum number of items they can contain specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"someArray\",\n  \"in\": \"header\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\",\n    \"pattern\": ^((4\\d{3})|(5[1-5]\\d{2})|(6011))-?\\d{4}-?\\d{4}-?\\d{4}|3[4,7]\\d{13}$\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If an array does not specify the maximum number of items in it, attackers may try to submit a call with extremely large number of array entries. This could to make your JSON parser module crash or cause a buffer overflow.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxItems</code> parameter to ensure that you only allow calls of reasonable size:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">{\n \"name\": \"someArray\",\n  \"in\": \"header\",\n  \"type\": \"array\",\n  \"maxItems\": 3,\n  \"items\": {\n    \"type\": \"string\",\n    \"pattern\": ^((4\\d{3})|(5[1-5]\\d{2})|(6011))-?\\d{4}-?\\d{4}-?\\d{4}|3[4,7]\\d{13}$\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-array-numerical-format": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Numeric array item has no format defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays containing numeric items in your API do not specify the format of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more arrays containing numeric items in your API do not specify the format of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array accepts items of the type <code>integer</code> but their format is not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"integer\"\n     }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not specify the format of numeric values, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define the <code>format</code> parameter for the numeric array items. This ensures that only parameters of the expected format get passed to the backend.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n     }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-array-numerical-max": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Numeric array item has no maximum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays containing numeric items do not specify the maximum value of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more arrays containing numeric items do not specify the maximum value of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array accepts items of the type <code>integer</code> but does not specify the maximum value for them:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10-11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"integer\",\n       \"minimum\": 0\n     }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> parameter values for numeric array items to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10-12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"integer\",\n       \"minimum\":0,\n       \"maximum\":100\n     }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-array-numerical-min": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Numeric array item has no minimum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays containing numeric items do not specify the minimum value of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more arrays containing numeric items do not specify the minimum value of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array accepts items of the type <code>integer</code> but does not specify the minimum value for them:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10-11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"integer\",\n       \"maximum\": 100\n     }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> parameter values for numeric array items to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10-12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"integer\",\n       \"minimum\":0,\n       \"maximum\":100\n     }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-array-string-loosepattern": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Pattern for string array item is too loose</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays with items of type <code>string</code> in your API have too loosely defined pattern for the strings. The pattern does not actually limit what gets passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more arrays with items of type <code>string</code> in your API have too loosely defined pattern for the strings. The pattern does not actually limit what gets passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array accepts items of the type <code>string</code> but the pattern of the items is not precise enough:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"string\",\n       \"pattern\": \".*\"\n     }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you define too loose pattern for strings, you do not actually limit what is accepted as the input. This could open your backend server to various attacks, like SQL injections or buffer overflows.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string array items. This ensures that only arrays of strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"string\",\n       \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\" \n    } \n  } \n}</code></pre>"
        }
      ]
    }
  },
  "parameter-array-string-maxlength": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>String array item has no maximum length defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays containing string items do not have the maximum length for the strings specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more arrays containing string items do not have the maximum length for the strings specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array accepts items of the type <code>string</code> of unlimited length:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9-10\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"string\"\n     }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the length of strings, attackers can send longer strings to your API than what your backend server can handle. This could overload your backend server and make it crash. In some cases, this could cause a buffer overflow and allow for executing arbitrary code. Long strings are also more prone to injection attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                        <h2>Remediation</h2>\n                        <p>Set the <code>maxLength</code> parameter to ensure that only strings of the expected size get passed to your API:</p>\n                    "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"string\",\n       \"maxLength\": 8\n     }\n  }\n}</code></pre>"
        },
        {
          "text": "\n                        <p>We also recommend that you specify a regular expression to further lock down the expected string format.</p>\n                    "
        }
      ]
    }
  },
  "parameter-array-string-pattern": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>String array item has no pattern defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more arrays containing strings do not define any pattern for the accepted strings. This means that they do not limit the values that get passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more arrays containing strings do not define any pattern for the accepted strings. This means that they do not limit the values that get passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array accepts items of the type <code>string</code> but their pattern is not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"string\"\n     }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define a pattern for strings, any string is accepted as the input. This could open your backend server to various attacks, such as SQL injection.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string array items. This ensures that only arrays of strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"string\",\n       \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\" \n    } \n  } \n}</code></pre>"
        }
      ]
    }
  },
  "parameter-numerical-format": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Numeric parameter has no format defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some numeric parameters in your API do not have the accepted format specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Some numeric parameters in your API do not have the accepted format specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The parameter <code>type</code> is set to <code>integer</code> but the format is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"description\": \"Number of the objects in&#160;the&#160;array.\"\n   }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not specify the format of numeric values, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define the <code>format</code> parameter for all numeric parameters. This ensures that only parameters of the expected format get passed to the backend.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"format\": \"int32\",\n     \"description\": \"Number of the objects in&#160;the&#160;array.\"\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-numerical-max": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Numeric parameter has no maximum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some numeric parameters in your API do not have the maximum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Some numeric parameters in your API do not have the maximum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The parameter <code>type</code> is set to <code>integer</code> but the maximum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"format\": \"int32\",\n     \"minimum\": 0,\n     \"description\": \"Number of the objects in the array.\"\n   }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7-8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"format\": \"int32\",\n     \"minimum\": 0,\n     \"maximum\": 100,\n     \"description\": \"Number of the objects in the array.\"\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-numerical-min": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Numeric parameter has no minimum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some numeric parameters in your API do not have the minimum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Some numeric parameters in your API do not have the minimum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The parameter <code>type</code> is set to <code>integer</code> but the minimum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"format\": \"int32\",\n     \"maximum\": 100,\n     \"description\": \"Number of the objects in the array.\"\n   }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7-8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"format\": \"int32\",\n     \"minimum\": 0,\n     \"maximum\": 100,\n     \"description\": \"Number of the objects in the array.\"\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-string-loosepattern": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>Pattern for string parameter is too loose</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The pattern for a string parameter in your API is too loosely defined. It does not actually limit what gets passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The pattern for a string parameter in your API is too loosely defined. It does not actually limit what gets passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The defined pattern is so loose that the API effectively accepts any string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"pattern\": \".*\",\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you define too loose pattern for strings, you do not actually limit what is accepted as the input. This could open your backend server to various attacks, like SQL injections or buffer overflows.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\",\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "parameter-string-maxlength": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>String parameter has no maximum length defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some string parameters in your API do not have the maximum length specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Some string parameters in your API do not have the maximum length specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the length of strings, attackers can send longer strings to your API than what your backend server can handle. This could overload your backend server and make it crash. In some cases, this could cause a buffer overflow and allow for executing arbitrary code. Long strings are also more prone to injection attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                        <h2>Remediation</h2>\n                        <p>Set the <code>maxLength</code> parameter to ensure that only strings of the expected size get passed to your API:</p>\n                    "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"maxLength\": 8,\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        },
        {
          "text": "\n                        <p>We also recommend that you specify a regular expression to further lock down the expected string format.</p>\n                    "
        }
      ]
    }
  },
  "parameter-string-pattern": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>String parameter has no pattern defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some string parameters in your API do not define any pattern for the accepted strings. This means that they do not limit the values that get passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Some string parameters in your API do not define any pattern for the accepted strings. This means that they do not limit the values that get passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because no pattern is defined, the API accepts a string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define a pattern for strings, any string is accepted as the input. This could open your backend server to various attacks, such as SQL injection.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\",\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-400": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>400 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API are missing <code>400</code> responses. Because client-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>400</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API are missing <code>400</code> responses. Because client-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>400</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"pet response\",\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/Pet\"\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>400</code> responses for all operations except <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13-18\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"pet response\",\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/Pet\"\n                }\n            }\n        }\n    },\n    ...\n    \"400\": {\n        \"description\": \"Bad request\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/400\"\n                }\n            }\n        }           \n    }\n}\n</code></pre>"
        }
      ]
    }
  },
  "response-401": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>If operation has security defined, the 401 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>401</code> response is missing.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7235#section-3.1\" target=\"_blank\" rel=\"noopener\">RFC 7235</a>.</p>\n                "
    },
    "shortDescription": "If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>401</code> response is missing.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The global <code>security</code> field defines authentication for all API operations, but the <code>401</code> response is missing from the operation:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       }\n       \"403\": {\n         \"description\": \"Forbidden\",\n         \"schema\": {\n           \"$ref\": \"#/definitions/403\"\n         }\n       }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>401</code> responses for all operations that have security defined for them.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 16-19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       },\n       \"401\": {\n         \"description\": \"Unauthorized\",\n         \"schema\": {\n           \"$ref\": \"#/definitions/401\"\n         }\n       },\n       \"403\": {\n         \"description\": \"Forbidden\",\n         \"schema\": {\n           \"$ref\": \"#/definitions/403\"\n         }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-403": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>If operation has security defined, the 403 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>403</code> response is missing.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>403</code> response is missing.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The global <code>security</code> field defines authentication for all API operations, but the <code>403</code> response is missing from the operation:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       },\n       \"401\": {\n         \"description\": \"Unauthorized\",\n         \"schema\": {\n           \"$ref\": \"#/definitions/401\"\n         }\n       }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>403</code> responses for all operations that have security defined for them.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 22-25\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       },\n       \"401\": {\n         \"description\": \"Unauthorized\",\n         \"schema\": {\n           \"$ref\": \"#/definitions/401\"\n         }\n       },\n       \"403\": {\n         \"description\": \"Forbidden\",\n         \"schema\": {\n           \"$ref\": \"#/definitions/403\"\n         }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-404": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>404 response should be defined for all GET, PUT, HEAD, and DELETE operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, or <code>DELETE</code> operations are missing the <code>404</code> response. All <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, and <code>DELETE</code> operations should have the <code>404</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5.4\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, or <code>DELETE</code> operations are missing the <code>404</code> response. All <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, and <code>DELETE</code> operations should have the <code>404</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"/pets\": {\n    \"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"responses\": {\n        \"200\": {\n          \"description\": \"A list of pets.\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/definitions/Pet\"\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>404</code> responses for all <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, and <code>DELETE</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 17\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"/pets\": {\n    \"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"responses\": {\n        \"200\": {\n          \"description\": \"A list of pets\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/definitions/Pet\"\n            }\n          }\n        }\n    \"404\": {\n        \"description\": \"Not found\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/404\"\n                }\n            }\n        }           \n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-415": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>415 response should be defined for operations receiving a body (POST, PUT, PATCH)</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>POST</code>, <code>PUT</code>, or <code>PATCH</code> operations are missing <code>415</code> responses. All operations that receive a body should have <code>415</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5.13\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5.13\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>POST</code>, <code>PUT</code>, or <code>PATCH</code> operations are missing <code>415</code> responses. All operations that receive a body should have <code>415</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"9-16\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n       \"description\": \"Pet to add to the store\",\n       \"required\": true,\n    ...\n    },\n    \"responses\": {\n       \"200\": {\n          \"description\": \"pet response\",\n          \"content\": {\n             \"application/json\": {\n                \"schema\": {\n                   \"$ref\": \"#/definitions/Pet\"\n                }\n             }\n          }\n       }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>415</code> responses for all <code>POST</code>, <code>PUT</code>, and <code>PATCH</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"21-26\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"requestBody\": {\n     \"description\": \"Pet to add to the store\",\n     \"required\": true,\n     ...\n  },\n  \"responses\": {\n     \"200\": {\n       \"description\": \"pet response\",\n       \"content\": {\n         \"application/json\": {\n           \"schema\": {\n             \"$ref\": \"#/definitions/Pet\"\n           }\n         }\n       }\n     },\n     ...\n     \"415\": {\n       \"description\": \"Unsupported media type\"\n       \"content\": {\n         \"application/json\": {\n           \"schema\": {\n             \"$ref\": \"#/definitions/415\"\n          }\n        }\n      }         \n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-429": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>429 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API are missing <code>429</code> responses. All operations except <code>HEAD</code> operations should have <code>429</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc6585#section-4\" target=\"_blank\" rel=\"noopener\">RFC 6585</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API are missing <code>429</code> responses. All operations except <code>HEAD</code> operations should have <code>429</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/definitions/Pet\"\n                    }\n                }\n            }\n    }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>429</code> responses for all operations except <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13-18\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/definitions/Pet\"\n                    }\n                }\n            }\n    },\n    ...\n    \"429\": {\n        \"description\": \"Too many requests\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/429\"\n                }\n            }\n        }           \n    }\n  }</code></pre>"
        }
      ]
    }
  },
  "response-500": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>500 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API are missing <code>500</code> responses. Because server-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>500</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.6\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API are missing <code>500</code> responses. Because server-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>500</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/definitions/Pet\"\n                    }\n                }\n            }\n    }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>500</code> responses for all operations except <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13-18\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/definitions/Pet\"\n                    }\n                }\n            }\n    },\n    ...\n    \"500\": {\n        \"description\": \"Internal Server Error\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/500\"\n                }\n            }\n        }           \n    }\n  }</code></pre>"
        }
      ]
    }
  },
  "response-default-undefined": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>No default response defined for the operation</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API have no default response defined.</p>\n                    <p>OpenAPI Specification (OAS) defines the default response as optional. It can be used as the default response object for all HTTP codes that are not covered individually in the OpenAPI definition. It can also be used to cover undeclared responses.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#responses-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API have no default response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define default responses for all API operations:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8-11\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n    }\n  },\n  \"default\": {\n    \"description\": \"unexpected error\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Error\"\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-delete-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for DELETE operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>DELETE</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>DELETE</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"delete\": {\n    \"description\": \"Deletes a pet based on the ID\",\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>DELETE</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"delete\": {\n    \"description\": \"Deletes a pet based on the ID\",\n    ...\n    \"responses\": {\n      \"204\": {\n        \"description\": \"Pet deleted\"\n      },\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-get-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200 or 202 response should be defined for GET operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>GET</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>GET</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"default\": {\n      \"description\": \"unexpected error\",\n      \"schema\": {\n        \"$ref\": \"#/definitions/Error\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code> or <code>202</code> responses for all <code>GET</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"pet response\",\n      \"schema\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"Pet.json\"\n        }\n      }\n    },\n    \"default\": {\n     \"description\": \"unexpected error\",\n      \"schema\": {\n        \"$ref\": \"#/definitions/Error\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-head-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200 or 202 response should be defined for HEAD operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>HEAD</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>HEAD</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"head\": {\n  ...\n  \"responses\": {\n    \"404\": {\n        \"description\": \"Not found\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/404\"\n                }\n            }\n        }           \n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code> or <code>202</code> responses for all <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"head\": {\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"OK\"\n    }\n    \"404\": {\n        \"description\": \"Not found\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/404\"\n                }\n            }\n        }           \n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-array-items-notype": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Array header has no type of items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header does not specify the type of items it can contain.</p>\n                    <p>Open API Specification (OAS) v2 <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">requires the <code>type</code> property for <code>items</code> objects</a>. However, most OAS v2 validators do not raise an error on <code>items</code> that do not have <code>type</code> set.</p>\n                "
    },
    "shortDescription": "An array header does not specify the type of items it can contain.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The response header contains an array but the type of its elements is not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"description\": \"Record Ids\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Your API has been designed to return specific data. Attackers typically want to make the API to change its behavior and return different or more data than it is supposed to. A particular API failure might leak some other data, such as records or stack trace.</p>\n                    <p>Locking down your response headers to specific types reduces this risk.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure your array header includes the <code>type</code> property for the items the array accepts:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"description\": \"Record Ids\",\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-array-maxitems": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Array header has no maximum number of items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header does not specify the maximum number of items it can contain.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array header does not specify the maximum number of items it can contain.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"someArray\",\n  \"in\": \"header\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\",\n    \"pattern\": ^((4\\d{3})|(5[1-5]\\d{2})|(6011))-?\\d{4}-?\\d{4}-?\\d{4}|3[4,7]\\d{13}$\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>APIs are typically designed to return a limited amount of data. For example, you may have an API that returns a particular user profile information, a specific record, or a page of items to display in a web or mobile application.</p>\n                    <p>Attackers may try to exploit your backend implementation to instead force it to return a larger set of data, like records of all users.</p>\n                    <p>If you have not enforced limits on the amount of data your API can return, this exploit can succeed and lead to a massive data breach.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxItems</code> property for returned arrays as a safety check against data breaches:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\"> \"name\": \"someArray\",\n  \"in\": \"header\",\n  \"type\": \"array\",\n  \"maxItems\": 3,\n    \"type\": \"string\",\n    \"pattern\": ^((4\\d{3})|(5[1-5]\\d{2})|(6011))-?\\d{4}-?\\d{4}-?\\d{4}|3[4,7]\\d{13}$\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-array-numerical-format": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Array header with numeric items has no format defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header containing numeric items does not specify the format of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array header containing numeric items does not specify the format of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The API response returns an array containing <code>integer</code> values in the response header, but does not specify the format of the values:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. It is unlikely that the difference between the format of numeric items can cause a significant breach, but we highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define the <code>format</code> property for the numeric items in array headers. This provides an extra layer of safety ensuring that your API only returns data formats that you expect it to return.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-array-numerical-max": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Array header with numeric items has no maximum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header containing numeric items does not specify the maximum value of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array header containing numeric items does not specify the maximum value of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array header accepts items of the type <code>integer</code> but does not specify the maximum value for them:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric items. This provides an extra layer of safety ensuring that your API only returns data that you expect it to return.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"minimum\": 0,\n            \"maximum\": 100\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-array-numerical-min": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Array header with numeric items has no minimum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header containing numeric items does not specify the minimum value of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array header containing numeric items does not specify the minimum value of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array header accepts items of the type <code>integer</code> but does not specify the minimum value for them:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric items. This provides an extra layer of safety ensuring that your API only returns data that you expect it to return.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"minimum\": 0,\n            \"maximum\": 100\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-array-string-loosepattern": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Pattern for string items in an array header is too loose</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header containing string items specifies too loosely defined pattern for the strings. The pattern does not actually limit what can be included in response headers.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array header containing string items specifies too loosely defined pattern for the strings. The pattern does not actually limit what can be included in response headers.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array header accepts items of the type <code>string</code> but the pattern of the items is not precise enough:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"pattern\": \".*\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Your API has been designed to return specific data. If you define too loose pattern for strings, you do not actually limit what can be included in response headers.</p>\n                    <p>Attackers typically want to make the API to change its behavior and return different data than it is supposed to. A particular API failure might leak some other data, such as records or stack trace.</p>\n                    <p>Locking down the pattern of strings in your response headers helps reduce this risk.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string items in array headers. This ensures that only strings matching the pattern can be included in the response header.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-array-string-maxlength": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Array header with string items has no maximum length defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header containing string items does not define the maximum length for the accepted strings.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array header containing string items does not define the maximum length for the accepted strings.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array header accepts items of the type <code>string</code> of unlimited length:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n            \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxLength</code> property in array headers with string items. This provides an extra layer of safety ensuring that your API only returns data that you expect it to return.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"maxLength\": 8\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>We also recommend that you specify a regular expression to further lock down the expected string format.</p>\n                "
        }
      ]
    }
  },
  "response-header-array-string-pattern": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Array header with string items has no pattern defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array header containing string items does not define any pattern for the accepted strings. This means that it does not limit the values that can be included in the response header.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array header containing string items does not define any pattern for the accepted strings. This means that it does not limit the values that can be included in the response header.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because no pattern is defined, the array in the header can include strings of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Your API has been designed to return specific data. If you define too loose pattern for strings, you do not actually limit what can be included in response headers.</p>\n                    <p>Attackers typically want to make the API to change its behavior and return different data than it is supposed to. A particular API failure might leak some other data, such as records or stack trace.</p>\n                    <p>Locking down the pattern of strings in your response headers helps reduce this risk.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string items in array headers. This ensures that only strings matching the pattern can be included in the response header.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-numerical-format": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Numeric header has no format defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A numeric header does not have the accepted format specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A numeric header does not have the accepted format specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The header <code>type</code> is set to <code>integer</code> but the format is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. It is unlikely that the difference between the format of numeric items can cause a significant breach, but we highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>format</code> of numeric headers. This provides an extra layer of safety ensuring that your API only returns data formats that you expect it to return.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-numerical-max": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Numeric header has no maximum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more numeric headers in your API has no maximum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more numeric headers in your API has no maximum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The header <code>type</code> is set to <code>integer</code> but the maximum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric headers. This provides an extra layer of safety ensuring that your API only returns data formats that you expect it to return.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"minimum\":0,\n          \"maximum\":100\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-numerical-min": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Numeric header has no minimum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more numeric headers in your API has no minimum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more numeric headers in your API has no minimum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The header <code>type</code> is set to <code>integer</code> but the minimum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric headers. This provides an extra layer of safety ensuring that your API only returns data formats that you expect it to return.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"minimum\":0,\n          \"maximum\":100\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-header-string-loosepattern": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>Pattern for string header is too loose</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The pattern for a string header is too loosely defined. It does not actually limit what can be included in the response header.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The pattern for a string header is too loosely defined. It does not actually limit what can be included in the response header.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The defined pattern is so loose that the response header can effectively include any string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \".*\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Your API has been designed to return specific data. If you define too loose pattern for strings, you do not actually limit what can be included in response headers.</p>\n                    <p>Attackers typically want to make the API to change its behavior and return different data than it is supposed to. A particular API failure might leak some other data, such as records or stack trace.</p>\n                    <p>Locking down the pattern of strings in your response headers helps reduce this risk.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of the string header. This ensures that only strings matching the pattern can be included in the response header.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n          }\n        }\n      }\n    }\n  }\n}</code><code class=\"language-json\"></code></pre>"
        }
      ]
    }
  },
  "response-header-string-maxlength": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>String header has no maximum length defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A string header does not specify the maximum length for the accepted strings.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A string header does not specify the maximum length for the accepted strings.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API produces in each method.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxLength</code> property for string headers. This provides an extra layer of safety ensuring that your API only returns data that you expect it to return.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"string\",\n          \"maxLength\": 8\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>We also recommend that you specify a regular expression to further lock down the expected string format.</p>\n                "
        }
      ]
    }
  },
  "response-header-string-pattern": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>String header has no pattern defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A string header does not define any pattern for the accepted strings. This means that you do not limit the values that your API can include in the response header.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A string header does not define any pattern for the accepted strings. This means that you do not limit the values that your API can include in the response header.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because no pattern is defined, the response header can include a string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Your API has been designed to return specific data. If you define too loose pattern for strings, you do not actually limit what can be included in response headers.</p>\n                    <p>Attackers typically want to make the API to change its behavior and return different data than it is supposed to. A particular API failure might leak some other data, such as records or stack trace.</p>\n                    <p>Locking down the pattern of strings in your response headers helps reduce this risk.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of the string header. This ensures that only strings matching the pattern can be included in the response header.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"string\",\n          \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n          }\n        }\n      }\n    }\n  }\n}</code><code class=\"language-json\"></code></pre>"
        }
      ]
    }
  },
  "response-options-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>200 response should be defined for OPTIONS operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>OPTIONS</code> operations in your API must have the <code>200</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3.1\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>OPTIONS</code> operations in your API must have the <code>200</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"options\": {\n    \"description\": \"Returns allowed methods\",\n     ...\n    \"responses\": {\n    \"429\": {\n        \"description\": \"Too many requests\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/429\"\n                }\n            }\n        }           \n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code> responses for all <code>OPTIONS</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"options\": {\n    \"description\": \"Returns allowed methods\",\n     ...\n    \"responses\": {\n       \"200\": {\n         \"description\": \"OK\",\n         \"headers\": {\n           \"Allow\": \"GET, HEAD, PUT\"\n         }\n        \"429\": {\n        \"description\": \"Too many requests\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/429\"\n                }\n            }\n        }       \n     }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-patch-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for PATCH operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>PATCH</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>PATCH</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"patch\": {\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>PATCH</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"patch\": {\n    ...\n    \"responses\": {\n      \"204\": {\n        \"description\": \"Updated\"\n      }\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-post-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for POST operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>POST</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>POST</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>POST</code> operation.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" style=\"color: #333333;\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">    \"responses\": {\n      \"204\": {\n        \"description\": \"OK\"\n      }\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-put-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for PUT operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>PUT</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>PUT</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"put\": {\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>PUT</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"put\": {\n    ...\n    \"responses\": {\n      \"204\": {\n       \"description\": \"Updated\"\n      }\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/definitions/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-schema-defined": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>Response that should not contain a body has a schema defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a schema for one or more responses that should not contain a body:</p>\n                    <ul>\n                        <li value=\"1\">The operation in question is <code>HEAD</code> (no content allowed for <code>HEAD</code> responses), see <a href=\"https://tools.ietf.org/html/rfc7231#section-4.3.2\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</li>\n                        <li value=\"2\">The returned HTTP status code is <code>204</code> or <code>304</code> (no content allowed for these codes), see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3.5\" target=\"_blank\" rel=\"noopener\">RFC 7231</a> and <a href=\"https://tools.ietf.org/html/rfc7232#section-4.1\" target=\"_blank\" rel=\"noopener\">RFC 7232</a>.</li>\n                    </ul>\n                "
    },
    "shortDescription": "You have defined a schema for one or more responses that should not contain a body:",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"204\": {\n    \"description\": \"No content\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove the schema for all responses that should not contain a body.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"204\": {\n    \"description\": \"No content\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "response-schema-undefined": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>Response that should contain a body has no schema defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have not defined any schemas for responses that should contain a body.</p>\n                    <p>Empty or no schemas for responses are only acceptable for responses that do not have any content:</p>\n                    <ul>\n                        <li value=\"1\">The operation in question is <code>HEAD</code> (no content allowed for <code>HEAD</code> responses), see <a href=\"https://tools.ietf.org/html/rfc7231#section-4.3.2\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</li>\n                        <li value=\"2\">The returned HTTP status code is <code>204</code> or <code>304</code> (no content allowed for these codes), see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3.5\" target=\"_blank\" rel=\"noopener\">RFC 7231</a> and <a href=\"https://tools.ietf.org/html/rfc7232#section-4.1\" target=\"_blank\" rel=\"noopener\">RFC 7232</a>.</li>\n                    </ul>\n                "
    },
    "shortDescription": "You have not defined any schemas for responses that should contain a body.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"OK\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define schemas for all responses that should have a body.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"pet response\",\n      \"schema\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/definitions/Pet\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>Alternatively, if you do not want to include a body, you can change the HTTP status code in the response to one that should not have a body.</p>\n                "
        }
      ]
    }
  },
  "schema-additionalproperties-boolean": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema defines 'additionalProperties' as a boolean value</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema defines <code>additionalProperties</code> as a boolean value.</p>\n                    <p>The reason <code>additionalProperties</code> takes a boolean value comes from the role the attribute plays in JSON schemas. <strong>In JSON</strong>, by default, any object can also accept additional properties that are not defined in its schema as long as the properties defined in the schema are present. To change this behavior and stop allowing any additional properties to those explicitly defined in the schema, you can set <code>additionalProperties</code> to <code>false</code>.</p>\n                    <p>OpenAPI Specification (OAS) v2 does not define this behavior, and the current tooling (such as parsers and codegen) does not support it. Instead, they only accept the value <code>object</code> for this property. Thus, it is not recommended to use boolean values.</p>\n                    <p>However, OAS v2 does support using <code>additionalProperties</code> to specify a schema to which the additional properties must conform.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema defines <code>additionalProperties</code> as a boolean value.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Here, <code>additionalProperties</code> is set to <code>false</code>. This behavior is supported in regular JSON but <strong>not</strong> in OAS v2:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"22\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"additionalProperties\": \"false\"\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>While it is unlikely that attackers will be able to <em>directly</em> breach your API because of a boolean value for <code>additionalProperties</code>, it may still pose a risk to API security. Because this is not a documented part of the OAS, the API implementation may not behave according to developer expectations. Such a discrepancy has an inherent risk and is not recommended.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>If you need to allow additional properties, use <code>additionalProperties</code> to provide the schema that you want to support. For example:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"23\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"additionalProperties\": {\n          \"type\" : \"string\"\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    }
  },
  "schema-array-items-notype": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema has no type of items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more array schemas does not specify the type of items it can contain.</p>\n                    <p>Open API Specification (OAS) v2 <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">requires the <code>type</code> property for <code>items</code> objects</a>. However, most OAS v2 validators do not raise an error on <code>items</code> that do not have <code>type</code> set.</p>\n                "
    },
    "shortDescription": "One or more array schemas does not specify the type of items it can contain.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"21-22\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If an array does not specify <code>type</code> property for the <code>items</code> in it, users cannot tell the data type of items your API expects. The users may try to send data of unexpected type to your API, which could cause the backend server crash.</p>\n                    <p>In addition, protection services based on OpenAPI definitions are not able to filter out items of unexpected data types. Attackers can try various types for the items, which again could crash the backend server.</p>\n                    <p>When your backend server crashes, the error messages or exception trace could leak information on the implementation of your services. Attackers could then use to this information to make further attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure your array schema includes the <code>type</code> property for the items the array accepts:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"23\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    }
  },
  "schema-array-maxitems": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema has no maximum number of items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema does not specify the maximum number of items it can contain.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema does not specify the maximum number of items it can contain.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"21\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If an array does not specify the maximum number of items in it, attackers may try to submit a call with extremely large number of array entries. This could to make your JSON parser module crash or cause a buffer overflow.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxItems</code> property to ensure that the schema only allows calls of reasonable size:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"22\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"maxItems\": 3,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    }
  },
  "schema-array-numerical-format": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema with numeric items has no format defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema containing numeric items does not specify the format of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema containing numeric items does not specify the format of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array schema accepts items of the type <code>integer</code> but their format is not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Add a new lock combination\",\n  \"operationId\": \"addCombo\",\n  \"parameters\": [\n    {\n      \"name\": \"lockCombo\",\n      \"in\": \"body\",\n      \"description\": \"Lock combination to add to the list\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"combination\"\n        ],\n        \"properties\": {\n        \"combination\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not specify the format of numeric values, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define the <code>format</code> parameter for numeric items in array schemas. This ensures that only parameters of the expected format get passed to the backend.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"22\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Add a new lock combination\",\n  \"operationId\": \"addCombo\",\n  \"parameters\": [\n    {\n      \"name\": \"lockCombo\",\n      \"in\": \"body\",\n      \"description\": \"Lock combination to add to the list\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"combination\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 9,\n            \"format\": \"int32\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    }
  },
  "schema-array-numerical-max": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema with numeric items has no maximum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema containing numeric items does not specify the maximum value of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema containing numeric items does not specify the maximum value of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array schema accepts items of the type <code>integer</code> but does not specify the maximum value for them:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Add a new lock combination\",\n  \"operationId\": \"addCombo\",\n  \"parameters\": [\n    {\n      \"name\": \"lockCombo\",\n      \"in\": \"body\",\n      \"description\": \"Lock combination to add to the list\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"combination\"\n        ],\n        \"properties\": {\n        \"combination\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters in arrays to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"20-21\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Add a new lock combination\",\n  \"operationId\": \"addCombo\",\n  \"parameters\": [\n    {\n      \"name\": \"lockCombo\",\n      \"in\": \"body\",\n      \"description\": \"Lock combination to add to the list\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"combination\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 9,\n            \"format\": \"int32\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    }
  },
  "schema-array-numerical-min": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema with numeric items has no minimum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema containing numeric items does not specify the minimum value of the items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema containing numeric items does not specify the minimum value of the items.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array schema accepts items of the type <code>integer</code> but does not specify the minimum value for them:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Add a new lock combination\",\n  \"operationId\": \"addCombo\",\n  \"parameters\": [\n    {\n      \"name\": \"lockCombo\",\n      \"in\": \"body\",\n      \"description\": \"Lock combination to add to the list\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"combination\"\n        ],\n        \"properties\": {\n        \"combination\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters in arrays to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"20-21\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Add a new lock combination\",\n  \"operationId\": \"addCombo\",\n  \"parameters\": [\n    {\n      \"name\": \"lockCombo\",\n      \"in\": \"body\",\n      \"description\": \"Lock combination to add to the list\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"combination\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"integer\",\n            \"minimum\": 0,\n            \"maximum\": 9,\n            \"format\": \"int32\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    }
  },
  "schema-array-string-loosepattern": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Pattern for string items in an array schema is too loose</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema containing string items specifies too loosely defined pattern for the strings. The pattern does not actually limit what gets passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema containing string items specifies too loosely defined pattern for the strings. The pattern does not actually limit what gets passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array accepts items of the type <code>string</code> but the pattern of the items is not precise enough:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"23\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n             \"type\": \"string\",\n             \"pattern\": \".*\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you define too loose pattern for strings, you do not actually limit what is accepted as the input. This could open your backend server to various attacks, like SQL injections or buffer overflows.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"23\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n             \"type\": \"string\",\n             \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\",\n             \"maxLength\": 10\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    }
  },
  "schema-array-string-maxlength": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema with string items has no maximum length defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema containing string items does not define the maximum length for the accepted strings.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema containing string items does not define the maximum length for the accepted strings.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The array schema accepts items of the type <code>string</code> of unlimited length:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"22\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n             \"type\": \"string\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the length of strings, attackers can send longer strings to your API than what your backend server can handle. This could overload your backend server and make it crash. In some cases, this could cause a buffer overflow and allow for executing arbitrary code. Long strings are also more prone to injection attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxLength</code> property in array schemas with string items to ensure that only strings of the expected size get passed to your API:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n             \"type\": \"string\",\n             \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\",\n             \"maxLength\": 10\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    }
  },
  "schema-array-string-pattern": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema with string items has no pattern defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema containing string items does not define any pattern for the accepted strings. This means that you do not limit the values that get passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema containing string items does not define any pattern for the accepted strings. This means that you do not limit the values that get passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because no pattern is defined, the array schema can include strings of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"22\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n             \"type\": \"string\"\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define a pattern for strings, any string is accepted as the input. This could open your backend server to various attacks, such as SQL injection.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"23\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"favfood\": {\n          \"type\": \"array\",\n          \"items\": {\n             \"type\": \"string\",\n             \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\",\n             \"maxLength\": 10\n          }\n        }\n      }\n    }\n   ],</code></pre>"
        }
      ]
    }
  },
  "schema-empty": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema is empty</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema is empty. This means that your API accepts any JSON values.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema is empty. This means that your API accepts any JSON values.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The method <code>POST</code> accepts a JSON payload in the <code>body</code> but does not specify the <code>schema</code> of the payload:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {    }\n    }\n  ]\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If do not clearly define the schema and properties of a JSON payload empty, you effectively allow attackers to pass in any data. This means that you are opening your backend to various attacks, such as SQL injection.</p>\n                    <p>This also lets attackers to try various unexpected inputs. Unexpected inputs may cause the backend server to crash or behave in an unexpected way. This in turn may cause the server to potentially leak stack trace that can be used for further attacks, or even data.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define schemas for all JSON payloads. Here, a specific JSON object <code>NewPet</code> is defined in <code>#/definitions</code> and referenced as the <code>schema</code> for the API method:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#/definitions/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n</code></pre>"
        }
      ]
    }
  },
  "schema-notype": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema does not define the type of JSON values</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API defines a schema for a JSON payload. However, the schema does not define the types of the values in it. </p>\n                    <p>If you define a set of properties in a schema but do not define the type of the properties, the schema does not enforce any limits to what is accepted. It is not enough to define the type of properties in the properties themselves, if the type  for the schema is not defined, it still accepts anything.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API defines a schema for a JSON payload. However, the schema does not define the types of the values in it. ",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The object <code>NewPet</code> is defined in <code>#/definitions</code> and referenced as the <code>schema</code> for the API method. However, the types of the properties in the object (<code>name</code> and <code>tag</code>) are not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24-28\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#/definitions/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If do not clearly define the schema and properties of a JSON payload empty, you effectively allow attackers to pass in any data. This means that you are opening your backend to various attacks, such as SQL injection.</p>\n                    <p>This also lets attackers to try various unexpected inputs. Unexpected inputs may cause the backend server to crash or behave in an unexpected way. This in turn may cause the server to potentially leak stack trace that can be used for further attacks, or even data.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define all properties of the accepted JSON payload and set <code>additionalProperties</code> to <code>false</code> to enforce limitations to what the schema accepts.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24-31\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#/definitions/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n</code></pre>"
        }
      ]
    }
  },
  "schema-numerical-format": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Numeric schema has no format defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A numeric schema does not have the accepted format specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A numeric schema does not have the accepted format specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The property <code>type</code> is set to <code>integer</code> but the format is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"21\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not specify the format of numeric values, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>format</code> of numeric properties in schemas. This ensures that only parameters of the expected format get passed to the backend.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"maximum\": 100,\n          \"format\": \"int32\"\n        }\n      }\n    }\n   ]\n }\n}</code></pre>"
        }
      ]
    }
  },
  "schema-numerical-max": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Numeric schema has no maximum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A numeric schema has no maximum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A numeric schema has no maximum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The property <code>type</code> is set to <code>integer</code> but the maximum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"21\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"22-23\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"maximum\": 100,\n          \"format\": \"int32\"\n        }\n      }\n    }\n   ]\n }\n}</code></pre>"
        }
      ]
    }
  },
  "schema-numerical-min": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Numeric schema has no minimum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A numeric schema has no minimum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A numeric schema has no minimum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The property <code>type</code> is set to <code>integer</code> but the minimum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"21\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"22-23\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\",\n          \"minimum\": 0,\n          \"maximum\": 100,\n          \"format\": \"int32\"\n        }\n      }\n    }\n   ]\n }\n}</code></pre>"
        }
      ]
    }
  },
  "schema-object-without-properties": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema of a JSON object has no properties defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema for a JSON payload does not have any properties defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema for a JSON payload does not have any properties defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The method defines the <code>schema</code> as the JSON payload <code>NewPet</code>. However, the actual content of that JSON object is not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18-21\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#/definitions/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"description\": \"JSON defining a Pet object\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If do not clearly define the schema and properties of a JSON payload empty, you effectively allow attackers to pass in any data. This means that you are opening your backend to various attacks, such as SQL injection.</p>\n                    <p>This also lets attackers to try various unexpected inputs. Unexpected inputs may cause the backend server to crash or behave in an unexpected way. This in turn may cause the server to potentially leak stack trace that can be used for further attacks, or even data.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define all properties of the accepted JSON payload and set <code>additionalProperties</code> to <code>false</code> to enforce limitations to what the schema accepts.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24-31\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#/definitions/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n</code></pre>"
        }
      ]
    }
  },
  "schema-string-loosepattern": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Pattern for string schema is too loose</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The pattern for a string schema is too loosely defined. It does not actually limit what gets passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The pattern for a string schema is too loosely defined. It does not actually limit what gets passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The defined pattern is so loose that the API effectively accepts any string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"pattern\": \".*\"\n        }       \n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you define too loose pattern for strings, you do not actually limit what is accepted as the input. This could open your backend server to various attacks, like SQL injections or buffer overflows.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"20\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"maxLength\": 10,\n          \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n          \n        }       \n      }\n    }\n   ]\n  }\n </code></pre>"
        }
      ]
    }
  },
  "schema-string-maxlength": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>String schema has no maximum length defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A string schema does not specify the maximum length for the accepted strings.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A string schema does not specify the maximum length for the accepted strings.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }       \n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the length of strings, attackers can send longer strings to your API than what your backend server can handle. This could overload your backend server and make it crash. In some cases, this could cause a buffer overflow and allow for executing arbitrary code. Long strings are also more prone to injection attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxLength</code> property in string schemas to ensure that only strings of the expected size get passed to your API:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"maxLength\": 10,\n          \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n          \n        }       \n      }\n    }\n   ]\n  }\n </code></pre>"
        },
        {
          "text": "\n                    <p>We also recommend that you specify a regular expression to further lock down the expected string format.</p>\n                "
        }
      ]
    }
  },
  "schema-string-pattern": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>String schema has no pattern defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A string schema does not define any pattern for the accepted strings. This means that it does not limit the values that get passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A string schema does not define any pattern for the accepted strings. This means that it does not limit the values that get passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because no pattern is defined, the API accepts a string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        }       \n      }\n    }\n   ]\n  }\n }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define a pattern for strings, any string is accepted as the input. This could open your backend server to various attacks, such as SQL injection.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"20\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the store\",\n      \"required\": true,\n      \"schema\": {\n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n        \"name\": {\n          \"type\": \"string\",\n          \"maxLength\": 10,\n          \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n          \n        }       \n      }\n    }\n   ]\n  }\n </code></pre>"
        }
      ]
    }
  },
  "semantic-discriminator-required": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Value of the schema discriminator must be a required property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value of the <code>discriminator</code> property in the schema in question has not been listed as a required property. The value of the <code>discriminator</code> property must be a string.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schema-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The value of the <code>discriminator</code> property in the schema in question has not been listed as a required property. The value of the <code>discriminator</code> property must be a string.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the discriminator <code>petType</code> is not included in the required properties:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 14\" xml:space=\"preserve\"><code class=\"language-json\">\"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all discriminator values are listed as required properties.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 16\" xml:space=\"preserve\"><code class=\"language-json\">\"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-discriminator-string": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema discriminator property must be a string</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a discriminator that is not a string. Discriminator values must always be of the type <code>string</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined a discriminator that is not a string. Discriminator values must always be of the type <code>string</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the type of the discriminator <code>age</code> is <code>integer</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"age\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"age\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all discriminator values are strings.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5, 11\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"age\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"age\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-discriminator-value": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema discriminator property must match a property with the same name</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The discriminator of the schema in question must match a property with the same name.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The discriminator of the schema in question must match a property with the same name.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the discriminator value is <code>animalType</code> but the defined property is actually called <code>petType</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 10, 16\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"animalType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"animalType\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all discriminator values match defined properties.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 10, 16\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-global-securityrequirement-unreferenced": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Security field references a security scheme not defined in '#/securityDefinitions'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.</p>\n                    <p>The <code>security</code> field specifies what kind of authentication your API requires, either on global level for the whole API or for individual API operations.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#securityDefinitionsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>security</code> field references an OAuth security scheme, but this scheme has not been defined in <code>securityDefinitions</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5, 14\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    }\n  },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": [],\n      \"OAuth2\": [ \"readOnly\" ]\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all security schemes that the <code>security</code> field references are defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9, 19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    }\n     \"OAuth2\": {\n       \"type\": \"oauth2\",\n       \"flow\": \"accessCode\",\n       \"scopes\": {\n        ...\n     },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": []\n      \"OAuth2\": [ \"readOnly\" ]\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-header-default-invalid": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Default value for the header is not consistent with the header's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The default value you have defined for a header is not consistent with the type of the header.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The default value you have defined for a header is not consistent with the type of the header.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The header parameter accepts integer values but the default value is a string.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"headers\": {\n              \"x-internal-id\": {\n                \"type\": \"integer\",\n                \"default\": \"none\",\n                ...\n              }\n          }\n     }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all default values for headers match the header type.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"headers\": {\n              \"x-internal-id\": {\n                \"type\": \"integer\",\n                \"default\": 0,\n                ...\n              }\n          }\n     }\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-header-enum-type-incompatible": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Enum value for the header is not consistent with the header's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The enum value you have specified for a header does not match the type of the header.</p>\n                "
    },
    "shortDescription": "The enum value you have specified for a header does not match the type of the header.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all enum values for headers match the type of the header.</p>\n                "
        }
      ]
    }
  },
  "semantic-host-undefined": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>At least one host must be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have not defined any hosts in your API definition.</p>\n                    <p>According to the Open API Specification (OAS), the top-level property <code>host</code> is optional and if not present, the host and the port serving the API documentation are used. However, there is no host serving the documentation for the APIs in 42Crunch Platform, so Security Audit cannot infer the host.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#swagger-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have not defined any hosts in your API definition.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"description\": \"My example API\",\n    \"version\": \"1.0.0\",\n    \"title\": \"My API\",\n  },\n  \"paths\": {\n  ...</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined at least one host for your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"description\": \"My example API\",\n    \"version\": \"1.0.0\",\n    \"title\": \"My API\",\n  },\n  \"host\": \"my.api.com:8090\",\n  \"paths\": {\n  ...  </code></pre>"
        }
      ]
    }
  },
  "semantic-item-default-invalid": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Default value for the array item is not consistent with the item's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The default value you have defined for an array item is not consistent with the type of the item.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The default value you have defined for an array item is not consistent with the type of the item.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The property <code>count</code> only accepts integer values, but the default value is a string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{         \n  \"type\": \"array\",\n     \"items\": {\n       \"type\": \"object\",\n       \"properties\": {\n         \"count\": {\n           \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"default\": \"none\",\n          ...\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all default values for array items match the array items' type.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{         \n  \"type\": \"array\",\n     \"items\": {\n       \"type\": \"object\",\n       \"properties\": {\n         \"count\": {\n           \"type\": \"integer\",\n          \"format\": \"int32\",\n          \"default\": 0,\n          ...\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-item-enum-type-incompatible": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Enum value for the items of an array is not consistent with the items type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The enum value in an array does not match the type your have specified for the items in the array.</p>\n                "
    },
    "shortDescription": "The enum value in an array does not match the type your have specified for the items in the array.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all enum values in arrays match the type defined for the items.</p>\n                "
        }
      ]
    }
  },
  "semantic-operation-body-formdata": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Operation defines both a body parameter and a 'formData' parameter</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The operation in question has a body parameter and a <code>formData</code> parameter defined. It can have only one of these two.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The operation in question has a body parameter and a <code>formData</code> parameter defined. It can have only one of these two.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all operations have only one body parameter or<code>formData</code> parameter defined.</p>\n                "
        }
      ]
    }
  },
  "semantic-operation-example": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Example is not consistent with 'mediaType' defined in the operation's 'produces' property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The example of the operation in question is not consistent with the MIME type defined in the <code>produces</code> property of the operation.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The example of the operation in question is not consistent with the MIME type defined in the <code>produces</code> property of the operation.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all examples of the operations are consistent with the MIME type defined in the <code>produces</code> property.</p>\n                "
        }
      ]
    }
  },
  "semantic-operation-id": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>'OperationId' is not unique throughout the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The operation does not have a unique <code>operationID</code>. All operations in your API must have unique operation IDs.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The operation does not have a unique <code>operationID</code>. All operations in your API must have unique operation IDs.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all operations in your API have a unique <code>operationID</code>.</p>\n                "
        }
      ]
    }
  },
  "semantic-operation-multiple-body": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Operation defines multiple body parameters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The operation in question defines multiple body parameters. Only one body parameter is allowed.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#operationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The operation in question defines multiple body parameters. Only one body parameter is allowed.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all operations have only one body parameter.</p>\n                "
        }
      ]
    }
  },
  "semantic-operation-securityrequirement-unreferenced": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Security field of the operation references a security scheme not defined in '#/securityDefinitions'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.</p>\n                    <p>The <code>security</code> field specifies what kind of authentication your API requires, either on global level for the whole API or for individual API operations.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#securityDefinitionsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>security</code> field references an OAuth security scheme, but this scheme has not been defined in <code>securityDefinitions</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5, 14\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    }\n  },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": [],\n      \"OAuth2\": [ \"readOnly\" ]\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all security schemes that the <code>security</code> field references are defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9, 19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    }\n     \"OAuth2\": {\n       \"type\": \"oauth2\",\n       \"flow\": \"accessCode\",\n       \"scopes\": {\n        ...\n     },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": []\n      \"OAuth2\": [ \"readOnly\" ]\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-parameter-default-invalid": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Default value for the parameter is not consistent with the parameter's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The default value you have defined for a parameter is not consistent with the type of the parameter.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The default value you have defined for a parameter is not consistent with the type of the parameter.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The parameter type is set to <code>integer</code>, but the default value is a string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  parameters {    \n        \"type\": \"integer\",\n        \"format\": \"int32\",\n        \"default\": \"none\",\n        \"description\": \"The total number of results.\",\n          ...\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all default values for parameters match the parameter type.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{ \n  parameters {    \n        \"type\": \"integer\",\n        \"format\": \"int32\",\n        \"default\": 0,\n        \"description\": \"The total number of results.\",\n          ...\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "semantic-parameter-enum-type-incompatible": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Enum value for the parameter is not consistent with the parameter's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The enum value you have specified for a parameter does not match the parameter type.</p>\n                "
    },
    "shortDescription": "The enum value you have specified for a parameter does not match the parameter type.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all enum values for parameters match the parameter type.</p>\n                "
        }
      ]
    }
  },
  "semantic-parameter-file": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>File parameter is used in an operation where the 'consumes' property does not allow it</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter <code>file</code> is used in an operation where the <code>consumes</code> property does not allow it. This can happen if you have <em>not</em> defined the <code>consumes</code> property as:</p>\n                    <ul>\n                        <li value=\"1\"><code>multipart/form-data</code>\n                        </li>\n                        <li value=\"2\"><code>application/x-www-form-urlencoded</code>\n                        </li>\n                    </ul>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter <code>file</code> is used in an operation where the <code>consumes</code> property does not allow it. This can happen if you have <em>not</em> defined the <code>consumes</code> property as:",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>consumes</code> property allows using the <code>file</code> parameter, or remove the parameter.</p>\n                "
        }
      ]
    }
  },
  "semantic-parameter-namein-multiple": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Parameters have the same name + in combination</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Two or more parameters have the same <code>nameIn</code> combination (parameter <code>name</code> + <code>in</code>). The <code>nameIn</code> combinations must be unique.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Two or more parameters have the same <code>nameIn</code> combination (parameter <code>name</code> + <code>in</code>). The <code>nameIn</code> combinations must be unique.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all parameters have unique <code>nameIn</code> combinations.</p>\n                "
        }
      ]
    }
  },
  "semantic-parameter-namein-multiple-header": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Header parameters have the same name</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Two or more header parameters have properties <code>name</code> that are considered equal. </p>\n                    <p>While parameter names normally are case-sensitive, <a href=\"https://tools.ietf.org/html/rfc7230\" target=\"_blank\">RFC 7230</a> states that HTTP header names are not. The OpenAPI Specification (OAS) does therefore not consider header parameters names as case-sensitive, so names like <code>content-type</code> and <code>Content-Type</code> are considered equal. You should not have equal header parameters in your OpenAPI definition.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Two or more header parameters have properties <code>name</code> that are considered equal. ",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 10\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"name\": \"Auth-Token\",\n    \"in\": \"header\",\n    \"description\": \"Auth-Token\",\n    \"required\": true,\n    \"type\": \"string\"\n},\n...\n{\n    \"name\": \"auth-token\",\n    \"in\": \"header\",\n    \"description\": \"Authorization token for user\",\n    \"required\": true,\n    \"type\": \"string\"\n},</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all header parameters have unique <code>name</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 10\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"name\": \"Auth-Token\",\n    \"in\": \"header\",\n    \"description\": \"Auth-Token\",\n    \"required\": true,\n    \"type\": \"string\"\n},\n...\n{\n    \"name\": \"auth-token-user\",\n    \"in\": \"header\",\n    \"description\": \"Authorization token for user\",\n    \"required\": true,\n    \"type\": \"string\"\n},</code></pre>"
        }
      ]
    }
  },
  "semantic-parameter-nopathtemplate": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Path parameter in the path has no corresponding path template</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The path parameter in question does not have a corresponding path template.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The path parameter in question does not have a corresponding path template.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all path parameters have corresponding path templates, or remove the parameters that do not have them.</p>\n                "
        }
      ]
    }
  },
  "semantic-parameter-path-name-empty": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Path template for the path is empty</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The path template for the path in question is empty and has not been defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#path-templating\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The path template for the path in question is empty and has not been defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all paths have path templates defined.</p>\n                "
        }
      ]
    }
  },
  "semantic-parameter-path-undefined": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Path template has no corresponding path parameter definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The path in question includes one ore more path parameters that do not have corresponding parameters in the path template.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The path in question includes one ore more path parameters that do not have corresponding parameters in the path template.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all path parameters have corresponding parameters in the path templates, or remove the parameters that do not correspond the path template.</p>\n                "
        }
      ]
    }
  },
  "semantic-path-equivalent": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Paths are equivalent</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Your API contains paths that are equivalent. In practice, these paths are considered to be identical because there is no way of telling them apart.</p>\n                    <p>This can happen, for example, if you have defined same path but with different parameter name for different operations. The parameter name alone does not make the path unique.</p>\n                    <p>The OpenAPI Specification (OAS) states that all paths must be unique.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#path-item-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Your API contains paths that are equivalent. In practice, these paths are considered to be identical because there is no way of telling them apart.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. <code>GET</code> and <code>PUT</code> operations have the same path but different parameter:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 15\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"paths\":{\n  \n  \"/path/{IDs}\":{\n    \"get\": {\n      \"description\": \"Get the ID list\",\n      \"parameters\": {\n        \"name\": \"IDs\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"type\": \"string\",\n        ...\n      }\n    }\n  }\n  \"/path/{addIDs}\": {\n    \"put\": {\n      \"description\": \"Add IDs to the ID list\",\n      \"parameters\": {\n        \"name\": \"addIDs\",\n        \"in\": \"path\",\n        \"required\": \"true\",\n        \"type\": \"string\",\n      ...</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define a single path <code>/path/{parameter}</code> with multiple operations (here <code>GET</code> and <code>PUT</code>):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"1-2, 12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"/path/{IDs}\": {\n    \"get\": {\n      \"description\": \"Get the ID list\",\n      \"parameters\": {\n        \"name\": \"IDs\",\n        \"in\": \"path\",\n        \"required\": \"true\",\n        \"type\": \"string\",\n      ...\n     }\n   },\n    \"put\": {\n      \"description\": \"Add IDs to the ID list\",\n      \"parameters\": {\n        \"name\": \"addIDs\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"type\": \"string\",\n      ...</code></pre>"
        },
        {
          "text": "\n                    <p>If you need multiple paths, make sure that all paths are considered unique.</p>\n                "
        }
      ]
    }
  },
  "semantic-property-duplicate-key": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema property is not unique throughout 'properties', 'allOf', and 'additionalProperties' fields</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Two or more schema properties have duplicate keys. Schema properties must have unique keys throughout all properties, <code>allOf</code>, and <code>additionalProperties</code> fields.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Two or more schema properties have duplicate keys. Schema properties must have unique keys throughout all properties, <code>allOf</code>, and <code>additionalProperties</code> fields.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all schema properties have unique keys.</p>\n                "
        }
      ]
    }
  },
  "semantic-property-required": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema does not define a required property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more properties that you have defined as <code>required</code> are not defined in the schema.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more properties that you have defined as <code>required</code> are not defined in the schema.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The schema requires the property <code>name</code>, but it has not been defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9, 11-15\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n      \"name\": \"Pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"breed\": {\n            \"type\": \"string\"\n           },\n          \"age\": {\n            \"type\": \"integer\"\n          }\n         }\n       }\n     }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties you have defined as <code>required</code> are also defined in the schema.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9, 12-13\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"name\": {\n             \"type\": \"string\"\n           },\n          \"breed\": {\n            \"type\": \"string\"\n           },\n          \"age\": {\n            \"type\": \"integer\"\n          }\n         }\n       }\n     }</code></pre>"
        }
      ]
    }
  },
  "semantic-schema-default-invalid": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Default value for the schema property is not consistent with the property's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The default value you have defined for a schema property is not consistent with the type of the property.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The default value you have defined for a schema property is not consistent with the type of the property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all default values for schema properties match the property type.</p>\n                "
        }
      ]
    }
  },
  "semantic-schema-enum-type-incompatible": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Enum value for the schema is not consistent with the schema's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The enum value you have specified for a schema does not match the type of the schema.</p>\n                "
    },
    "shortDescription": "The enum value you have specified for a schema does not match the type of the schema.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all enum values for schemas match the type of schema.</p>\n                "
        }
      ]
    }
  },
  "semantic-securityrequirement-nonoauth2scopes": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Security requirement is not an OAuth2 requirement and must not define OAuth2 scopes</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The security requirement in question defines OAuth2 scopes. However, it is not an OAuth2 security requirement, and thus must not define OAuth2 scopes.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-requirement-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The security requirement in question defines OAuth2 scopes. However, it is not an OAuth2 security requirement, and thus must not define OAuth2 scopes.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"14\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n    }\n  },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": [\"readOnly\"]\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that only OAuth2 security requirements define OAuth2 scopes.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"14\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"schemes\": [\n    \"https\"\n  ],\n  ...\n  \"securityDefinitions\": {\n    \"regularSecurity\": {\n      \"type\": \"basic\"\n     }\n   },\n  ...\n  \"security\": [\n    {\n      \"regularSecurity\": []\n    }\n  ],\n  ...\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-http-clear": {
    "group": "security",
    "subgroup": "transport",
    "title": {
      "text": "<h1>API accepts HTTP requests in the clear</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The host server of the API accepts unencrypted connections:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"servers\": [\n      {\n         \"url\": \"http://my.api.com\"\n      }\n   ]\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If your API supports unencrypted HTTP connections, all requests and responses are transmitted in the open. Anyone listening to the network traffic while the calls are being made may intercept them.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <p>Use only secure connections for the servers:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"servers\": [\n      {\n         \"url\": \"https://my.api.com\"\n      }\n   ]\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-security": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Global 'security' field is not defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The global <code>security</code> field of the API has not been defined. This field specifies if your API requires the API consumer to authenticate to use the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#oasObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The global <code>security</code> field of the API has not been defined. This field specifies if your API requires the API consumer to authenticate to use the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The <code>security</code> field is tightly coupled with the <code>securitySchemes</code> objects. The <code>security</code> field could be missing because:</p>\n                    <ul>\n                        <li value=\"1\">You forgot to define the <code>securitySchemes</code> field altogether, leaving the API completely unprotected.</li>\n                        <li value=\"2\">You defined the <code>securitySchemes</code> field but not the <code>security</code> field. The definitions are not actually getting applied.</li>\n                        <li value=\"3\">You defined the <code>securitySchemes</code> field and the operation-level <code>security</code> field for some of the API operations. However, you did not define the <code>security</code> field on the global level for the whole API.</li>\n                    </ul>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not set the global <code>security</code> field, the API does not require any authentication by default. Anyone can use the API operations that do not have a <code>security</code> field defined. All they need to know is the URL for the API operation and how to invoke it.</p>\n                    <p>This sometimes happens to internal APIs. These are often created only to be used inside the company web pages and mobile applications. No one expects any outsiders to know that the API exists, so developers do not spend time implementing security.</p>\n                    <p>But attackers can look at the code of the mobile or web application, or listen to the API traffic, and reverse engineer how the API works. Once the attackers have figured this out, they can start using the API because it does not require any authentication.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>First, define the <code>securityDefinitions</code> or <code>securitySchemes</code> field on the global level, and list the authentication methods that you plan to use. For example:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }</code></pre>"
        },
        {
          "text": "\n                    <p>Then, use the <code>security</code> field on the global level to set the default authentication requirements for the whole API.</p>\n                    <p>If you have more than one definition in <code>securitySchemes</code> and you want to apply all of them for each API call, use the following syntax (semantically AND):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [], \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>If you want to apply only one of the definitions to an API call, use the following syntax (semantically OR):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [] },\n  { \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>You can add an exception to the security specified on the global level on the operation level as needed. This overrides the authentication requirements of the whole API. Simply add a separate <code>security</code> field to the operation in question.</p>\n                "
        }
      ]
    }
  },
  "v3-global-securitydefinitions-undefined": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Reusable security scheme is not defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable security scheme in <code>#/components/securitySchemes</code> has not been defined. This specifies how API clients must authenticate to use your API's operations.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable security scheme in <code>#/components/securitySchemes</code> has not been defined. This specifies how API clients must authenticate to use your API's operations.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The <code>securitySchemes</code> field could be missing altogether, or the field could be empty, with no security schemes specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"components\": {\n  \"securitySchemes\": {\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Without any reusable security schemes, your API does not globally specify any authentication method for consuming the API operations. This means that anyone can use API operations as long as they know the URLs of the operations and how to invoke them.</p>\n                    <p>This sometimes happens to internal APIs. These are often created only to be used inside the company web pages and mobile applications. No one expects any outsiders to know that the API exists, so developers do not spend time implementing security.</p>\n                    <p>But attackers can look at the code of the mobile or web application, or listen to the API traffic, and reverse engineer how the API works. Once the attackers have figured this out, they can start using the API because it does not require any authentication.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>First, define the security schemes in <code>#/components/securitySchemes</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"components\": {\n  \"securitySchemes\": {\n    \"api_key1\": {\n      \"type\": \"apiKey\",\n      \"name\": \"X-Api_Key\",\n      \"in\": \"header\",\n    }\n  }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>Then, use the global <code>security</code> field to set your API to require authentication:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n  { \"api_key1\": [] }\n  ],\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityrequirement-average": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Credentials transported over network</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API accepts credentials (basic authentication credentials or API keys) transported over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#security-scheme-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API accepts credentials (basic authentication credentials or API keys) transported over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Here, the authentication method is specified to be <code>regularSecurity</code> that uses basic authentication:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5,14\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n        \"regularSecurity\": []\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"regularSecurity\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            },\n            \"api_key\": {\n                \"type\": \"apiKey\",\n                \"name\": \"api_key\",\n                \"in\": \"header\"\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can eavesdrop credentials transported over the network and try to intercept the traffic between the API consumer and your API to retrieve them. If they succeed, they can access all API operations protected with the same security requirement until the credentials are specifically revoked or changed. Both basic credentials and API keys have long lifetime providing extended opportunity for exploits.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Use a more secure security definition, like OAuth 2.0. Instead of just credentials, OAuth 2.0 uses access tokens with limited lifetime and authorizations (the scopes) granted that the Resource Owner grants from an authorization server.</p>\n                    <p>An API operation can be consumed only if the request includes an access token and the scopes of the token match the scopes that the API operation requires. Even if attackers successfully retrieved access tokens, they can only use the token on a subset of the API operation and for a limited time.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 14\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n        \"OAuth2\": [\"readOnly\"]\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityrequirement-clearcredentials": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Credentials sent as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Your API accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Your API accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13,23\" xml:space=\"preserve\"><code class=\"language-json\">...\n  {\n  \"security\": [\n    {\n      \"regularSecurity\": []\n    }\n   ]\n  }\n  ...\n  {\n  \"servers\": [\n    {\n      \"url\": \"http://my.api.server.com/\",\n      \"description\": \"API server\"\n    }\n  ]\n}\n...  \n  {\n   \"components\": {\n      \"securitySchemes\": {\n         \"regularSecurity\": {\n            \"type\": \"http\",\n            \"scheme\": \"basic\"\n         }\n      }\n   }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>The <code>security</code> field defines that the API is protected with basic authentication. The reusable security scheme <code>regularSecurity</code> defines that type of the transport protocol is HTTP, which is matched by the URL of the server for the API.</p>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set the transport protocol to HTTPS only so that all traffic is encrypted. You could also improve the security of the authentication method. The OAuth 2.0 Authorization Code flow (Access Code flow in OAS v2) is considered the most secure way to provide API authorization.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 13, 23\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n        \"OAuth2\": [\"readOnly\"]\n        }\n    ]\n}\n...\n{\n    \"servers\": [\n        {\n            \"url\": \"https://my.api.server.com/\",\n            \"description\": \"API server\"\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityrequirement-emptyarray": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field contains an empty array</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>security</code> field of your API contract does not list any security schemes to be applied. Instead, it just contains an empty array.</p>\n                    <p>The top-level <code>security</code> field of the OpenAPI contract contains an array of the security schemes applied to the whole API. The list of values describes alternative security schemes that can be used. There is a logical <code>OR</code> between the security requirements. Individual operations can override the top-level <code>security</code> in the operation-level <code>security</code> fields if needed.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#oasObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>security</code> field of your API contract does not list any security schemes to be applied. Instead, it just contains an empty array.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. An empty array in the <code>security</code> field does not apply any security scheme, and thus does not protect the API:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9-10\" xml:space=\"preserve\"><code class=\"language-json\">{\n  ... \n  \"info\": {\n    \"title\": \"Petstore API\"\n  },\n  \"paths\": {\n...\n  },\n  \"security\": [\n  ]\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Even though you can apply security schemes directly to individual operations, it is strongly recommended that you define your default security schemes on the API level. The operation-level <code>security</code> is meant to be used as an exception-handling mechanism only, not as a best practice.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define default <code>security</code> on the global level for the whole API, and only define exceptions to this on the operation level, if needed.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">...\n                    {\n                    \"security\": [\n                    {\n                    \"OAuth2\": [\"readOnly\"]\n                    }\n                    ]\n                    }\n                    ...\n                    {\n                    \"servers\": [\n                    {\n                    \"url\": \"https://my.api.server.com/\",\n                    \"description\": \"API server\"\n                    }\n                    ]\n                    }\n                    ...  \n                    {\n                    \"components\": {\n                    \"securitySchemes\": {\n                    \"OAuth2\": {\n                    \"type\": \"oauth2\",\n                    \"flows\": {\n                    \"authorizationCode\": {\n                    \"scopes\": {\n                    \"readOnly\": \"read objects in your account\"\n                    },\n                    \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                    \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                    }\n                    }\n                    }\n                    }\n        }</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityrequirement-emptyscheme": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field contains an empty security requirement</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more of the objects defined in the global <code>security</code> field contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API requires. An empty requirement in the <code>security</code> field disables the authentication completely.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#oasObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more of the objects defined in the global <code>security</code> field contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API requires. An empty requirement in the <code>security</code> field disables the authentication completely.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The <code>security</code> field contains an empty object:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"4\" xml:space=\"preserve\"><code class=\"language-json\">...\n  {\n  \"security\": [\n    {}\n   ]\n  }\n  ...\n  {\n  \"servers\": [\n    {\n      \"url\": \"http://my.api.server.com/\",\n      \"description\": \"API server\"\n    }\n  ]\n}\n...  \n  {\n   \"components\": {\n      \"securitySchemes\": {\n         \"regularSecurity\": {\n            \"type\": \"http\",\n            \"scheme\": \"basic\"\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>An empty requirement in the <code>security</code> field disables the authentication completely. Attackers could access any API operations without any authentication and identification, and try to retrieve or push some incorrect data, like SQL injection or JSON hijacking. Without the first level of access control, you have no possibility to revoke their access in case you spot incorrect behavior.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you specify at least one security requirement in your security scheme to apply authentication to API operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">...\n  {\n  \"security\": [\n    {\n      \"regularSecurity\": []\n    }\n   ]\n  }\n  ...\n  {\n  \"servers\": [\n    {\n      \"url\": \"http://my.api.server.com/\",\n      \"description\": \"API server\"\n    }\n  ]\n}\n...  \n  {\n   \"components\": {\n      \"securitySchemes\": {\n         \"regularSecurity\": {\n            \"type\": \"http\",\n            \"scheme\": \"basic\"\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityrequirement-oauth2-scope-unreferenced": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>OAuth2 security requirement requires a scope not declared in the referenced security scheme</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The OAuth2 security requirement in the <code>security</code> field requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API requires.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#security-requirement-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The OAuth2 security requirement in the <code>security</code> field requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API requires.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\" : [\n        \"OAuth2\": [ \"readWrite\" ]\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"read\": \"read objects in your account\",\n                            \"write\": \"write objects to your account\",\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not lock down all scopes the OAuth 2 security requirement can use, attackers could try to introduce their scopes to fill the gap.</p>\n                    <p>Attackers could, for example, specify an arbitrary scope containing an SQL injection or buffer overflow attack that is triggered when your API requests a token from the token URL. By limiting the scopes that the OAuth flow can use only to those defined in the OAuth2 security scheme, you ensure that only the strings you have specified are allowed through to the token endpoint. An unrecognized scope in the token request could also lead the attackers gaining extended permissions to access the your resources.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Ensure that all OAuth2 scopes referenced in the security requirements have a match in the OAuth2 security scheme, or remove the undefined scopes.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\" : [\n        \"OAuth2\": [ \"read\", \"write\" ]\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"read\": \"read objects in your account\",\n                            \"write\": \"write objects to your account\",\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityrequirement-weak": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Access tokens transported as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Access tokens are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Access tokens are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n        \"OAuth2\": [\"readOnly\"]\n        }\n    ]\n}\n...\n{\n    \"servers\": [\n        {\n            \"url\": \"http://my.api.server.com/\",\n            \"description\": \"API server\"\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>The <code>security</code> field defines that the API is protected with OAuth2 <code>authorizationCode</code> flow and the URL of the server for the API is set to HTTP.</p>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the access tokens simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the tokens.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the URL in the <code>server</code> object to HTTPS only so that all traffic is encrypted.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n        \"OAuth2\": [\"readOnly\"]\n        }\n    ]\n}\n...\n{\n    \"servers\": [\n        {\n            \"url\": \"https://my.api.server.com/\",\n            \"description\": \"API server\"\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityscheme-average": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Transporting credentials over the network allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more global security schemes allows transporting credentials (basic authentication credentials or API keys) over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.</p>\n                    <p>This is a potential risk, because the definition is in security schemes. However, it easily turns into an actual risk when the unsafe method is used in a security requirement.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#oasObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more global security schemes allows transporting credentials (basic authentication credentials or API keys) over the network. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5, 9\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"components\": {\n        \"securitySchemes\": {\n            \"regularSecurity\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            },\n            \"api_key\": {\n                \"type\": \"apiKey\",\n                \"name\": \"api_key\",\n                \"in\": \"header\"\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can eavesdrop credentials transported over the network and try to intercept the traffic between the API consumer and your API to retrieve them. If they succeed, they can access all API operations protected with the same security requirement until the credentials are specifically revoked or changed. Both basic credentials and API keys have long lifetime providing extended opportunity for exploits.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Use a more secure security definition, like OAuth 2.0. Instead of just credentials, OAuth 2.0 uses access tokens with limited lifetime and authorizations (the scopes) granted that the Resource Owner grants from an authorization server.</p>\n                    <p>An API operation can be consumed only if the request includes an access token and the scopes of the token match the scopes that the API operation requires. Even if attackers successfully retrieved access tokens, they can only use the token on a subset of the API operation and for a limited time.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-global-securityscheme-clearcredentials": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Sending credentials as cleartext allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more global security schemes in the API allows to set security requirements that accept user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.</p>\n                    <p>This is a potential risk, because the definition is in security schemes. However, it easily turns into an actual risk when the unsafe method is used in a security requirement.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more global security schemes in the API allows to set security requirements that accept user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set the URL in the <code>server</code> object to HTTPS only so that all traffic is encrypted.</p>\n                "
        }
      ]
    }
  },
  "v3-global-securityscheme-oauth2-authorizationurl": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>Authorization URL of the OAuth2 security scheme is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API accepts basic credentials transported over the network. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#oauthFlowObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API accepts basic credentials transported over the network. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Depending on the underlying library used, your API consumer <a href=\"https://curl.haxx.se/docs/CVE-2016-8624.html\">might be redirected to nefarious sites when parsing non-standard URLs</a>.</p>\n                    <p>In addition, TLS certificates use the URL's host name to validate that the presented certificate matches the host that was contacted. An invalid host name could potentially scupper this validation. A badly encoded URL could be used as an attack vector when decoding the resource path.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        }
      ]
    }
  },
  "v3-global-securityscheme-oauth2-tokenurl": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>Token URL of the OAuth2 security scheme is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL you have entered in the <code>tokenUrl</code> field of the OAuth2 security scheme is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#oauthFlowObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL you have entered in the <code>tokenUrl</code> field of the OAuth2 security scheme is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Depending on the underlying library used, your API consumer <a href=\"https://curl.haxx.se/docs/CVE-2016-8624.html\">might be redirected to nefarious sites when parsing non-standard URLs</a>.</p>\n                    <p>In addition, TLS certificates use the URL's host name to validate that the presented certificate matches the host that was contacted. An invalid host name could potentially scupper this validation. A badly encoded URL could be used as an attack vector when decoding the resource path.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        }
      ]
    }
  },
  "v3-global-securityscheme-weak": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Transporting access tokens as cleartext allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more global security schemes in the API allows to set security requirements that accept access tokens sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.</p>\n                    <p>This is a potential risk, because the definition is in security schemes. However, it easily turns into an actual risk when the unsafe method is used in a security requirement.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more global security schemes in the API allows to set security requirements that accept access tokens sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the URL in the <code>server</code> object to HTTPS only so that all traffic is encrypted.</p>\n                "
        }
      ]
    }
  },
  "v3-header-schema-undefined": {
    "group": "datavalidation",
    "subgroup": "responseheader",
    "title": {
      "text": "<h1>No schema defined in the header object</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A header object does not define a schema for the accepted input or output. This means that you do not limit the what your API can accept or include in headers.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A header object does not define a schema for the accepted input or output. This means that you do not limit the what your API can accept or include in headers.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because the rate limiting header has no schema defined, it can include anything:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3-4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"headers\": {\n    \"X-Rate-Limit-Limit\": {\n      \"description\": \"The number of allowed requests in the current period\"\n      }\n    }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>With response headers, you have to consider the output of the API. Your API has been designed to return specific data, but without schema, you do not limit what is                             accepted in response headers.</p>\n                    <p>Attackers typically want to make the API to change its behavior and return different data than it is supposed to. A particular API failure might leak some other data, such as records or stack                          trace. Defining a schema for all header objects helps reduce this risk.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define schemas for all header objects to restrict what input or output is allowed. This provides an extra layer of safety ensuring that your API only returns data that you expect it to return.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4-9\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"headers\": {\n    \"X-Rate-Limit-Limit\": {\n        \"description\": \"The number of allowed requests in the current period\",\n            \"schema\": {\n                \"type\": \"integer\",\n                \"minimum\": 0,\n                \"maximum\": 100,\n                \"format\": \"int32\",\n                \"additionalProperties\": false\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-mediatype-schema-undefined": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>No schema defined in the media type object</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more media type objects in your API do not have schemas defined. All media types should have <code>schema</code> defined to restrict what input your API accepts.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#mediaTypeObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more media type objects in your API do not have schemas defined. All media types should have <code>schema</code> defined to restrict what input your API accepts.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because the rate limiting header has no schema defined, it can include anything:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4-5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"application/octet-stream\": {\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define a schema for media type object, you do not limit what is accepted as the input. This could open your backend server to various attacks, like SQL injections or buffer overflows.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined schemas for all media type objects in your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5-9\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"application/octet-stream\": {\n            \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"binary\",\n               \"additionalProperties\": \"false\"\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-operation-http-clear": {
    "group": "security",
    "subgroup": "transport",
    "title": {
      "text": "<h1>Operation accepts HTTP requests in the clear</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API operation accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API operation accepts HTTP communications in the clear. HTTP traffic is not encrypted and can thus be easily intercepted.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The alternative server defined for the operation accepts unencrypted connections:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n    \"description\": \"Returns pets based on ID\",\n    \"summary\": \"Find pets by ID\",\n    \"operationId\": \"getPetsById\",\n    \"servers\": [\n        {\n            \"url\": \"http://my.api.com\",\n            \"description\": \"Development server\"\n        }\n\n    ]\n    \"responses\": {\n    ...</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If your API supports unencrypted HTTP connections, all requests and responses are transmitted in the open. Anyone listening to the network traffic while the calls are being made may intercept them.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <kdb:text>\n                        <p>Use only secure connections for the servers:</p>\n                    </kdb:text>\n                "
        },
        {
          "text": "\n                        <p>Use only secure connections for the servers:</p>\n                    "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n    \"description\": \"Returns pets based on ID\",\n    \"summary\": \"Find pets by ID\",\n    \"operationId\": \"getPetsById\",\n    \"servers\": [\n        {\n            \"url\": \"https://my.api.com\",\n            \"description\": \"Development server\"\n        }\n\n    ]\n    \"responses\": {\n    ...</code></pre>"
        }
      ]
    }
  },
  "v3-operation-security": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field of the operation is not defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>security</code> field of the operation has not been defined. This field specifies if your API operation requires the API consumer to authenticate to use it.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>security</code> field of the operation has not been defined. This field specifies if your API operation requires the API consumer to authenticate to use it.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The <code>security</code> field is tightly coupled with the <code>securitySchemes</code> objects. The <code>security</code> field could be missing because:</p>\n                    <ul>\n                        <li value=\"1\">You forgot to define the <code>securitySchemes</code> field altogether, leaving the API completely unprotected.</li>\n                        <li value=\"2\">You defined the <code>securitySchemes</code> field but not the <code>security</code> field. The definitions are not actually getting applied.</li>\n                        <li value=\"3\">You defined the <code>securitySchemes</code> field and the operation-level <code>security</code> field for some of the API operations. However, you did not define the <code>security</code> field on the global level for the whole API.</li>\n                    </ul>\n                "
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not set the global <code>security</code> field, the API does not require any authentication by default. Anyone can use the API operations that do not have a <code>security</code> field defined. All they need to know is the URL for the API operation and how to invoke it.</p>\n                    <p>This sometimes happens to internal APIs. These are often created only to be used inside the company web pages and mobile applications. No one expects any outsiders to know that the API exists, so developers do not spend time implementing security.</p>\n                    <p>But attackers can look at the code of the mobile or web application, or listen to the API traffic, and reverse engineer how the API works. Once the attackers have figured this out, they can start using the API because it does not require any authentication.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>First, define the <code>securityDefinitions</code> or <code>securitySchemes</code> field on the global level, and list the authentication methods that you plan to use. For example:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">    \"components\": {\n        \"securitySchemes\": {\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }</code></pre>"
        },
        {
          "text": "\n                    <p>Then, use the <code>security</code> field on the global level to set the default authentication requirements for the whole API.</p>\n                    <p>If you have more than one definition in <code>securitySchemes</code> and you want to apply all of them for each API call, use the following syntax (semantically AND):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [], \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>If you want to apply only one of the definitions to an API call, use the following syntax (semantically OR):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"security\": [\n  { \"petstore_auth\": [] },\n  { \"api_key\": [] }\n]</code></pre>"
        },
        {
          "text": "\n                    <p>You can add an exception to the security specified on the global level on the operation level as needed. This overrides the authentication requirements of the whole API. Simply add a separate <code>security</code> field to the operation in question.</p>\n                "
        }
      ]
    }
  },
  "v3-operation-securityrequirement-average": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Operation accepts credentials transported over the network</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API operation accepts credentials (basic authentication credentials or API keys)  transported over the network instead of the more secure tokens. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API operation accepts credentials (basic authentication credentials or API keys)  transported over the network instead of the more secure tokens. The credentials are sent over the network  on each API call, over and over again, and are exposed to attack attempts to retrieve them.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can eavesdrop credentials transported over the network and try to intercept the traffic between the API consumer and your API to retrieve them. If they succeed, they can access all API operations protected with the same security requirement until the credentials are specifically revoked or changed. Both basic credentials and API keys have long lifetime providing extended opportunity for exploits.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Use a more secure security definition, like OAuth 2.0. Instead of just credentials, OAuth 2.0 uses access tokens with limited lifetime and authorizations (the scopes) granted that the Resource Owner grants from an authorization server.</p>\n                    <p>An API operation can be consumed only if the request includes an access token and the scopes of the token match the scopes that the API operation requires. Even if attackers successfully retrieved access tokens, they can only use the token on a subset of the API operation and for a limited time.</p>\n                "
        }
      ]
    }
  },
  "v3-operation-securityrequirement-clearcredentials": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Operation accepts credentials sent as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API operation accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API operation accepts user credentials sent in cleartext over an unencrypted channel. Attackers can easily intercept API calls and retrieve the credentials. They can then use the credentials to make other API calls.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the credentials simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the credentials.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set the transport protocol to HTTPS only so that all traffic is encrypted. You could also improve the security of the authentication method. The OAuth 2.0 Authorization Code flow (Access Code flow in OAS v2) is considered the most secure way to provide API authorization.</p>\n                "
        },
        {
          "code": "<p>Insert code example here</p>"
        }
      ]
    }
  },
  "v3-operation-securityrequirement-emptyarray": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field of the operation contains an empty array</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>security</code> field of the operation does not list any security schemes to be applied. Instead, it just contains an empty array.</p>\n                    <p>The top-level <code>security</code> field of the OpenAPI contract contains an array of the security schemes applied to the whole API. The list of values describes alternative security schemes that can be used. There is a logical <code>OR</code> between the security requirements. Individual operations can override the top-level <code>security</code> in the operation-level <code>security</code> fields if needed.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>security</code> field of the operation does not list any security schemes to be applied. Instead, it just contains an empty array.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Even though you can apply security schemes directly to individual operations, it is strongly recommended that you define your default security schemes on the API level. The operation-level <code>security</code> is meant to be used as an exception-handling mechanism only, not as a best practice.</p>\n                    <p>Relying on defining <code>security</code> only on each operation individually is an error-prone approach. It is very easy to forget to set <code>security</code> when you add a new method to the API. If there is no global default <code>security</code> defined, the operation is left wide open for an attacker to invoke without any authentication required.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define default <code>security</code> on the global level for the whole API, and only define exceptions to this on the operation level, if needed.</p>\n                "
        }
      ]
    }
  },
  "v3-operation-securityrequirement-emptyscheme": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>'Security' field of the operation contains an empty security requirement</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more of the objects defined in the <code>security</code> field of the operation contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API operation requires. An empty requirement in the <code>security</code> field disables the authentication completely.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more of the objects defined in the <code>security</code> field of the operation contain an empty security requirement. The <code>security</code> field specifies what kind of authentication your API operation requires. An empty requirement in the <code>security</code> field disables the authentication completely.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>An empty requirement in the <code>security</code> field disables the authentication completely. Attackers could access any API operations without any authentication and identification, and try to retrieve or push some incorrect data, like SQL injection or JSON hijacking. Without the first level of access control, you have no possibility to revoke their access in case you spot incorrect behavior.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you specify at least one security requirement in your security scheme to apply authentication to API operations.</p>\n                "
        }
      ]
    }
  },
  "v3-operation-securityrequirement-oauth2-scope-unreferenced": {
    "group": "security",
    "subgroup": "authorization",
    "title": {
      "text": "<h1>OAuth2 security requirement of the operation requires a scope not declared in the referenced security scheme</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The OAuth2 security requirement in the <code>security</code> field of the operation requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API operation requires.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#security-requirement-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The OAuth2 security requirement in the <code>security</code> field of the operation requires a scope that has not been defined in the security scheme of your API. The <code>security</code> field specifies what kind of authentication your API operation requires.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not lock down all scopes the OAuth 2 security requirement can use, attackers could try to introduce their scopes to fill the gap.</p>\n                    <p>Attackers could, for example, specify an arbitrary scope containing an SQL injection or buffer overflow attack that is triggered when your API requests a token from the token URL. By limiting the scopes that the OAuth flow can use only to those defined in the OAuth2 security scheme, you ensure that only the strings you have specified are allowed through to the token endpoint. An unrecognized scope in the token request could also lead the attackers gaining extended permissions to access the your resources.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Ensure that all OAuth2 scopes referenced in the security requirements have a match in the OAuth2 security scheme, or remove the undefined scopes.</p>\n                "
        }
      ]
    }
  },
  "v3-operation-securityrequirement-weak": {
    "group": "security",
    "subgroup": "authentication",
    "title": {
      "text": "<h1>Operation accepts access tokens transported as cleartext</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Access tokens for the API operation are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Access tokens for the API operation are transported in the clear over an unencrypted channel. Attackers can easily intercept API calls and retrieve the tokens. They can then use the tokens to make other API calls.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers can intercept the access tokens simply by listening to the network traffic in a public WiFi network. They could also use a traffic logging tool on a smartphone, computer, or browser, or sniff the traffic in the network to get the tokens.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>At the very least, set <code>schemes</code> to support HTTPS only so that all traffic is encrypted.</p>\n                "
        }
      ]
    }
  },
  "v3-parameter-schema-undefined": {
    "group": "datavalidation",
    "subgroup": "parameters",
    "title": {
      "text": "<h1>No schema defined in the parameter object</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more parameters in your API do not have schemas defined. All parameters must have either <code>schema</code> or <code>content</code> defined to restrict what content your API accepts.</p>\n                    <p>Schemas are useful for defining the structure and syntax of the accepted input or output for simpler parameters. For more complex parameters, you can use the <code>content</code> property.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more parameters in your API do not have schemas defined. All parameters must have either <code>schema</code> or <code>content</code> defined to restrict what content your API accepts.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because the rate limiting header has no schema defined, it can include anything:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"username\",\n  \"in\": \"path\",\n  \"description\": \"username to fetch\",\n  \"required\": true,\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define a schema for your parameters, you do not limit what is accepted as the input. This could open your backend server to various attacks, like SQL injections or buffer overflows.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined either the <code>schema</code> or <code>content</code> property for all <code>parameter</code> objects in your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"6-7\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"username\",\n  \"in\": \"path\",\n  \"description\": \"username to fetch\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\",\n    \"additionalProperties\": \"false\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-400": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>400 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API are missing <code>400</code> responses. Because client-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>400</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API are missing <code>400</code> responses. Because client-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>400</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                }\n            }\n    }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>400</code> responses for all operations except <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13-18\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                }\n            }\n    },\n    ...\n    \"400\": {\n        \"description\": \"Bad request\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/400\"\n                }\n            }\n        }           \n    }\n  }</code></pre>"
        }
      ]
    }
  },
  "v3-response-401": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>If operation has security defined, the 401 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>401</code> response is missing.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7235#section-3.1\" target=\"_blank\" rel=\"noopener\">RFC 7235</a>.</p>\n                "
    },
    "shortDescription": "If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>401</code> response is missing.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The global <code>security</code> field defines authentication for all API operations, but the <code>401</code> response is missing from the operation:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       }\n       \"403\": {\n         \"description\": \"Forbidden\",\n         \"schema\": {\n           \"$ref\": \"#/components/schemas/403\"\n         }\n       }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>401</code> responses for all operations that have security defined for them.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 16-19\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       },\n       \"401\": {\n         \"description\": \"Unauthorized\",\n         \"schema\": {\n           \"$ref\": \"#/components/schemas/401\"\n         }\n       },\n       \"403\": {\n         \"description\": \"Forbidden\",\n         \"schema\": {\n           \"$ref\": \"#/components/schemas/403\"\n         }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-403": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>If operation has security defined, the 403 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>403</code> response is missing.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "If the <code>security</code> field defines security requirements for an API operation, you should define <code>401</code> and <code>403</code> responses for the operation. The <code>403</code> response is missing.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The global <code>security</code> field defines authentication for all API operations, but the <code>403</code> response is missing from the operation:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       },\n       \"401\": {\n         \"description\": \"Unauthorized\",\n         \"schema\": {\n           \"$ref\": \"#/components/schemas/401\"\n         }\n       }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>403</code> responses for all operations that have security defined for them.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 22-25\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"security\": [\n   {\n     \"regularSecurity\": []\n    }\n  ]\n}\n...\n  \"post\": {\n     \"description\": \"Add a new lock combination\",\n     ...\n     \"responses\": {\n       \"200\": {\n         \"description\": \"OK\"\n       },\n       \"401\": {\n         \"description\": \"Unauthorized\",\n         \"schema\": {\n           \"$ref\": \"#/components/schemas/401\"\n         }\n       },\n       \"403\": {\n         \"description\": \"Forbidden\",\n         \"schema\": {\n           \"$ref\": \"#/components/schemas/403\"\n         }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-404": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>404 response should be defined for all GET, PUT, HEAD, and DELETE operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, or <code>DELETE</code> operations are missing the <code>404</code> response. All <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, and <code>DELETE</code> operations should have the <code>404</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5.4\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, or <code>DELETE</code> operations are missing the <code>404</code> response. All <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, and <code>DELETE</code> operations should have the <code>404</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"/pets\": {\n    \"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"responses\": {\n        \"200\": {\n          \"description\": \"A list of pets.\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>404</code> responses for all <code>GET</code>, <code>PUT</code>, <code>HEAD</code>, and <code>DELETE</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 17\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"/pets\": {\n    \"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"responses\": {\n        \"200\": {\n          \"description\": \"A list of pets\",\n          \"schema\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Pet\"\n            }\n          }\n        }\n    \"404\": {\n        \"description\": \"Not found\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/404\"\n                }\n            }\n        }           \n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-415": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>415 response should be defined for operations receiving a body (POST, PUT, PATCH)</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>POST</code>, <code>PUT</code>, or <code>PATCH</code> operations are missing <code>415</code> responses. All operations that receive a body should have <code>415</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.5.13\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>POST</code>, <code>PUT</code>, or <code>PATCH</code> operations are missing <code>415</code> responses. All operations that receive a body should have <code>415</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"9-16\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n       \"description\": \"Pet to add to the store\",\n       \"required\": true,\n    ...\n    },\n    \"responses\": {\n       \"200\": {\n          \"description\": \"pet response\",\n          \"content\": {\n             \"application/json\": {\n                \"schema\": {\n                   \"$ref\": \"#/components/schemas/Pet\"\n                }\n             }\n          }\n       }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>415</code> responses for all <code>POST</code>, <code>PUT</code>, and <code>PATCH</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"21-26\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"requestBody\": {\n     \"description\": \"Pet to add to the store\",\n     \"required\": true,\n     ...\n  },\n  \"responses\": {\n     \"200\": {\n       \"description\": \"pet response\",\n       \"content\": {\n         \"application/json\": {\n           \"schema\": {\n             \"$ref\": \"#/components/schemas/Pet\"\n           }\n         }\n       }\n     },\n     ...\n     \"415\": {\n       \"description\": \"Unsupported media type\"\n       \"content\": {\n         \"application/json\": {\n           \"schema\": {\n             \"$ref\": \"#/components/responses/415\"\n          }\n        }\n      }         \n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-429": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>429 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API are missing <code>429</code> responses. All operations except <code>HEAD</code> operations should have <code>429</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc6585#section-4\" target=\"_blank\" rel=\"noopener\">RFC 6585</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API are missing <code>429</code> responses. All operations except <code>HEAD</code> operations should have <code>429</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                }\n            }\n    }</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>429</code> responses for all operations except <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13-18\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                }\n            }\n    },\n    ...\n    \"429\": {\n        \"description\": \"Too many requests\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/429\"\n                }\n            }\n        }           \n    }\n  }</code></pre>"
        }
      ]
    }
  },
  "v3-response-500": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>500 response should be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API are missing <code>500</code> responses. Because server-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>500</code> responses defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.6\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API are missing <code>500</code> responses. Because server-side errors cannot be excluded, all operations except <code>HEAD</code> operation should have <code>500</code> responses defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\">\n                        <code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                }\n            }\n    }</code>\n                    </pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>500</code> responses for all operations except <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"13-18\" xml:space=\"preserve\">\n                        <code class=\"language-json\">\"responses\": {\n        \"200\": {\n            \"description\": \"pet response\",\n            \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Pet\"\n                    }\n                }\n            }\n    },\n    ...\n    \"500\": {\n        \"description\": \"Internal Server Error\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/500\"\n                }\n            }\n        }           \n    }\n  }</code>\n                    </pre>"
        }
      ]
    }
  },
  "v3-response-default-undefined": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>No default response defined for the operation</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API have no default response defined.</p>\n                    <p>OpenAPI Specification (OAS) defines the default response as optional. It can be used as the default response object for all HTTP codes that are not covered individually in the OpenAPI definition. It can also be used to cover undeclared responses.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#responses-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API have no default response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/components/schemas/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define default responses for all API operations:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8-11\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/components/schemas/Pets\"\n    }\n  },\n  \"default\": {\n    \"description\": \"unexpected error\",\n    \"schema\": {\n      \"$ref\": \"#/components/schemas/Error\"\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-delete-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for DELETE operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>DELETE</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>DELETE</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"delete\": {\n    \"description\": \"Deletes a pet based on the ID\",\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>DELETE</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"delete\": {\n    \"description\": \"Deletes a pet based on the ID\",\n    ...\n    \"responses\": {\n      \"204\": {\n        \"description\": \"Pet deleted\"\n      },\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-get-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200 or 202 response should be defined for GET operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>GET</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>GET</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"default\": {\n      \"description\": \"unexpected error\",\n      \"schema\": {\n        \"$ref\": \"#/components/schemas/Error\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code> or <code>202</code> responses for all <code>GET</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"pet response\",\n      \"schema\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"Pet.json\"\n        }\n      }\n    },\n    \"default\": {\n     \"description\": \"unexpected error\",\n      \"schema\": {\n        \"$ref\": \"#/components/schemas/Error\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-head-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200 or 202 response should be defined for HEAD operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>HEAD</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>HEAD</code> operations in your API must have at least one <code>200</code> or <code>202</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"head\": {\n  ...\n  \"responses\": {\n    \"404\": {\n        \"description\": \"Not found\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/404\"\n                }\n            }\n        }           \n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code> or <code>202</code> responses for all <code>HEAD</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"head\": {\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"OK\"\n    }\n    \"404\": {\n        \"description\": \"Not found\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/404\"\n                }\n            }\n        }           \n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-options-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>200 response should be defined for OPTIONS operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>OPTIONS</code> operations in your API must have the <code>200</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3.1\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>OPTIONS</code> operations in your API must have the <code>200</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"options\": {\n    \"description\": \"Returns allowed methods\",\n     ...\n    \"responses\": {\n    \"429\": {\n        \"description\": \"Too many requests\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/429\"\n                }\n            }\n        }           \n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code> responses for all <code>OPTIONS</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">  \"options\": {\n    \"description\": \"Returns allowed methods\",\n     ...\n    \"responses\": {\n       \"200\": {\n         \"description\": \"OK\",\n         \"headers\": {\n           \"Allow\": \"GET, HEAD, PUT\"\n         }\n        \"429\": {\n        \"description\": \"Too many requests\"\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/responses/429\"\n                }\n            }\n        }       \n     }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-patch-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for PATCH operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>PATCH</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>PATCH</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"patch\": {\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>PATCH</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"patch\": {\n    ...\n    \"responses\": {\n      \"204\": {\n        \"description\": \"Updated\"\n      }\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-post-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for POST operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>POST</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>POST</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>POST</code> operation.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" style=\"color: #333333;\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">    \"responses\": {\n      \"204\": {\n        \"description\": \"OK\"\n      }\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-put-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200, 201, 202, or 204 response should be defined for PUT operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>PUT</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>PUT</code> operations in your API must have at least one <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> response defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"put\": {\n    ...\n    \"responses\": {\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code>, <code>201</code>, <code>202</code>, or <code>204</code> responses for all <code>PUT</code> operations.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"put\": {\n    ...\n    \"responses\": {\n      \"204\": {\n       \"description\": \"Updated\"\n      }\n      \"default\": {\n        \"description\": \"Unexpected error\",\n        \"schema\": {\n          \"$ref\": \"#/components/schemas/Error\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-schema-defined": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>Response that should not contain a body has a schema defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a schema for one or more responses that should not contain a body:</p>\n                    <ul>\n                        <li value=\"1\">The operation in question is <code>HEAD</code> (no content allowed for <code>HEAD</code> responses), see <a href=\"https://tools.ietf.org/html/rfc7231#section-4.3.2\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</li>\n                        <li value=\"2\">The returned HTTP status code is <code>204</code> or <code>304</code> (no content allowed for these codes), see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3.5\" target=\"_blank\" rel=\"noopener\">RFC 7231</a> and <a href=\"https://tools.ietf.org/html/rfc7232#section-4.1\" target=\"_blank\" rel=\"noopener\">RFC 7232</a>.</li>\n                    </ul>\n                "
    },
    "shortDescription": "You have defined a schema for one or more responses that should not contain a body:",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"204\": {\n    \"description\": \"No content\",\n    \"schema\": {\n      \"$ref\": \"#/components/schemas/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove the schema for all responses that should not contain a body.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"204\": {\n    \"description\": \"No content\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-response-schema-undefined": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>Response that should contain a body has no schema defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have not defined any schemas for responses that should contain a body.</p>\n                    <p>Empty or no schemas for responses are only acceptable for responses that do not have any content:</p>\n                    <ul>\n                        <li value=\"1\">The operation in question is <code>HEAD</code> (no content allowed for <code>HEAD</code> responses), see <a href=\"https://tools.ietf.org/html/rfc7231#section-4.3.2\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</li>\n                        <li value=\"2\">The returned HTTP status code is <code>204</code> or <code>304</code> (no content allowed for these codes), see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3.5\" target=\"_blank\" rel=\"noopener\">RFC 7231</a> and <a href=\"https://tools.ietf.org/html/rfc7232#section-4.1\" target=\"_blank\" rel=\"noopener\">RFC 7232</a>.</li>\n                    </ul>\n                "
    },
    "shortDescription": "You have not defined any schemas for responses that should contain a body.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\">\n                        <code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"OK\"\n    }\n  }\n}</code>\n                    </pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define schemas for all responses that should have a body.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\">\n                        <code class=\"language-json\">\"get\": {\n  \"description\": \"Returns all pets from the system that the user has access to\",\n  ...\n  \"responses\": {\n    \"200\": {\n      \"description\": \"pet response\",\n      \"schema\": {\n        \"type\": \"array\",\n        \"additionalProperties\": \"false\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/Pet\"\n        }\n      }\n    }\n  }\n}</code>\n                    </pre>"
        },
        {
          "text": "\n                    <p>Alternatively, if you do not want to include a body, you can change the HTTP status code in the response to one that should not have a body.</p>\n                "
        }
      ]
    }
  },
  "v3-response-trace-2xx": {
    "group": "datavalidation",
    "subgroup": "responsedefinition",
    "title": {
      "text": "<h1>At least one 200 response should be defined for TRACE operations</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p><code>TRACE</code> operations in your API must have at least one <code>200</code> response defined.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc7231#section-6.3\" target=\"_blank\" rel=\"noopener\">RFC 7231</a>.</p>\n                "
    },
    "shortDescription": "<code>TRACE</code> operations in your API must have at least one <code>200</code> response defined.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                    <p>In&#160;<code>TRACE</code> operations, the messages are reflected back to the client. If you do not carefully define the response for&#160;<code>TRACE</code> operations, the output might accidentally&#160;contain sensitive data that should have been excluded.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>200</code> or <code>202</code> responses for all <code>HEAD</code> operations.</p>\n                "
        }
      ]
    }
  },
  "v3-schema-array-items-notype": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema has no type of items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more array schemas does not specify the type of items it can contain.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more array schemas does not specify the type of items it can contain.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"30-31\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"favfood\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If an array does not specify <code>type</code> property for the <code>items</code> in it, users cannot tell the data type of items your API expects. The users may try to send data of unexpected type to your API, which could cause the backend server crash.</p>\n                    <p>In addition, protection services based on OpenAPI definitions are not able to filter out items of unexpected data types. Attackers can try various types for the items, which again could crash the backend server.</p>\n                    <p>When your backend server crashes, the error messages or exception trace could leak information on the implementation of your services. Attackers could then use to this information to make further attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure your array schema includes the <code>type</code> property for the items the array accepts:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"32\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"favfood\": {\n                    \"type\": \"array\",\n                    \"maxItems\": 3,\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-array-maxitems": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Array schema has no maximum number of items defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>An array schema does not specify the maximum number of items it can contain.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "An array schema does not specify the maximum number of items it can contain.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"29\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"favfood\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If an array does not specify the maximum number of items in it, attackers may try to submit a call with extremely large number of array entries. This could to make your JSON parser module crash or cause a buffer overflow.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxItems</code> property to ensure that the schema only allows calls of reasonable size:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"30\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"favfood\": {\n                    \"type\": \"array\",\n                    \"maxItems\": 3,\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-empty": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema is empty</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema is empty. This means that your API accepts any JSON values.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema is empty. This means that your API accepts any JSON values.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The method <code>POST</code> accepts a JSON payload in the <code>body</code> but does not specify the <code>schema</code> of the payload:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {    }\n    }\n  ]\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If do not clearly define the schema and properties of a JSON payload empty, you effectively allow attackers to pass in any data. This means that you are opening your backend to various attacks, such as SQL injection.</p>\n                    <p>This also lets attackers to try various unexpected inputs. Unexpected inputs may cause the backend server to crash or behave in an unexpected way. This in turn may cause the server to potentially leak stack trace that can be used for further attacks, or even data.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define schemas for all JSON payloads. Here, a specific JSON object <code>NewPet</code> is defined in <code>#/components/schemas</code> and referenced as the <code>schema</code> for the API method:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#components/schemas/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"additionalProperties\": \"false\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-notype": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema does not define the type of JSON values</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The API defines a schema for a JSON payload. However, the schema does not define the types of the values in it. </p>\n                    <p>If you define a set of properties in a schema but do not define the type of the properties, the schema does not enforce any limits to what is accepted. It is not enough to define the type of properties in the properties themselves, if the type  for the schema is not defined, it still accepts anything.</p>\n                    <p>Unlike in the OpenAPI Specification v2, it is not enough to just state the type of the properties in the schema. The schema continues to accept properties of any type unless <code>additionalProperties</code> is set to <code>false</code>. By default, this property is <code>true</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The API defines a schema for a JSON payload. However, the schema does not define the types of the values in it. ",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The object <code>NewPet</code> is defined in <code>#/components/schemas</code> and referenced as the <code>schema</code> for the API method. However, the types of the properties in the object (<code>name</code> and <code>tag</code>) are not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24-29\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#/components/schemas/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If do not clearly define the schema and properties of a JSON payload empty, you effectively allow attackers to pass in any data. This means that you are opening your backend to various attacks, such as SQL injection.</p>\n                    <p>This also lets attackers to try various unexpected inputs. Unexpected inputs may cause the backend server to crash or behave in an unexpected way. This in turn may cause the server to potentially leak stack trace that can be used for further attacks, or even data.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define all properties of the accepted JSON payload and set <code>additionalProperties</code> to <code>false</code> to enforce limitations to what the schema accepts.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24-31\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#components/schemas/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"additionalProperties\": \"false\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-numerical-format": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Numeric schema has no format defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A numeric schema does not have the accepted format specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A numeric schema does not have the accepted format specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The property <code>type</code> is set to <code>integer</code> but the format is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"29\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"age\": {\n                    \"type\": \"integer\"\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not specify the format of numeric values, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define <code>format</code> of numeric properties in schemas. This ensures that only parameters of the expected format get passed to the backend.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"32\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"age\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 100,\n                    \"format\": \"int32\"\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-numerical-max": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Numeric schema has no maximum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A numeric schema has no maximum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A numeric schema has no maximum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The property <code>type</code> is set to <code>integer</code> but the maximum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"29\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"age\": {\n                    \"type\": \"integer\",\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"30-31\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"age\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 100,\n                    \"format\": \"int32\"\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-numerical-min": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Numeric schema has no minimum defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A numeric schema has no minimum value specified.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A numeric schema has no minimum value specified.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The property <code>type</code> is set to <code>integer</code> but the minimum value is not specified:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"29\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"age\": {\n                    \"type\": \"integer\",\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the range of accepted values for numeric parameters, attackers can try to send unexpected input to your backend server. This may cause the backend server to fail in an unexpected way and open the door to further attacks.</p>\n                    <p>For example, the backend server could throw an exception and return a stack trace on the error. The trace could contain information on the exact software stack used in the implementation. This enables the attacker to launch an attack on specific vulnerabilities known in that stack.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set both the <code>minimum</code> and <code>maximum</code> values for numeric parameters to limit the accepted values to the range that works for your application:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"30-31\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"age\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0,\n                    \"maximum\": 100,\n                    \"format\": \"int32\"\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-object-additionalproperties-true": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema allows additional properties</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema you have defined allows additional properties.</p>\n                    <p>Unlike in the OpenAPI Specification v2, it is not enough to just state the type of the properties in the schema. The schema continues to accept properties of any type unless <code>additionalProperties</code> is set to <code>false</code>. By default, this property is <code>true</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema you have defined allows additional properties.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18-30\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"Pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#components/schemas/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If do not clearly define the schema and properties of a JSON payload empty, you effectively allow attackers to pass in any data. This means that you are opening your backend to various attacks, such as SQL injection.</p>\n                    <p>This also lets attackers to try various unexpected inputs. Unexpected inputs may cause the backend server to crash or behave in an unexpected way. This in turn may cause the server to potentially leak stack trace that can be used for further attacks, or even data.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define all properties of the accepted JSON payload and set <code>additionalProperties</code> to <code>false</code> to enforce limitations to what the schema accepts.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"20\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#components/schemas/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"additionalProperties\": \"false\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-object-without-properties": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Schema of a JSON object has no properties defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema for a JSON payload does not have any properties defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema for a JSON payload does not have any properties defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The method defines the <code>schema</code> as the JSON payload <code>NewPet</code>. However, the actual content of that JSON object is not defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18-19\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\"\n        }   \n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If do not clearly define the schema and properties of a JSON payload empty, you effectively allow attackers to pass in any data. This means that you are opening your backend to various attacks, such as SQL injection.</p>\n                    <p>This also lets attackers to try various unexpected inputs. Unexpected inputs may cause the backend server to crash or behave in an unexpected way. This in turn may cause the server to potentially leak stack trace that can be used for further attacks, or even data.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you define all properties of the accepted JSON payload and set <code>additionalProperties</code> to <code>false</code> to enforce limitations to what the schema accepts.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"24-31\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {\n        \"$ref\": \"#components/schemas/NewPet\"\n      }\n    }\n  ]\n}\n...\n{\n  \"NewPet\": {\n    \"type\": \"object\",\n    \"additionalProperties\": \"false\",\n    \"required\": [\n      \"name\"\n    ],\n    \"properties\": {\n      \"name\": {\n        \"type\": \"string\",\n        \"description\": \"Pet name\"\n      },\n      \"tag\": {\n        \"type\": \"string\",\n        \"description\": \"Pet tag\"\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-string-loosepattern": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>Pattern for string schema is too loose</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The pattern for a string schema is too loosely defined. It does not actually limit what gets passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The pattern for a string schema is too loosely defined. It does not actually limit what gets passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. The defined pattern is so loose that the API effectively accepts any string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"27\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"pattern\": \".*\"\n                }       \n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you define too loose pattern for strings, you do not actually limit what is accepted as the input. This could open your backend server to various attacks, like SQL injections or buffer overflows.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"28\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 10,\n                    \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n                }       \n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-schema-string-maxlength": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>String schema has no maximum length defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A string schema does not specify the maximum length for the accepted strings.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A string schema does not specify the maximum length for the accepted strings.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"26\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                }       \n            }\n        }\n    }\n}</code></code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not limit the length of strings, attackers can send longer strings to your API than what your backend server can handle. This could overload your backend server and make it crash. In some cases, this could cause a buffer overflow and allow for executing arbitrary code. Long strings are also more prone to injection attacks.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set the <code>maxLength</code> property in string schemas to ensure that only strings of the expected size get passed to your API:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"27\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 10,\n                    \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n                }       \n            }\n        }\n    }\n}</code></pre>"
        },
        {
          "text": "\n                    <p>We also recommend that you specify a regular expression to further lock down the expected string format.</p>\n                "
        }
      ]
    }
  },
  "v3-schema-string-pattern": {
    "group": "datavalidation",
    "subgroup": "schema",
    "title": {
      "text": "<h1>String schema has no pattern defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A string schema does not define any pattern for the accepted strings. This means that it does not limit the values that get passed to the API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A string schema does not define any pattern for the accepted strings. This means that it does not limit the values that get passed to the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition. Because no pattern is defined, the API accepts a string of any size and value:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"26\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                }       \n            }\n        }\n    }\n}</code></code></pre>"
        }
      ]
    },
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>If you do not define a pattern for strings, any string is accepted as the input. This could open your backend server to various attacks, such as SQL injection.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Set a well-defined regular expression in the <code>pattern</code> field of string parameters. This ensures that only strings matching the set pattern get passed to your API.</p>\n                    <p>For example, the API below only accepts UUIDs that are compliant with <a href=\"https://www.ietf.org/rfc/rfc4122.txt\" target=\"_blank\" rel=\"noopener\">RFC 4122</a>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"28\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n    \"description\": \"Creates a new pet in the store\",\n    \"operationId\": \"addPet\",\n    \"requestBody\": {\n        \"description\": \"Pet to add to the store\",\n        \"required\": true,\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/NewPet\"\n                }\n            }\n        }\n    },\n...\n    {\n        \"NewPet\": {\n            \"type\": \"object\",\n            \"description\": \"JSON defining a Pet object\",\n            \"additionalProperties\": \"false\",\n            \"required\": [\n                \"name\"\n            ],\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 10,\n                    \"pattern\": \"/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89AB][0-9a-f]{3}-[0-9a-f]{12}$/i\"\n                }       \n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-discriminator-required": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Value of the schema discriminator must be a required property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value of the <code>discriminator</code> property in the schema in question has not been listed as a required property. The value of the <code>discriminator</code> property must be a string.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaComposition\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The value of the <code>discriminator</code> property in the schema in question has not been listed as a required property. The value of the <code>discriminator</code> property must be a string.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the discriminator <code>petType</code> is not included in the required properties:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 14\" xml:space=\"preserve\"><code class=\"language-json\">\"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all discriminator values are listed as required properties.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 16\" xml:space=\"preserve\"><code class=\"language-json\">\"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-discriminator-string": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema discriminator property must be a string</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a discriminator that is not a string. Discriminator values must always be of the type <code>string</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined a discriminator that is not a string. Discriminator values must always be of the type <code>string</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the type of the discriminator <code>age</code> is <code>integer</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 11\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"age\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"age\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all discriminator values are strings.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5, 11\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"age\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"age\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"age\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-discriminator-value": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema discriminator property must match a property with the same name</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The discriminator of the schema in question must match a property with the same name.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The discriminator of the schema in question must match a property with the same name.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the discriminator value is <code>animalType</code> but the defined property is actually called <code>petType</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 10, 16\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"animalType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"animalType\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all discriminator values match defined properties.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 10, 16\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"definitions\": {\n    \"Pet\": {\n      \"type\": \"object\",\n      \"discriminator\": \"petType\",\n      \"properties\": {\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"petType\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"petType\"\n      ]\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-formdata-schema-required": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Media type object with 'multipart/form-data' has no schema defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more media type objects in your API where <code>Content-Type</code> is set to <code>multipart/form-data</code> do not have schemas defined. Schema is required when <code>Content-Type</code> is <code>multipart/form-data</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#mediaTypeObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more media type objects in your API where <code>Content-Type</code> is set to <code>multipart/form-data</code> do not have schemas defined. Schema is required when <code>Content-Type</code> is <code>multipart/form-data</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. This request body would accept anything as input:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4-5\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"multipart/form-data\": {\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined schemas for all media type objects in your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4-11\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"multipart/form-data\": {\n            \"schema\": {\n               \"properties\": {\n                  \"file\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-link-operationid-operationref": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Link object has both 'operationId' and 'operationRef' defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined both <code>operationId</code> and <code>operationRef</code> fields for the link object on question. However, these fields are mutually exclusive, so only one of them should be defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#linkObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined both <code>operationId</code> and <code>operationRef</code> fields for the link object on question. However, these fields are mutually exclusive, so only one of them should be defined.",
    "exploit": {
      "sections": [
        {
          "text": "\n                    <h2>Possible exploit scenario</h2>\n                    <p>Attackers strive to make your APIs behave in an unexpected way to learn more about your system or to cause a data breach. We highly recommend that you minimize any risks and clearly specify the data that your API operations can return for each possible response code.</p>\n                "
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you only define either <code>operationId</code> or <code>operationRef</code> fields for link objects, not both.</p>\n                "
        },
        {
          "code": "<p>Insert code example here</p>"
        }
      ]
    }
  },
  "v3-semantic-link-operationid-undefined": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>'OperationId' of the link object does not point to an operation object</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value you have defined for the <code>operationId</code> property of a <code>link</code> object is not an operation defined in your API. All <code>operationId</code> properties must point to the <code>operationId</code> of an <code>operation</code> object that exists in the OpenAPI definition.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#linkObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The value you have defined for the <code>operationId</code> property of a <code>link</code> object is not an operation defined in your API. All <code>operationId</code> properties must point to the <code>operationId</code> of an <code>operation</code> object that exists in the OpenAPI definition.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>operationId</code> in the <code>link</code> object is <code>getAddress</code>, but the <code>operationId</code> of the operation is <code>getUserAddress</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"paths\": {\n      \"/users/{id}\": {\n         \"parameters\": [\n            {\n               \"name\": \"id\",\n               \"in\": \"path\",\n               \"required\": true,\n               \"description\": \"the user identifier, as userId\",\n               \"schema\": {\n                  \"type\": \"string\",\n                  \"additionalProperties\": \"false\"\n               }\n            }\n         ],\n         \"get\": {\n            \"responses\": {\n               \"200\": {\n                  \"description\": \"the user being returned\",\n                  \"content\": {\n                     \"application/json\": {\n                        \"schema\": {\n                           \"type\": \"object\",\n                           \"additionalProperties\": \"false\",\n                           \"properties\": {\n                              \"uuid\": {\n                                 \"type\": \"string\",\n                                 \"format\": \"uuid\"\n                              }\n                           }\n                        }\n                     }\n                  },\n                  \"links\": {\n                     \"address\": {\n                        \"operationId\": \"getAddress\",\n                        \"parameters\": {\n                           \"userId\": \"$request.path.id\"\n                        }\n                     }\n                  }\n               }\n            }\n         }\n      },\n      \"/users/{userid}/address\": {\n         \"parameters\": [\n            {\n               \"name\": \"userid\",\n               \"in\": \"path\",\n               \"required\": true,\n               \"description\": \"the user identifier, as userId\",\n               \"schema\": {\n                  \"type\": \"string\",\n                  \"additionalProperties\": \"false\"\n               }\n            }\n         ],\n         \"get\": {\n            \"operationId\": \"getUserAddress\",\n            \"responses\": {\n               \"200\": {\n                  \"description\": \"the user's address\"\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all <code>operationId</code> properties in <code>link</code> objects match the <code>operationId</code> properties of the operations you want to link to.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"4, 7-9\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"paths\": {\n      \"/users/{id}\": {\n         \"parameters\": [\n            {\n               \"name\": \"id\",\n               \"in\": \"path\",\n               \"required\": true,\n               \"description\": \"the user identifier, as userId\",\n               \"schema\": {\n                  \"type\": \"string\",\n                  \"additionalProperties\": \"false\",\n               }\n            }\n         ],\n         \"get\": {\n            \"responses\": {\n               \"200\": {\n                  \"description\": \"the user being returned\",\n                  \"content\": {\n                     \"application/json\": {\n                        \"schema\": {\n                           \"type\": \"object\",\n                           \"additionalProperties\": \"false\",\n                           \"properties\": {\n                              \"uuid\": {\n                                 \"type\": \"string\",\n                                 \"format\": \"uuid\"\n                              }\n                           }\n                        }\n                     }\n                  },\n                  \"links\": {\n                     \"address\": {\n                        \"operationId\": \"getUserAddress\",\n                        \"parameters\": {\n                           \"userId\": \"$request.path.id\"\n                        }\n                     }\n                  }\n               }\n            }\n         }\n      },\n      \"/users/{userid}/address\": {\n         \"parameters\": [\n            {\n               \"name\": \"userid\",\n               \"in\": \"path\",\n               \"required\": true,\n               \"description\": \"the user identifier, as userId\",\n               \"schema\": {\n                  \"type\": \"string\",\n                  \"additionalProperties\": \"false\"\n               }\n            }\n         ],\n         \"get\": {\n            \"operationId\": \"getUserAddress\",\n            \"responses\": {\n               \"200\": {\n                  \"description\": \"the user's address\"\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-mediatype-encoding-key-undefined": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Key used in the encoding map of the schema is not defined in the properties of the schema</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The encoding map of a schema you have defined for a media type object contains a key that is not defined in the properties of the schema.</p>\n                    <p>The <code>encoding</code> property of a media type object maps the schema's property name to a specific encoding. All keys in the encoding map must be defined as properties in the schema.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#mediaTypeObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The encoding map of a schema you have defined for a media type object contains a key that is not defined in the properties of the schema.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this type of risk could look in your API definition The key <code>historyMetadata</code> in the encoding map has not been defined in the schema of the media type object:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5, 25-27\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"multipart/mixed\": {\n            \"schema\": {\n               \"type\": \"object\",\n               \"additionalProperties\": \"false\",\n               \"properties\": {\n                  \"id\": {\n                     \"type\": \"string\",\n                     \"format\": \"uuid\"\n                  },\n                  \"address\": {\n                     \"type\": \"object\",\n                     \"properties\": {}\n                  },\n                     \"type\": \"object\",\n                     \"properties\": {}\n                  },\n                  \"profileImage\": {\n                     \"type\": \"string\",\n                     \"format\": \"binary\"\n                  }\n               }\n            },\n            \"encoding\": {\n               \"historyMetadata\": {\n                  \"contentType\": \"application/xml; charset=utf-8\"\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all keys in the encoding map are defined in the schema of the media type object.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"16-19, 27-29\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"multipart/mixed\": {\n            \"schema\": {\n               \"type\": \"object\",\n               \"additionalProperties\": \"false\",\n               \"properties\": {\n                  \"id\": {\n                     \"type\": \"string\",\n                     \"format\": \"uuid\"\n                  },\n                  \"address\": {\n                     \"type\": \"object\",\n                     \"properties\": {}\n                  },\n                  \"historyMetadata\": {\n                     \"description\": \"metadata in XML format\",\n                     \"type\": \"object\",\n                     \"properties\": {}\n                  },\n                  \"profileImage\": {\n                     \"type\": \"string\",\n                     \"format\": \"binary\"\n                  }\n               }\n            },\n            \"encoding\": {\n               \"historyMetadata\": {\n                  \"contentType\": \"application/xml; charset=utf-8\"\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-mediatype-multiplefile": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Uploading multiple files is only available for 'multipart/*' media type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>Content-Type</code> you have defined for the media type object only allows uploading a single file. To upload multiple files,  you must set <code>Content-Type</code> to <code>multipart</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#considerations-for-file-uploads\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>Content-Type</code> you have defined for the media type object only allows uploading a single file. To upload multiple files,  you must set <code>Content-Type</code> to <code>multipart</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The schema of the media type object defines an array of files, but the <code>Content-Type</code> does not allow uploading multiple files:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"16-17\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"application/octet-stream\": {\n            \"schema\": {\n               \"properties\": {\n                  \"file\": {\n                     \"type\": \"array\",\n                     \"additionalProperties\": \"false\",\n                     \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that if you want to enable uploading multiple files, you have set the <code>Content-Type</code> of the media type object to <code>multipart</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \" multipart/form-data\": {\n            \"schema\": {\n               \"additionalProperties\" \"false\",\n               \"properties\": {\n                  \"file\": {\n                     \"type\": \"array\",\n                     \"items\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                     }\n                  }\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-operation-id": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>'OperationId' is not unique throughout the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The operation does not have a unique <code>operationID</code>. All operations in your API must have unique operation IDs.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operation-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The operation does not have a unique <code>operationID</code>. All operations in your API must have unique operation IDs.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all operations in your API have a unique <code>operationID</code>.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-parameter-namein-multiple": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Parameters have the same name + in combination</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Two or more parameters have the same <code>nameIn</code> combination (parameter <code>name</code> + <code>in</code>). The <code>nameIn</code> combinations must be unique.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Two or more parameters have the same <code>nameIn</code> combination (parameter <code>name</code> + <code>in</code>). The <code>nameIn</code> combinations must be unique.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all parameters have unique <code>nameIn</code> combinations.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-parameter-namein-multiple-header": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Header parameters have the same name</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Two or more header parameters have properties <code>name</code> that are considered equal. </p>\n                    <p>While parameter names normally are case-sensitive, <a href=\"https://tools.ietf.org/html/rfc7230\" target=\"_blank\">RFC 7230</a> states that HTTP header names are not. The OpenAPI Specification (OAS) does therefore not consider header parameters names as case-sensitive, so names like <code>content-type</code> and <code>Content-Type</code> are considered equal. You should not have equal header parameters in your OpenAPI definition.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Two or more header parameters have properties <code>name</code> that are considered equal. ",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 10\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"name\": \"Auth-Token\",\n    \"in\": \"header\",\n    \"description\": \"Auth-Token\",\n    \"required\": true,\n    \"type\": \"string\"\n},\n...\n{\n    \"name\": \"auth-token\",\n    \"in\": \"header\",\n    \"description\": \"Authorization token for user\",\n    \"required\": true,\n    \"type\": \"string\"\n},</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all header parameters have unique <code>name</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 10\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"name\": \"Auth-Token\",\n    \"in\": \"header\",\n    \"description\": \"Auth-Token\",\n    \"required\": true,\n    \"type\": \"string\"\n},\n...\n{\n    \"name\": \"auth-token-user\",\n    \"in\": \"header\",\n    \"description\": \"Authorization token for user\",\n    \"required\": true,\n    \"type\": \"string\"\n},</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-parameter-nopathtemplate": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Path parameter in the path has no corresponding path template</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The path parameter in question does not have a corresponding path template.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The path parameter in question does not have a corresponding path template.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all path parameters have corresponding path templates, or remove the parameters that do not have them.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-parameter-path-name-empty": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Path template for the path is empty</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The path template for the path in question is empty and has not been defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#pathTemplating\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The path template for the path in question is empty and has not been defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all paths have path templates defined.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-parameter-path-undefined": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Path template has no corresponding path parameter definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The path in question includes one ore more path parameters that do not have corresponding parameters in the path template.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The path in question includes one ore more path parameters that do not have corresponding parameters in the path template.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all path parameters have corresponding parameters in the path templates, or remove the parameters that do not correspond the path template.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-path-equivalent": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Paths are equivalent</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Your API contains paths that are equivalent. In practice, these paths are considered to be identical because there is no way of telling them apart.</p>\n                    <p>This can happen, for example, if you have defined same path but with different parameter name for different operations. The parameter name alone does not make the path unique.</p>\n                    <p>The OpenAPI Specification (OAS) states that all paths must be unique.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#path-item-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Your API contains paths that are equivalent. In practice, these paths are considered to be identical because there is no way of telling them apart.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. <code>GET</code> and <code>PUT</code> operations have the same path but different parameter:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 15\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"paths\":{\n  \n  \"/path/{IDs}\":{\n    \"get\": {\n      \"description\": \"Get the ID list\",\n      \"parameters\": {\n        \"name\": \"IDs\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"type\": \"string\",\n        ...\n      }\n    }\n  }\n  \"/path/{addIDs}\": {\n    \"put\": {\n      \"description\": \"Add IDs to the ID list\",\n      \"parameters\": {\n        \"name\": \"addIDs\",\n        \"in\": \"path\",\n        \"required\": \"true\",\n        \"type\": \"string\",\n      ...</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define a single path <code>/path/{parameter}</code> with multiple operations (here <code>GET</code> and <code>PUT</code>):</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"1-2, 12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"/path/{IDs}\": {\n    \"get\": {\n      \"description\": \"Get the ID list\",\n      \"parameters\": {\n        \"name\": \"IDs\",\n        \"in\": \"path\",\n        \"required\": \"true\",\n        \"type\": \"string\",\n      ...\n     }\n   },\n    \"put\": {\n      \"description\": \"Add IDs to the ID list\",\n      \"parameters\": {\n        \"name\": \"addIDs\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"type\": \"string\",\n      ...</code></pre>"
        },
        {
          "text": "\n                    <p>If you need multiple paths, make sure that all paths are considered unique.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-property-duplicate-key": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema property is not unique throughout 'properties', 'allOf', and 'additionalProperties' fields</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Two or more schema properties have duplicate keys. Schema properties must have unique keys throughout all properties, <code>allOf</code>, and <code>additionalProperties</code> fields.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Two or more schema properties have duplicate keys. Schema properties must have unique keys throughout all properties, <code>allOf</code>, and <code>additionalProperties</code> fields.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all schema properties have unique keys.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-property-required": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Schema does not define a required property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more properties that you have defined as <code>required</code> are not defined in the schema.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more properties that you have defined as <code>required</code> are not defined in the schema.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The schema requires the property <code>name</code>, but it has not been defined:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9, 11-15\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n      \"name\": \"Pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"breed\": {\n            \"type\": \"string\"\n           },\n          \"age\": {\n            \"type\": \"integer\"\n          }\n         }\n       }\n     }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties you have defined as <code>required</code> are also defined in the schema.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9, 12-13\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"name\": {\n             \"type\": \"string\"\n           },\n          \"breed\": {\n            \"type\": \"string\"\n           },\n          \"age\": {\n            \"type\": \"integer\"\n          }\n         }\n       }\n     }</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-schema-default-invalid": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Default value for the schema property is not consistent with the property's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The default value you have defined for a schema property is not consistent with the type of the property.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The default value you have defined for a schema property is not consistent with the type of the property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all default values for schema properties match the property type.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-schema-enum-type-incompatible": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Enum value for the schema is not consistent with the schema's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The enum value you have specified for a schema does not match the type of the schema.</p>\n                "
    },
    "shortDescription": "The enum value you have specified for a schema does not match the type of the schema.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all enum values for schemas match the type of schema.</p>\n                "
        }
      ]
    }
  },
  "v3-semantic-securityrequirement-nonoauth2scopes": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Security requirement is not an OAuth2 or OpenID Connect requirement and must not define scopes</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The security requirement in question defines authorization scopes. However, it is not an OAuth2 or OpenID Connect security requirement, and thus must not define scopes.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#security-requirement-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The security requirement in question defines authorization scopes. However, it is not an OAuth2 or OpenID Connect security requirement, and thus must not define scopes.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3-4\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"api_key\": [\n      \"write:pets\",\n      \"read:pets\"\n   ]\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that only OAuth2 and OpenID Connect security requirements define scopes.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 7-8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"api_key\": [ ]\n}\n...\n{\n  \"petstore_oauth\": [\n    \"write:pets\",\n    \"read:pets\"\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-server-parameter-url-undefined": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Server object variable is not used in any server URLs</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The variable you have defined in the server variables is not used in any URLs in your API definition. All variables defined in the <code>variables</code> property map of the <code>server</code> object must be used in an <code>url</code> property in the API definition.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The variable you have defined in the server variables is not used in any URLs in your API definition. All variables defined in the <code>variables</code> property map of the <code>server</code> object must be used in an <code>url</code> property in the API definition.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The variable <code>foo</code> has been defined in the <code>variables</code> map, but is not used in the URL:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"16-17\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"servers\": [\n    {\n      \"url\": \"https://{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"variables\": {\n        \"port\": {\n          \"enum\": [\n            \"8443\",\n            \"443\"\n          ],\n          \"default\": \"8443\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        },\n        \"foo\": {\n          \"default\": \"bar\"\n        }\n      }\n    }\n  ]\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all variables you have defined in the <code>variables</code> maps of <code>server</code> objects are either used in URLs or removed.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"servers\": [\n    {\n      \"url\": \"https://{user-name}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"this value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8443\",\n            \"443\"\n          ],\n          \"default\": \"8443\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-server-url": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Server URL must be an absolute URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property <code>url</code> of the <code>server</code> object must be an absolute URL.</p>\n                    <p>The Open API Specification (OAS) states that a <code>server</code> object <em>may</em> have a relative URL but that this indicates that  the host location is relative to the location where the OpenAPI document is being served. Because API definitions are uploaded to 42Crunch Platform, not retrieved from URLs, Security Audit cannot infer the host location and thus relative URLs are not acceptable.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property <code>url</code> of the <code>server</code> object must be an absolute URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The server object has been defined, but as a relative URL:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"openapi\": \"3.0.0\",\n    \"servers\": [\n        {\n            \"url\": \"/api\"\n        }\n    ],\n    \"info\": {\n        ...</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define the URL of the <code>server</code> object as an absolute URL.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"openapi\": \"3.0.0\",\n    \"servers\": [\n        {\n            \"url\": \"http://petstore.swagger.io/api\"\n        }\n    ],\n    \"info\": {\n        ...</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-server-variables-undefined": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>Server object variable used in the server URL is not defined in the server object variables</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The variable you are using in the URL is not defined in the server variables in your API. All variables used in the <code>url</code> property must be defined as a key in the <code>variables</code> property map of the <code>server</code> object.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The variable you are using in the URL is not defined in the server variables in your API. All variables used in the <code>url</code> property must be defined as a key in the <code>variables</code> property map of the <code>server</code> object.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The variable <code>username</code> is used in the URL, but it has not been defined in the <code>variables</code> map:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4, 6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"servers\": [\n    {\n      \"url\": \"https://{username}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"variables\": {\n        \"port\": {\n          \"enum\": [\n            \"8443\",\n            \"443\"\n          ],\n          \"default\": \"8443\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  ]\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined all variables used in URLs in the <code>variables</code> map of a server object.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"4, 7-9\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"servers\": [\n    {\n      \"url\": \"https://{user-name}.gigantic-server.com:{port}/{basePath}\",\n      \"description\": \"The production API server\",\n      \"variables\": {\n        \"username\": {\n          \"default\": \"demo\",\n          \"description\": \"this value is assigned by the service provider, in this example `gigantic-server.com`\"\n        },\n        \"port\": {\n          \"enum\": [\n            \"8443\",\n            \"443\"\n          ],\n          \"default\": \"8443\"\n        },\n        \"basePath\": {\n          \"default\": \"v2\"\n        }\n      }\n    }\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "v3-semantic-servers-required": {
    "group": "oasconformance",
    "subgroup": "semantics",
    "title": {
      "text": "<h1>At least one server must be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have not defined any servers for your API. You must define at least one server for your API in the top-level <code>servers</code> field.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#serverObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have not defined any servers for your API. You must define at least one server for your API in the top-level <code>servers</code> field.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"servers\": {\n  \n  }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined at least one server for your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2, 3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"servers\": {\n   \"url\": \"https://my.api.server.com/\",\n  \"description\": \"My API server\"\n  }</code></pre>"
        },
        {
          "text": "\n                    <p>OAS v3 also supports defining an array of multiple servers for a single API:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"4-5, 8-9\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"servers\": [\n    {\n      \"url\": \"https://my.api.server1.com/\",\n      \"description\": \"API server 1\"\n    },\n   {\n      \"url\": \"https://my.api.server2.com/\",\n      \"description\": \"API server 2\"\n    }\n  ]\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-array-void": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Array must not be empty</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The definition of the array in question is empty. Array must not be void.</p>\n                "
    },
    "shortDescription": "The definition of the array in question is empty. Array must not be void.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that arrays do not have empty definitions.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-content-length": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Multiple entries in the 'content' property of a parameter</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined more than one entry in the <code>content</code> property of the <code>parameter</code> object in question. The <code>content</code> property cannot contain more than one entry.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined more than one entry in the <code>content</code> property of the <code>parameter</code> object in question. The <code>content</code> property cannot contain more than one entry.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5-11\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n   \"200\": {\n     \"description\": \"pet response\",\n       \"content\": {\n         \"application/json\": {\n            \"schema\": {\n               \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n         {\n          \"string\": \"Pet added!\"\n         }\n       }\n     }\n   }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined only one entry in the <code>content</code> property of a <code>parameter</code> object.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5-8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n   \"200\": {\n     \"description\": \"pet response\",\n       \"content\": {\n         \"application/json\": {\n            \"schema\": {\n               \"$ref\": \"#/components/schemas/Pet\"\n              }\n           }\n        }\n      }\n   }</code></pre>"
        }
      ]
    }
  },
  "v3-validation-enum-entry-badvalue": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property value is not an enum that the OpenAPI Specification allows for this property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more values you have defined for properties constrained by enums do not conform to the OpenAPI Specification (OAS).</p>\n                "
    },
    "shortDescription": "One or more values you have defined for properties constrained by enums do not conform to the OpenAPI Specification (OAS).",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all values you have defined for properties constrained by enums follow the OAS.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-global-paths-empty": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Paths in your API definition are not exposed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The paths in your API definition are empty and thus not exposed. This could happen, for example, if you did not have the proper access rights when retrieving the API specification file.</p>\n                    <p>The OpenAPI Specification (OAS) allows the paths to be empty, but it probably is not what you want to do.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#security-filtering\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The paths in your API definition are empty and thus not exposed. This could happen, for example, if you did not have the proper access rights when retrieving the API specification file.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Check that you have defined the paths you want to expose in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-global-securityrequirement-unreferenced": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Security field references a security scheme not defined in '#/components/securitySchemes'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.</p>\n                    <p>The <code>security</code> field specifies what kind of authentication your API requires, either on global level for the whole API or for individual API operations.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>security</code> field references an OAuth security scheme, but this scheme has not been defined in <code>#/components/securitySchemes</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"6, 27\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n            \"regularSecurity\": [],\n            \"OAuth2\": [ \"readOnly\" ]\n        }\n    ]\n}\n...\n{\n    \"servers\": [\n        {\n            \"url\": \"http://my.api.server.com/\",\n            \"description\": \"API server\"\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"regularSecurity\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all security schemes that the <code>security</code> field references are defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"6, 27\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n            \"regularSecurity\": [],\n            \"OAuth2\": [ \"readOnly\" ]\n        }\n    ]\n}\n...\n{\n    \"servers\": [\n        {\n            \"url\": \"http://my.api.server.com/\",\n            \"description\": \"API server\"\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"regularSecurity\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            },\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-key-pattern": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Key does not match the allowed pattern</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A key in a map you have defined does not match the regex defined for the <code>components</code> object. All keys must follow the regular expression <code>^[a-zA-Z0-9\\.\\-_]+$</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A key in a map you have defined does not match the regex defined for the <code>components</code> object. All keys must follow the regular expression <code>^[a-zA-Z0-9\\.\\-_]+$</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"securitySchemes\": {\n    \"api key\": {\n      \"type\": \"apiKey\",\n      \"name\": \"API key\",\n      \"in\": \"header\"\n    }\n }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all keys match the regex allowed for the <code>components</code> object.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"securitySchemes\": {\n    \"api_key\": {\n      \"type\": \"apiKey\",\n      \"name\": \"API key\",\n      \"in\": \"header\"\n    }\n }</code></pre>"
        }
      ]
    }
  },
  "v3-validation-media-type-encoding-restriction": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Encoding object can only be defined for 'multipart/*' and 'application/x-www-form-urlencoded' media types</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined an encoding object for an object which media type does not allow an encoding object. Encoding object is only applicable to request body objects with <code>multipart/*</code> and <code>application/x-www-form-urlencoded</code> media types.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#mediaTypeObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined an encoding object for an object which media type does not allow an encoding object. Encoding object is only applicable to request body objects with <code>multipart/*</code> and <code>application/x-www-form-urlencoded</code> media types.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you only define encoding object for request body objects with <code>multipart/*</code> and <code>application/x-www-form-urlencoded</code> media types.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-operation-securityrequirement-unreferenced": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Security field of the operation references a security scheme not defined in '#/components/securitySchemes'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.</p>\n                    <p>The <code>security</code> field specifies what kind of authentication your API requires, either on global level for the whole API or for individual API operations.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A security requirement in the <code>security</code> field contains a reference to a security scheme that is not defined in the API.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>security</code> field references an OAuth security scheme, but this scheme has not been defined in <code>#/components/securitySchemes</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"6, 27\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n            \"regularSecurity\": [],\n            \"OAuth2\": [ \"readOnly\" ]\n        }\n    ]\n}\n...\n{\n    \"servers\": [\n        {\n            \"url\": \"http://my.api.server.com/\",\n            \"description\": \"API server\"\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"regularSecurity\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all security schemes that the <code>security</code> field references are defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"6, 27\" xml:space=\"preserve\"><code class=\"language-json\">...\n{\n    \"security\": [\n        {\n            \"regularSecurity\": [],\n            \"OAuth2\": [ \"readOnly\" ]\n        }\n    ]\n}\n...\n{\n    \"servers\": [\n        {\n            \"url\": \"http://my.api.server.com/\",\n            \"description\": \"API server\"\n        }\n    ]\n}\n...  \n{\n    \"components\": {\n        \"securitySchemes\": {\n            \"regularSecurity\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            },\n            \"OAuth2\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"scopes\": {\n                            \"readOnly\": \"read objects in your account\"\n                        },\n                        \"authorizationUrl\": \"https://example.com/oauth/authorize\",\n                        \"tokenUrl\": \"https://example.com/oauth/token\", \n                    }\n                }\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-parameter-allowemptyvalue": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property 'allowEmptyValue' is only allowed for query parameters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter in question has the <code>allowEmptyValue</code> property defined, but it is not a query or a <code>formData</code> parameter. Only query and <code>formData</code> parameters can have the <code>allowEmptyValue</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter in question has the <code>allowEmptyValue</code> property defined, but it is not a query or a <code>formData</code> parameter. Only query and <code>formData</code> parameters can have the <code>allowEmptyValue</code> property defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that only query and <code>formData</code> parameters have the <code>allowEmptyValue</code> property.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-parameter-allowreserved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property 'allowReserved' is only allowed for query parameters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the property <code>allowReserved</code> for a parameter where it is not allowed. The property is only allowed for query parameters.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined the property <code>allowReserved</code> for a parameter where it is not allowed. The property is only allowed for query parameters.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure you only define <code>allowReserved</code> for query parameters.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-parameter-path-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Path parameter must have the property 'required' set to 'true'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>required</code> property of the path parameter in question is either missing altogether, or it is set to <code>false</code>. All path parameters must have the property <code>required</code> set to <code>true</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>required</code> property of the path parameter in question is either missing altogether, or it is set to <code>false</code>. All path parameters must have the property <code>required</code> set to <code>true</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the property <code>required</code> is set to <code>false</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"ID\",\n  \"in\": \"path\",\n  \"description\": \"ID to fetch\",\n  \"required\": false,\n  \"type\": \"integer\"\n...\n}</code></pre>"
        },
        {
          "text": "\n                    <p>While here, the property has been forgotten altogether:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"ID\",\n  \"in\": \"path\",\n  \"description\": \"ID to fetch\",\n  \"type\": \"integer\"\n...\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all path parameters have the <code>required</code> property set to <code>true</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"ID\",\n  \"in\": \"path\",\n  \"description\": \"ID to fetch\",\n  \"required\": true,\n  \"type\": \"integer\"\n...\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-parameter-schema-content-not-present": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Parameter object defines neither a schema nor a content property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined neither the <code>schema</code> nor <code>content</code> property for one or more <code>parameter</code> objects in your API. All parameters must have either <code>schema</code> or <code>content</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined neither the <code>schema</code> nor <code>content</code> property for one or more <code>parameter</code> objects in your API. All parameters must have either <code>schema</code> or <code>content</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7-10\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"/pets/{id}\": {\n         \"get\": {\n            \"description\": \"Returns a user based on a single ID, if the user does not have access to the pet\",\n            \"operationId\": \"find pet by id\",\n            \"parameters\": [\n               {\n                  \"name\": \"id\",\n                  \"in\": \"path\",\n                  \"description\": \"ID of pet to fetch\",\n                  \"required\": true\n               }\n            ]\n         }\n      }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined either the <code>schema</code> or <code>content</code> property for all <code>parameter</code> objects in your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"11-13\" xml:space=\"preserve\"><code class=\"language-json\">\"/pets/{id}\": {\n    \"get\": {\n        \"description\": \"Returns a user based on a single ID, if the user does not have access to the pet\",\n        \"operationId\": \"find pet by id\",\n        \"parameters\": [\n            {\n                \"name\": \"id\",\n                \"in\": \"path\",\n                \"description\": \"ID of pet to fetch\",\n                \"required\": true,\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"additionalProperties\": \"false\",\n                    \"format\": \"int64\"\n                }\n            }\n        ]\n    }\n</code></pre>"
        }
      ]
    }
  },
  "v3-validation-parameter-schema-content-present": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Parameter defines both a schema property and a content property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined both the schema and content properties for one or more parameter objects in your API. Each parameter must have either schema or content property defined, but not both.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined both the schema and content properties for one or more parameter objects in your API. Each parameter must have either schema or content property defined, but not both.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"11-13\" xml:space=\"preserve\"><code class=\"language-json\">\"/pets/{id}\": {\n         \"get\": {\n            \"description\": \"Returns a user based on a single ID, if the user does not have access to the pet\",\n            \"operationId\": \"find pet by id\",\n            \"parameters\": [\n               {\n                  \"name\": \"id\",\n                  \"in\": \"path\",\n                  \"description\": \"ID of pet to fetch\",\n                  \"required\": true,\n                  \"schema\": {\n                     \"type\": \"integer\",\n                     \"format\": \"int64\"\n                  },\n                  \"content\": {\n                     \"application/json\": {\n                        \"schema\": {\n                           \"$ref\": \"#/components/schemas/user\"\n                        }\n                     }\n                  }\n               }\n            ]\n         }\n      }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined either the <code>schema</code> or <code>content</code> property for all <code>parameter</code> objects in your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"11-13\" xml:space=\"preserve\"><code class=\"language-json\">\"/pets/{id}\": {\n    \"get\": {\n        \"description\": \"Returns a user based on a single ID, if the user does not have access to the pet\",\n        \"operationId\": \"find pet by id\",\n        \"parameters\": [\n            {\n                \"name\": \"id\",\n                \"in\": \"path\",\n                \"description\": \"ID of pet to fetch\",\n                \"required\": true,\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"additionalProperties\": \"false\",\n                    \"format\": \"int64\"\n                }\n            }\n        ]\n    }\n</code></pre>"
        }
      ]
    }
  },
  "v3-validation-property-dependency-unsatisfied": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Required dependent property of an existing property is missing</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question is defined in such a way that another property that depends on it is required. However, the required property is missing.</p>\n                "
    },
    "shortDescription": "The property in question is defined in such a way that another property that depends on it is required. However, the required property is missing.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all required operations are defined in your API, or define properties in a way that does not require dependent properties to be present.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-property-greater": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property defining a maximum is not greater than the corresponding property defining the minimum</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Properties defining maximums (<code>maximum</code>, <code>maxLegth</code> or <code>maxItems</code>) must have values that are greater than the values of the corresponding minimum properties (<code>minimum</code>, <code>minLegth</code>, or <code>minItems</code>). However, the value you have defined for the maximum is not greater than the value you have defined for the minimum.</p>\n                "
    },
    "shortDescription": "Properties defining maximums (<code>maximum</code>, <code>maxLegth</code> or <code>maxItems</code>) must have values that are greater than the values of the corresponding minimum properties (<code>minimum</code>, <code>minLegth</code>, or <code>minItems</code>). However, the value you have defined for the maximum is not greater than the value you have defined for the minimum.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined maximum values that are greater than the corresponding minimum values.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-property-integer": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property must have an integer value</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question requires a value of the type <code>integer</code>, but the value you have defined does not match this.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property in question requires a value of the type <code>integer</code>, but the value you have defined does not match this.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined values that match the type that the properties require.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-property-integer-positive": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property must have a positive integer value</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question requires a positive value of the type <code>integer</code>, but the value you have defined does not match this.</p>\n                "
    },
    "shortDescription": "The property in question requires a positive value of the type <code>integer</code>, but the value you have defined does not match this.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined values that match the type that the properties require.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-property-overflow": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Value of the numeric property is too big for the defined type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value you have defined for a numeric property is too big for the <code>type</code> of that property.</p>\n                "
    },
    "shortDescription": "The value you have defined for a numeric property is too big for the <code>type</code> of that property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined values for numeric properties that are not too big for the types of the properties.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-property-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property required by the OpenAPI Specification is missing</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Your API is missing one or more properties that the OpenAPI Specification (OAS) defines as mandatory.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#openapi-specification\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Your API is missing one or more properties that the OpenAPI Specification (OAS) defines as mandatory.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>info</code> field of this sample API is missing the version of the API, which is defined as a required property in the OAS:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"info\": {\n    \"title\": \"Sample API\",\n    \"description\": \"This is a sample API.\",\n   }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that your API has all the properties that the OAS requires.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Sample API\",\n    \"description\": \"This is a sample API.\",\n   }</code></pre>"
        }
      ]
    }
  },
  "v3-validation-property-value-type": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property value has different type than what the OpenAPI Specification requires for this property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question has a value of a type does not match the required type.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property in question has a value of a type does not match the required type.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the values of all properties match the types required.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-callback": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Callback cannot be a JSON reference pointing outside '#/components/callback'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more JSON references to reusable callbacks in your API point outside the <code>#/components/callback</code> object in the API definition. The <code>$ref</code> of all reusable callbacks must point to a <code>callback</code> object in the <code>components</code> object, otherwise they have no effect.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more JSON references to reusable callbacks in your API point outside the <code>#/components/callback</code> object in the API definition. The <code>$ref</code> of all reusable callbacks must point to a <code>callback</code> object in the <code>components</code> object, otherwise they have no effect.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, a reusable callback has been defined, but it is incorrectly referenced from <code>parameters</code> and therefore ignored:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n   \"201\": {\n     \"description\": \"subscription created\",\n     \"content\": {\n       ...\n       \"callbacks\": {\n         \"callback_1\": {\n            \"$ref\": \"#/components/parameters/reusableCallback\"\n          }\n        }\n      }\n    }\n }\n...\n\"components\": {\n...\n   \"callbacks\": {\n      \"onData\": {\n         \"{$request.query.callbackUrl}/data\": {\n           \"post\": {\n             \"requestBody\": {\n               \"description\": \"subscription payload\",\n               \"content\": {\n                 \"application/json\": {\n                    \"schema\": {\n                      \"properties\": {\n                        \"timestamp\": {\n                          \"type\": \"string\",\n                          \"format\": \"date-time\"\n                          },\n                       \"userData\": {\n                          \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all JSON references to reusable links point to <code>#/components/callbacks</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n   \"201\": {\n     \"description\": \"subscription created\",\n     \"content\": {\n       ...\n       \"callbacks\": {\n         \"callback_1\": {\n            \"$ref\": \"#/components/callbacks/reusableCallback\"\n          }\n        }\n      }\n    }\n }</code></pre>"
        }
      ]
    }
  },
  "v3-validation-reference-callback-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the callback does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the callback cannot be found in your API. You must define the target callback in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the callback cannot be found in your API. You must define the target callback in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-circular": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Circular reference is not allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more schemas in your API have a circular reference, meaning that they reference themselves at the same level.</p>\n                    <p>For example, a <code>schema</code> object in <code>allOf</code> must not reference the schema holding the <code>allOf</code> property. Same applies to <code>oneOf</code>, <code>anyOf</code> and <code>not</code> properties.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more schemas in your API have a circular reference, meaning that they reference themselves at the same level.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have not defined any circular references for the schemas in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-example": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Example cannot be a JSON reference pointing outside '#/components/examples'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more JSON references to reusable examples in your API point outside the <code>#/components/examples</code> object in the API definition. The <code>$ref</code> of all reusable examples must point to an <code>example</code> object in the <code>components</code> object, otherwise they have no effect.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more JSON references to reusable examples in your API point outside the <code>#/components/examples</code> object in the API definition. The <code>$ref</code> of all reusable examples must point to an <code>example</code> object in the <code>components</code> object, otherwise they have no effect.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, a reusable example has been defined, but it is incorrectly references from <code>schemas</code> and therefore ignored:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"content\": {\n   \"application/json\": {\n       \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n             \"$ref\": \"#/components/schemas/Pet\"\n        }\n        },\n        \"examples\": {\n           \"objectExample\": {\n             \"$ref\": \"#/components/schemas/Pet\"\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all JSON references to reusable examples point to <code>#/components/examples</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"11\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"content\": {\n   \"application/json\": {\n       \"schema\": {\n          \"type\": \"array\",\n          \"additionalProperties\": \"false\",\n          \"items\": {\n             \"$ref\": \"#/components/schemas/Pet\"\n        }\n        },\n        \"examples\": {\n           \"objectExample\": {\n             \"$ref\": \"#/components/examples/Pet\"\n            }\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-reference-example-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the example does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the example cannot be found in your API. You must define the target example in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the example cannot be found in your API. You must define the target example in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-header": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Header cannot be a JSON reference pointing outside '#/components/headers'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more JSON references to reusable headers in your API point outside the <code>#/components/headers</code> object in the API definition. The <code>$ref</code> of all reusable headers must point to a <code>header</code> object in the <code>components</code> object, otherwise they have no effect.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more JSON references to reusable headers in your API point outside the <code>#/components/headers</code> object in the API definition. The <code>$ref</code> of all reusable headers must point to a <code>header</code> object in the <code>components</code> object, otherwise they have no effect.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all JSON references to reusable headers point to <code>#/components/headers</code>.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-header-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the header does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the header cannot be found in your API. You must define the target header in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the header cannot be found in your API. You must define the target header in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-link": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Link cannot be a JSON reference pointing outside '#/components/links'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more JSON references to reusable links in your API point outside the <code>#/components/links</code> object in the API definition. The <code>$ref</code> of all reusable links mus point to a <code>link</code> object in the <code>components</code> object, otherwise they have no effect.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more JSON references to reusable links in your API point outside the <code>#/components/links</code> object in the API definition. The <code>$ref</code> of all reusable links mus point to a <code>link</code> object in the <code>components</code> object, otherwise they have no effect.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, a reusable link has been defined, but it is incorrectly referenced from <code>schemas</code> and therefore ignored:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"24\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n   \"operationId\": \"getUserByName\",\n   \"parameters\": [\n      {\n         \"name\": \"username\",\n         \"in\": \"path\",\n         \"required\": true,\n         \"schema\": {\n            \"type\": \"string\"\n         }\n      }\n   ],\n   \"responses\": {\n      \"200\": {\n        \"description\": \"The User\",\n        \"content\": {\n            \"application/json\": {\n               \"schema\": {\n                  \"$ref\": \"#/components/schemas/user\"\n               }\n            }\n         },\n         \"links\": {\n            \"userRepositories\": {\n               \"$ref\": \"#/components/schemas/UserRepositories\"\n            }\n         }\n      }\n   }\n}\n...\n{\n   \"components\": {\n      \"links\": {\n         \"UserRepositories\": {\n            \"operationId\": \"getRepositoriesByOwner\",\n            \"parameters\": {\n               \"username\": \"$response.body#/username\"\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all JSON references to reusable links point to <code>#/components/links</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"12\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n   \"200\": {\n     \"description\": \"The User\",\n     \"content\": {\n         \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/user\"\n           }\n        }\n     },\n      \"links\": {\n        \"userRepositories\": {\n            \"$ref\": \"#/components/links/UserRepositories\"\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-reference-link-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the link does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the link cannot be found in your API. You must define the target link in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the link cannot be found in your API. You must define the target link in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-parameter": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Parameter cannot be a JSON reference that points outside of the '#/components/parameters'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the reusable parameter in question as a JSON reference that points outside of the <code>#/components/parameters</code> object. This is not possible.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined the reusable parameter in question as a JSON reference that points outside of the <code>#/components/parameters</code> object. This is not possible.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all reusable parameters are defined in the <code>#/components/parameters</code> object.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-parameter-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the parameter does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the parameter cannot be found in your API. You must define the target parameter in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the parameter cannot be found in your API. You must define the target parameter in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-pathitem": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>External references at the path item level are not supported</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the path item in question as an external reference. External references are not supported at the path item level.</p>\n                "
    },
    "shortDescription": "You have defined the path item in question as an external reference. External references are not supported at the path item level.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not define path items as external references.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-requestbody": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Request body cannot be a JSON reference pointing outside '#/components/requestBodies'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more JSON references to reusable request bodies in your API point outside the <code>#/components/requestBodies</code> object in the API definition. The <code>$ref</code> of all reusable request bodies must point to a <code>requestBody</code> object in the <code>components</code> object, otherwise they have no effect.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more JSON references to reusable request bodies in your API point outside the <code>#/components/requestBodies</code> object in the API definition. The <code>$ref</code> of all reusable request bodies must point to a <code>requestBody</code> object in the <code>components</code> object, otherwise they have no effect.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, a reusable request body has been defined, but it is incorrectly referenced from <code>schemas</code> and therefore ignored:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\" {\n   \"description\": \"Add a new pet\",\n   \"requestBody\": {\n        \"$ref\": \"#/components/schemas/petRequestBody\"\n    }\n   }\n...\n\"components\": {\n   \"requestBodies\": {\n      \"petRequestBody\": {\n         \"description\": \"A JSON object for reusable request body containing the details of a pet\",\n         \"required\": true,\n         \"content\": {\n            \"application/json\": {\n               \"schema\": {\n                 \"$ref\": \"#/components/schemas/Pet\"\n                 }\n              }\n       }\n    }\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all JSON references to reusable request bodies point to <code>#/components/requestBodies</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\" {\n   \"description\": \"Add a new pet\",\n   \"requestBody\": {\n        \"$ref\": \"#/components/requestBodies/petRequestBody\"\n    }\n   }</code></pre>"
        }
      ]
    }
  },
  "v3-validation-reference-requestbody-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the request body does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the request body cannot be found in your API. You must define the target request body in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the request body cannot be found in your API. You must define the target request body in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-response": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Response cannot be a JSON reference that points outside of the '#/components/responses'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the reusable response in question as a JSON reference that points outside of the <code>#/components/responses</code> object. This is not possible.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined the reusable response in question as a JSON reference that points outside of the <code>#/components/responses</code> object. This is not possible.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all reusable responses are defined in the <code>#/components/responses</code> object.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-response-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the response does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the response cannot be found in your API. You must define the target response in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the response cannot be found in your API. You must define the target response in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-schema": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Schema cannot be a JSON reference that points outside of the '#/components/schemas'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the reusable schema in question as a JSON reference that points outside of the <code>#/components/schemas</code> object. This is not possible.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined the reusable schema in question as a JSON reference that points outside of the <code>#/components/schemas</code> object. This is not possible.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all reusable schemas are defined in the <code>#/components/schemas</code> object.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-reference-schema-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the schema does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the schema cannot be found in your API. You must define the target schema in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the schema cannot be found in your API. You must define the target schema in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-response-empty": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Responses object must contain at least one HTTP response code or a default response</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>responses</code> objects in your API are empty. The <code>responses</code> objects must contain at least one HTTP response code key, preferably for a successful operation. Alternatively, you can set the <code>responses</code> object to use the default response you have defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#responses-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>responses</code> objects in your API are empty. The <code>responses</code> objects must contain at least one HTTP response code key, preferably for a successful operation. Alternatively, you can set the <code>responses</code> object to use the default response you have defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  ...\n  \"responses\": {\n    }\n  }\n            </code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all <code>responses</code> objects have a HTTP response code key defined or the value <code>default</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  ...\n  \"responses\": {\n    \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/components/responses/Pet\"\n      }\n    }\n  ...\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-response-httpstatus": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>HTTP status codes in responses must be between 100 and 999</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>responses</code> objects in your API have non-standard HTTP response code keys. The HTTP response code keys must be between <code>100</code> and <code>999</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#httpCodes\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>responses</code> objects in your API have non-standard HTTP response code keys. The HTTP response code keys must be between <code>100</code> and <code>999</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the response code has a typo and is missing one number:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"20\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all <code>responses</code> objects have HTTP response code keys between <code>100</code> and <code>999</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-schema-array-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Schema is an array, the 'items' property must be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema in question is an array schema, but you have not defined the <code>items</code> property for it. Array schemas must have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema in question is an array schema, but you have not defined the <code>items</code> property for it. Array schemas must have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"name\": \"user\",\n  \"in\": \"body\",\n  \"description\": \"The user to be added\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"array\",\n    \"type\": \"string\"\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all array schemas have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"name\": \"user\",\n  \"in\": \"body\",\n  \"description\": \"The user to be added\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"array\",\n    \"additionalProperties\": \"false\",\n    \"items\": {\n      \"type\": \"string\"\n       }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-schema-notarray-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Schema is not an array, the 'items' property must not be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema in question is not an array schema, but you have defined the <code>items</code> property for it. Non-array schemas must not have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema in question is not an array schema, but you have defined the <code>items</code> property for it. Non-array schemas must not have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"description\": \"A simple response returning the name of the pet\",\n  \"schema\": {\n    \"type\": \"string\",\n    \"items\" {\n     ...\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that non-array schemas do not have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"description\": \"A simple response returning the name of the pet\",\n  \"schema\": {\n    \"type\": \"string\",\n    \"additionalProperties\": \"false\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-schema-write-read-only": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Schema object property has both 'writeOnly' and 'readOnly' set to 'true'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more properties in the schema you have defined has both <code>writeOnly</code> and <code>readOnly</code> properties set to <code>true</code>. You can define a property to be either \"write only\" or \"read only\", but not both.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more properties in the schema you have defined has both <code>writeOnly</code> and <code>readOnly</code> properties set to <code>true</code>. You can define a property to be either \"write only\" or \"read only\", but not both.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5-6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"type\": \"object\",\n   \"properties\": {\n      \"id\": {\n         \"type\": \"integer\",\n         \"readOnly\": true,\n         \"writeOnly\": true\n      },\n      \"name\": {\n         \"type\": \"string\"\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined either the <code>schema</code> or <code>content</code> property for all <code>parameter</code> objects in your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"type\": \"object\",\n   \"properties\": {\n      \"id\": {\n         \"type\": \"integer\",\n         \"readOnly\": true\n      },\n      \"name\": {\n         \"type\": \"string\"\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-validation-security-oauth-exclusive": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>OAuth2 security scheme defines a property not applicable to the defined OAuth2 flow</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a property for your security scheme that is not applicable to the OAuth2 flow you have chosen.</p>\n                "
    },
    "shortDescription": "You have defined a property for your security scheme that is not applicable to the OAuth2 flow you have chosen.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have define only properties applicable to your chosen OAuth2 flow in your OAuth2 security schemes.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-security-oauth-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>OAuth2 security scheme does not define a property that the defined OAuth2 flow requires</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some security schemes for OAuth2 flows in your API require the property in question. You must define the property.</p>\n                "
    },
    "shortDescription": "Some security schemes for OAuth2 flows in your API require the property in question. You must define the property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Replace with the description of how to fix the issue.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-security-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Security scheme does not define a required property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some security schemes in your API require the property in question. You must define the property.</p>\n                "
    },
    "shortDescription": "Some security schemes in your API require the property in question. You must define the property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties required by security schemes are defined correctly.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-security-type-exclusive": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Security scheme defines a property not applicable to it</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a property that is exclusive for some security schemes. However, other security schemes can use this property too. You must exclude the property from the latter security schemes.</p>\n                "
    },
    "shortDescription": "You have defined a property that is exclusive for some security schemes. However, other security schemes can use this property too. You must exclude the property from the latter security schemes.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that exclusive properties are not used by security schemes that the properties are not defined for.</p>\n                "
        }
      ]
    }
  },
  "v3-validation-unknown-property": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property is not defined in the OpenAPI Specification</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property you have defined is unknown. This property is not included in the OpenAPI Specification (OAS).</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#openapi-specification\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property you have defined is unknown. This property is not included in the OpenAPI Specification (OAS).",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The OAS does not recognize a property called <code>language</code> for strings:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"maxLength\": 8,\n     \"language\": \"en-US\",\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Do not use unknown properties not defined in the OAS.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"maxLength\": 8,\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-contact-email": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Contact object email is not a proper email address</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The email address defined the <code>email</code> field of the <code>contact</code> object is not a proper email address. The OpenAPI Specification (OAS) requires that email addresses in the contract must be proper email addresses in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#contact-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The email address defined the <code>email</code> field of the <code>contact</code> object is not a proper email address. The OpenAPI Specification (OAS) requires that email addresses in the contract must be proper email addresses in a valid format.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"contact\": {\n    \"name\": \"API Team\",\n    \"email\": \"will add later\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all email addresses are proper email addresses and have the valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"contact\": {\n    \"name\": \"API Team\",\n    \"email\": \"contact@apisecurity.io\"\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-contact-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Contact object URL is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the <code>contact</code> object is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#contact-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the <code>contact</code> object is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. In this example, the URL is missing the protocol and has an extra space in the middle:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"API Support\",\n  \"url\": \"www.example.com/ support\",\n  \"email\": \"support@example.com\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"API Support\",\n  \"url\": \"http://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-content-type-badformat": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>MIME type has an improper value</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value you have defined for the MIME type is not a proper value. For example, it might contain characters that are not allowed, or it might not follow the format <code>prefix/subtype[+suffix][;parameters]</code>.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc6838\" target=\"_blank\" rel=\"noopener\">RFC 6838</a>.</p>\n                "
    },
    "shortDescription": "The value you have defined for the MIME type is not a proper value. For example, it might contain characters that are not allowed, or it might not follow the format <code>prefix/subtype[+suffix][;parameters]</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The prefix, subtype, and suffix are separated by spaces:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"Cute cat picture\",\n        \"content\": {\n            \"image svg xml\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/Kitty\"\n                }\n            }\n        }\n    },\n...\n\t\t\t\t</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all MIME type definitions follow the format <code>prefix/subtype[+suffix][;parameters]</code> and do not contain restricted characters.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"Cute cat picture\",\n        \"content\": {\n            \"image/svg+xml\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/Kitty\"\n                }\n            }\n        }\n    },\n...\n\t\t\t\t</code></pre>"
        }
      ]
    }
  },
  "v3-warning-content-type-unknownprefix": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Prefix is not a known prefix</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You are referencing a media type using an unknown prefix. All media types referenced should be proper MIME types.</p>\n                    <p>Known prefixes for media types are:</p>\n                    <ul>\n                        <li value=\"1\"><code>application</code>\n                        </li>\n                        <li value=\"2\"><code>audio</code>\n                        </li>\n                        <li value=\"3\"><code>font</code>\n                        </li>\n                        <li value=\"4\"><code>example</code>\n                        </li>\n                        <li value=\"5\"><code>image</code>\n                        </li>\n                        <li value=\"6\"><code>message</code>\n                        </li>\n                        <li value=\"7\"><code>model</code>\n                        </li>\n                        <li value=\"8\"><code>multipart</code>\n                        </li>\n                        <li value=\"9\"><code>text</code>\n                        </li>\n                        <li value=\"10\"><code>video</code>\n                        </li>\n                    </ul>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc2046\" target=\"_blank\" rel=\"noopener\">RFC 2046</a>.</p>\n                "
    },
    "shortDescription": "You are referencing a media type using an unknown prefix. All media types referenced should be proper MIME types.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The media type prefix has been misspelt:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\">\n                        <code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"Expected response to a valid request\",\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                }\n            }\n        }\n    },\n...\n</code>\n                    </pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you only use known media type prefixes.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\">\n                        <code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"Expected response to a valid request\",\n        \"content\": {\n            \"application/json\": {\n                \"schema\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                }\n            }\n        }\n    },\n...\n</code>\n                    </pre>"
        }
      ]
    }
  },
  "v3-warning-encoding-allowreserved": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property 'allowReserved' of the encoding object is ignored because of the media type of the request body</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>allowReserved</code> property you have defined for the <code>encoding</code> object is ignored because the media type of the request body is not <code>application/x-www-form-urlencoded</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#encodingObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>allowReserved</code> property you have defined for the <code>encoding</code> object is ignored because the media type of the request body is not <code>application/x-www-form-urlencoded</code>.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the media type of the request body is <code>application/x-www-form-urlencoded</code> to apply the <code>allowReserved</code> property to encoding.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-encoding-explode": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property 'explode' of the encoding object is ignored because of the media type of the request body</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property <code>explode</code> of the <code>encoding</code> object is ignored because of the media type of the request body is not <code>application/x-www-form-urlencoded</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#encodingObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property <code>explode</code> of the <code>encoding</code> object is ignored because of the media type of the request body is not <code>application/x-www-form-urlencoded</code>.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the media type of the request body is <code>application/x-www-form-urlencoded</code> to apply the <code>explode</code> property to encoding.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-encoding-header-content-type": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header 'Content-Type' of an encoding object is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have included <code>Content-Type</code> in the <code>headers</code> field of your <code>encoding</code> object. However, for <code>encoding</code> objects, <code>Content-Type</code> is defined separately and is ignored inside the <code>headers</code> field.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#encodingObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have included <code>Content-Type</code> in the <code>headers</code> field of your <code>encoding</code> object. However, for <code>encoding</code> objects, <code>Content-Type</code> is defined separately and is ignored inside the <code>headers</code> field.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"encoding\": {\n      \"historyMetadata\": {\n         \"contentType\": \"application/xml; charset=utf-8\"\n      },\n      \"profileImage\": {         \n         \"headers\": {\n        \"Content-Type\": {\n        \"contentType\": \"image/png, image/jpeg\"\n        },\n            \"X-Rate-Limit-Limit\": {\n               \"description\": \"The number of allowed requests in the current period\",\n               \"schema\": {\n                  \"type\": \"integer\"\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you define <code>Content-Type</code> separately, and not in the <code>headers</code> field.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"encoding\": {\n      \"historyMetadata\": {\n         \"contentType\": \"application/xml; charset=utf-8\"\n      },\n      \"profileImage\": {\n         \"contentType\": \"image/png, image/jpeg\",\n         \"headers\": {\n            \"X-Rate-Limit-Limit\": {\n               \"description\": \"The number of allowed requests in the current period\",\n               \"schema\": {\n                  \"type\": \"integer\",\n                  \"additionalProperties\": \"false\"\n               }\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-encoding-style": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property 'style' of the encoding object is ignored because of the media type of the request body</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property <code>style</code> of the <code>encoding</code> object is ignored because of the media type of the request body is not <code>application/x-www-form-urlencoded</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#encodingObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property <code>style</code> of the <code>encoding</code> object is ignored because of the media type of the request body is not <code>application/x-www-form-urlencoded</code>.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the media type of the request body is <code>application/x-www-form-urlencoded</code> to apply the <code>style</code> property to encoding.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-example-schema-not-consistent": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Example is not consistent with the underlying schema</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>example</code> object you have defined is not consistent with the schema of the associated value.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#exampleObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>example</code> object you have defined is not consistent with the schema of the associated value.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>example</code> objects you define match the schemas of their associated values.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-callback-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable callback definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable callback you have defined in <code>#/components/callbacks</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable callback you have defined in <code>#/components/callbacks</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable callbacks, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-example-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable example definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable example you have defined in <code>#/components/examples</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable example you have defined in <code>#/components/examples</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable examples, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>External Documentation object URL is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the top-level <code>External Documentation</code> object is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the top-level <code>External Documentation</code> object is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the <code>url</code> field has just a placeholder string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">   \"externalDocs\" : {\n       \"description\": \"Additional documentation\",\n       \"url\": \"need to add later\"\n  }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">  \"externalDocs\" : {\n       \"description\": \"Additional documentation\",\n       \"url\": \"http://my.api.com/docs/\"\n  }</code></pre>"
        }
      ]
    }
  },
  "v3-warning-global-header-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable header definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable header you have defined in <code>#/components/headers</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable header you have defined in <code>#/components/headers</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable headers, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-link-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable link definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable link you have defined in <code>#/components/links</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable link you have defined in <code>#/components/links</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable links, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-parameter-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable parameter definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable parameter you have defined in <code>#/components/parameters</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable parameter you have defined in <code>#/components/parameters</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable parameters, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-request-body-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable request body definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable request body you have defined in <code>#/components/requestBodies</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable request body you have defined in <code>#/components/requestBodies</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable request bodies, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-response-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable response definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable response you have defined in <code>#/components/responses</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable response you have defined in <code>#/components/responses</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable responses, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-schema-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable schema definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable schema you have defined in <code>#/components/schemas</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable schema you have defined in <code>#/components/schemas</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable schemas, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-global-security-scheme-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable security scheme definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable security scheme you have defined in <code>#/components/securitySchemes</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#componentsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable security scheme you have defined in <code>#/components/securitySchemes</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable security schemes, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-license-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>License object URL is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined in the <code>url</code> field of the <code>license</code> object is not a proper URL.</p>\n                    <p>The <code>license</code> object itself and the <code>url</code> field in it are optional. If you do not defined either, your OpenAPI definition is still a valid contract. However, if you do reference your license location, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#license-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a></p>\n                "
    },
    "shortDescription": "The URL defined in the <code>url</code> field of the <code>license</code> object is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. In this case, the URL is missing the protocol prefix and has an extra space:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"license\" : {\n  \"name\": \"Apache 2.0\",\n  \"url\": \"www.apache.org/licenses/ LICENSE-2.0.html\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"license\" : {\n  \"name\": \"Apache 2.0\",\n  \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-media-type-encoding": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Encoding is not applicable to the media type of the request body</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The encoding you have defined is not applicable to the defined media type of the request body. The encoding only applies to <code>requestBody</code> object when the media type is either <code>multipart</code> or <code>application/x-www-form-urlencoded</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#mediaTypeObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The encoding you have defined is not applicable to the defined media type of the request body. The encoding only applies to <code>requestBody</code> object when the media type is either <code>multipart</code> or <code>application/x-www-form-urlencoded</code>.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the media type of the request body is <code>multipart</code> or <code>application/x-www-form-urlencoded</code> to apply the encoding.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-media-type-schema": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Media type object has no schema defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more media type objects in your API do not have schemas defined. All media types should have schema defined to restrict what input your API accepts.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#mediaTypeObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more media type objects in your API do not have schemas defined. All media types should have schema defined to restrict what input your API accepts.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. This request body would accept anything as input:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"application/octet-stream\": {\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined schemas for all media type objects in your API.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n   \"requestBody\": {\n      \"content\": {\n         \"application/octet-stream\": {\n            \"schema\": {\n               \"type\": \"string\",\n               \"format\": \"binary\",\n               \"additionalProperties\": \"false\",\n            }\n         }\n      }\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-operation-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>'External Documentation' URL of the operation is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined in the <code>url</code> field of the <code>External Documentation</code> object for the API operation in question is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined in the <code>url</code> field of the <code>External Documentation</code> object for the API operation in question is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. In this case, the URL is missing the protocol prefix and has a space in the middle:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"externalDocs\" : { \n          \"description\": \"Find more info here\",\n          \"url\": \"will add later\"\n      },</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"externalDocs\" : { \n          \"description\": \"Find more info here\",\n          \"url\": \"http://petstore.api.com/docs/pets\"\n      },</code></pre>"
        }
      ]
    }
  },
  "v3-warning-parameter-allow-empty-value-incompatible": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property 'allowEmptyValue' is ignored because of the defined 'style' behavior</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property <code>allowEmptyValue</code> you have defined for a parameter is ignored because of the <code>style</code> behavior you have defined for it.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property <code>allowEmptyValue</code> you have defined for a parameter is ignored because of the <code>style</code> behavior you have defined for it.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <p>If you want to apply <code>allowEmptyValue</code> to the parameter, make sure the <code>style</code> behavior allows it.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-parameter-allowemptyvalue": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property 'allowEmptyValue' is only allowed for query parameters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter in question has the <code>allowEmptyValue</code> property defined, but it is not a query or a <code>formData</code> parameter. Only query and <code>formData</code> parameters can have the <code>allowEmptyValue</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter in question has the <code>allowEmptyValue</code> property defined, but it is not a query or a <code>formData</code> parameter. Only query and <code>formData</code> parameters can have the <code>allowEmptyValue</code> property defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that only query and <code>formData</code> parameters have the <code>allowEmptyValue</code> property.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-parameter-header-accept": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header parameter with the name 'Accept' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"Accept\",\n  \"in\": \"header\",\n  \"description\": \"Supported content types\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\",\n    \"pattern\": \"^application/json$|^application/xml$\"\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header parameter names.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-parameter-header-authorization": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header parameter with the name 'Authorization' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"Authorization\",\n  \"in\": \"header\",\n  \"description\": \"token to be passed as a header\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"array\",\n    \"items\": {\n      \"type\": \"string\",\n      \"format\": \"base64\",\n      \"additionalProperties\": false\n    }\n  },\n  \"style\": \"simple\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header parameter names.</p>\n                    <p>Make sure that you have properly defined the security section of your OpenAPI definition and are not trying to use a header parameter to define what in fact should be conveyed in the actual <code>Authorization</code> header.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-parameter-header-content-type": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header parameter with the name 'Content-Type' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"Content-Type\",\n  \"in\": \"header\",\n  \"description\": \"Supported content types\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\",\n    \"pattern\": \"^application/json$|^application/xml$\"\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header parameter names.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-parameter-required-default": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Default value unnecessarily declared for a required parameter type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have specified a default value for a required parameter. The values for required parameters are always specified in requests, so there is no need to specify a default value that the server could use.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have specified a default value for a required parameter. The values for required parameters are always specified in requests, so there is no need to specify a default value that the server could use.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n            \"default: \"Fido\"\n           },\n          ...\n          }\n         }\n       }\n     }\n   ]\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not specify default responses for required parameters.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"16\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n           },\n          ...\n          }\n         }\n       }\n     }\n   ]\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-path-pathitems-empty": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Path has no operation defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A path in your API has no operation defined in it. This could happen, for example, if you did not have the proper access rights when retrieving the API definition.</p>\n                    <p>The OpenAPI Specification (OAS) allows paths that do not have operation, but it probably is not what you want to do.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#security-filtering\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A path in your API has no operation defined in it. This could happen, for example, if you did not have the proper access rights when retrieving the API definition.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define operations for all paths your API exposes.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-reference-property": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>No properties allowed alongside a JSON reference</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a property alongside a <code>$ref</code> JSON reference. This is not allowed.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#referenceObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined a property alongside a <code>$ref</code> JSON reference. This is not allowed.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not define any properties alongside <code>$ref</code> properties.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-response-header-content-type": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header with the name 'Content-Type' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameterObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"headers\": {\n    \"Content-type\": {\n       \"application/json\": {\n         \"schema\": {\n            \"$ref\": \"#/components/schemas/Pet\"\n            }\n         }\n      }\n   }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header parameter names.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"headers\": {\n    \"Pet\": {\n       \"application/json\": {\n         \"schema\": {\n            \"$ref\": \"#/components/schemas/Pet\"\n            }\n         }\n      }\n   }</code></pre>"
        }
      ]
    }
  },
  "v3-warning-responses-http-status-successful": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>If operation has only one HTTP response defined, the HTTP status code should be for a success</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API have only one response defined for them, but the HTTP status code in the response definition is not for a successful operation.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#responses-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API have only one response defined for them, but the HTTP status code in the response definition is not for a successful operation.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all operations have at least one HTTP response for a successful operation defined.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-schema-enum-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Schema keyword used alongside enum</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a schema keyword alongside an enum. This is not allowed.</p>\n                "
    },
    "shortDescription": "You have used a schema keyword alongside an enum. This is not allowed.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that schema properties that should not appear alongside enums do not do so.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-schema-example-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Value of the schema example is not consistent with the schema</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>example</code> object you have defined is not consistent with the schema of the associated value.</p>\n                "
    },
    "shortDescription": "The <code>example</code> object you have defined is not consistent with the schema of the associated value.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>example</code> objects you define match the schemas of their associated values.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-schema-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>'External Documentation' URL of the schema is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the <code>External Documentation</code> object for the schema in question is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the <code>External Documentation</code> object for the schema in question is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the <code>url</code> field has just a placeholder string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"schema\" : {\n    \"type\": \"string\",\n    \"format\": \"email\",\n    \"externalDocs\" : {\n         \"description\": \"Find more info here\",\n         \"url\": \"need to add later\"\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"schema\" : {\n    \"type\": \"string\",\n    \"format\": \"email\",\n    \"externalDocs\" : {\n         \"description\": \"Find more info here\",\n         \"url\": \"http://my.api.com/docs/email\"\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-schema-format-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Schema format is not applicable to the schema's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The format you have specified for a numeric schema is not consistent with the type you have defined for the schema. While this is acceptable, it may not be what you want.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The format you have specified for a numeric schema is not consistent with the type you have defined for the schema. While this is acceptable, it may not be what you want.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The type of the schema is <code>integer</code>, but the format is <code>float</code> which is not an integer format:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"User\": {\n    \"type\": \"object\",\n    \"additionalProperties\": false\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"float\"\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the formats of all numeric schemas match the type of the schemas.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"User\": {\n    \"type\": \"object\",\n    \"additionalProperties\": false\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "v3-warning-schema-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Schema keyword is not applicable to the defined data type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema keyword you have defined is not applicable to the data type you have defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema keyword you have defined is not applicable to the data type you have defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties defined for schema properties match the data type.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-schema-sample-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Value of the 'x-42c-sample' extension is not consistent with the schema</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value of the extension <code>x-42c-sample</code> is not consistent with the schema of the associated value.</p>\n                "
    },
    "shortDescription": "The value of the extension <code>x-42c-sample</code> is not consistent with the schema of the associated value.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>x-42c-sample</code> extension matches the schema of the associated value.</p>\n                "
        }
      ]
    }
  },
  "v3-warning-tag-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>'External Documentation' URL of the tag is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the <code>External Documentation</code> object for a tag is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the <code>External Documentation</code> object for a tag is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the <code>url</code> field has just a placeholder string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"tag\" : {\n    \"name\": \"pet\",\n    \"description\": \"Pet operations\",\n        \"externalDocs\" : {\n             \"description\": \"Find more info here\",\n             \"url\": \"need to add later\"\n        }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"tag\" : {\n    \"name\": \"pet\",\n    \"description\": \"Pet operations\",\n        \"externalDocs\" : {\n             \"description\": \"Find more info here\",\n             \"url\": \"http://petstore.api.com/docs/petsoperations\"\n        }</code></pre>"
        }
      ]
    }
  },
  "validation-enum-entry-badvalue": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property value is not an enum that the OpenAPI Specification allows for this property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more values you have defined for properties constrained by enums do not conform to the OpenAPI Specification (OAS).</p>\n                "
    },
    "shortDescription": "One or more values you have defined for properties constrained by enums do not conform to the OpenAPI Specification (OAS).",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all values you have defined for properties constrained by enums follow the OAS.</p>\n                "
        }
      ]
    }
  },
  "validation-global-paths-empty": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Paths in your API definition are not exposed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The paths in your API definition are empty and thus not exposed. This could happen, for example, if you did not have the proper access rights when retrieving the API specification file.</p>\n                    <p>The OpenAPI Specification (OAS) allows the paths to be empty, but it probably is not what you want to do.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-filtering\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The paths in your API definition are empty and thus not exposed. This could happen, for example, if you did not have the proper access rights when retrieving the API specification file.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Check that you have defined the paths you want to expose in your API.</p>\n                "
        }
      ]
    }
  },
  "validation-header-array-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Header is an array, the 'items' property must be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The header in question is an array, but you have not defined the <code>items</code> property for it. Array headers must have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The header in question is an array, but you have not defined the <code>items</code> property for it. Array headers must have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n\"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"array\",\n      }\n    }\n  }\n...\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all array headers have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5-6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n  \"headers\": {\n    \"x-ids\": {\n      \"schema\": {\n        \"type\": \"integer\",\n        \"items\": {\n          ...\n        }\n      }\n    }\n  }\n...\n}</code></pre>"
        }
      ]
    }
  },
  "validation-header-notarray-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Header is not an array, the 'items' property must not be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The header in question is not an array, but you have defined the <code>items</code> property for it. Non-array headers must not have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The header in question is not an array, but you have defined the <code>items</code> property for it. Non-array headers must not have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5-6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n  \"headers\": {\n    \"x-ids\": {\n      \"schema\": {\n        \"type\": \"integer\",\n        \"items\": {\n          ...\n        }\n      }\n    }\n  }\n...\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that non-array headers do not have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">...\n  \"headers\": {\n    \"x-ids\": {\n      \"schema\": {\n        \"type\": \"integer\"\n      }\n    }\n  }\n...\n}</code></pre>"
        }
      ]
    }
  },
  "validation-parameter-allowemptyvalue": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property 'allowEmptyValue' is only allowed for query parameters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter in question has the <code>allowEmptyValue</code> property defined, but it is not a query or a <code>formData</code> parameter. Only query and <code>formData</code> parameters can have the <code>allowEmptyValue</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter in question has the <code>allowEmptyValue</code> property defined, but it is not a query or a <code>formData</code> parameter. Only query and <code>formData</code> parameters can have the <code>allowEmptyValue</code> property defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that only query and <code>formData</code> parameters have the <code>allowEmptyValue</code> property.</p>\n                "
        }
      ]
    }
  },
  "validation-parameter-array-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Parameter is an array, the 'items' property must be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter in question is an array, but you have not defined the <code>items</code> property for it. Array parameters must have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter in question is an array, but you have not defined the <code>items</code> property for it. Array parameters must have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\"\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all array parameters have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"9\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": [\n  {\n    \"name\": \"ids\",\n    \"in\": \"query\",\n    \"description\": \"IDs to filter by\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n       \"type\": \"integer\",\n       \"format\": \"int32\"\n       ...\n     }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "validation-parameter-body-additionalproperties": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Body parameter defines a property not applicable to body parameters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The body parameter in question defines more properties than allowed. Body parameters must only define <code>name</code>, <code>in</code> , <code>description</code>, <code>required</code> and <code>schema</code> properties.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The body parameter in question defines more properties than allowed. Body parameters must only define <code>name</code>, <code>in</code> , <code>description</code>, <code>required</code> and <code>schema</code> properties.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that body parameters only define <code>name</code>, <code>in</code> , <code>description</code>, <code>required</code> and <code>schema</code> properties. Remove other properties.</p>\n                "
        }
      ]
    }
  },
  "validation-parameter-body-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Body parameter must have the 'schema' property defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The body parameter in question is missing the <code>schema</code> property. Body parameters must have the <code>schema</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The body parameter in question is missing the <code>schema</code> property. Body parameters must have the <code>schema</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n    }\n  ]\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all body parameters have the <code>schema</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"name\": {\n          \"type\": \"string\"\n          },\n          ...\n         }\n       }\n     }\n   ]\n}</code></pre>"
        }
      ]
    }
  },
  "validation-parameter-collectionformat": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Value 'multi' for the property 'collectionFormat' is only allowed for query parameters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter in question has the value <code>multi</code> defined for the property <code>collectionFormat</code>. However, the parameter is not a query or <code>formData</code> parameter. Only query and <code>formData</code> arrays can have <code>collectionFormat</code> set to <code>multi</code>.</p>\n                    <p>The value <code>multi</code> value denotes multiple parameter instances instead of multiple values for a single instance, like other array format values.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter in question has the value <code>multi</code> defined for the property <code>collectionFormat</code>. However, the parameter is not a query or <code>formData</code> parameter. Only query and <code>formData</code> arrays can have <code>collectionFormat</code> set to <code>multi</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>collectionFormat</code>property has been defined for a body parameter:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"ID\",\n  \"in\": \"body\",\n  \"description\": \"ID of the account to be fetched\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\"\n  },\n  \"collectionFormat\": \"multi\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that only query and <code>formData</code> array parameters have <code>collectionFormat</code> set to <code>multi</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"id\",\n  \"in\": \"query\",\n  \"description\": \"ID of the account to be fetched\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\"\n  },\n  \"collectionFormat\": \"multi\"\n}</code></pre>"
        }
      ]
    }
  },
  "validation-parameter-file": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>File parameter has no 'in: formData' property defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The file parameter in question is does not have an <code>in: formData</code> property defined. All file parameters must have the <code>in: formData</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The file parameter in question is does not have an <code>in: formData</code> property defined. All file parameters must have the <code>in: formData</code> property defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all file parameters have the <code>in: formData</code> property defined.</p>\n                "
        }
      ]
    }
  },
  "validation-parameter-notarray-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Parameter is not an array, the 'items' property must not be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter in question is not an array, but you have defined the <code>items</code> property for it. Non-array parameters must have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter in question is not an array, but you have defined the <code>items</code> property for it. Non-array parameters must have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"format\": \"int32\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"description\": \"Number of the objects in&#160;the&#160;array.\"\n    \"items\": {\n       ...\n     }\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that non-array parameters do not have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"format\": \"int32\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"description\": \"Number of the objects in&#160;the&#160;array.\"\n       ...\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "validation-parameter-notbody-schema": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Non-body parameter must not define the 'schema' property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The parameter in question is not a body parameter, but it has the <code>schema</code> property defined. Non-body parameters must not have the <code>schema</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The parameter in question is not a body parameter, but it has the <code>schema</code> property defined. Non-body parameters must not have the <code>schema</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"IDs\",\n  \"in\": \"query\",\n  \"description\": \"IDs to fetch\",\n  \"required\": false,\n  \"schema\": {\n    \"type\": \"object\"\n    \"required\": [\n          \"ID list\"\n     ],\n     \"properties\": {\n        \"ID list\"\n          \"type\": \"array\",\n          \"items\": {\n          \"type\": \"integer\"\n           ...\n     },\n    \"collectionFormat\": \"multi\"\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that non-body parameters do not have the <code>schema</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3, 6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"IDs\",\n  \"in\": \"query\",\n  \"description\": \"IDs to fetch\",\n  \"required\": false,\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"integer\"\n     ...\n  },\n  \"collectionFormat\": \"multi\"\n}</code></pre>"
        }
      ]
    }
  },
  "validation-parameter-path-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Path parameter must have the property 'required' set to 'true'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>required</code> property of the path parameter in question is either missing altogether, or it is set to <code>false</code>. All path parameters must have the property <code>required</code> set to <code>true</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The <code>required</code> property of the path parameter in question is either missing altogether, or it is set to <code>false</code>. All path parameters must have the property <code>required</code> set to <code>true</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the property <code>required</code> is set to <code>false</code>:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"ID\",\n  \"in\": \"path\",\n  \"description\": \"ID to fetch\",\n  \"required\": false,\n  \"type\": \"integer\"\n...\n}</code></pre>"
        },
        {
          "text": "\n                    <p>While here, the property has been forgotten altogether:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"ID\",\n  \"in\": \"path\",\n  \"description\": \"ID to fetch\",\n  \"type\": \"integer\"\n...\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all path parameters have the <code>required</code> property set to <code>true</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"ID\",\n  \"in\": \"path\",\n  \"description\": \"ID to fetch\",\n  \"required\": true,\n  \"type\": \"integer\"\n...\n}</code></pre>"
        }
      ]
    }
  },
  "validation-property-dependency-unsatisfied": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Required dependent property of an existing property is missing</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question is defined in such a way that another property that depends on it is required. However, the required property is missing.</p>\n                "
    },
    "shortDescription": "The property in question is defined in such a way that another property that depends on it is required. However, the required property is missing.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all required operations are defined in your API, or define properties in a way that does not require dependent properties to be present.</p>\n                "
        }
      ]
    }
  },
  "validation-property-greater": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property defining a maximum is not greater than the corresponding property defining the minimum</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Properties defining maximums (<code>maximum</code>, <code>maxLegth</code> or <code>maxItems</code>) must have values that are greater than the values of the corresponding minimum properties (<code>minimum</code>, <code>minLegth</code>, or <code>minItems</code>). However, the value you have defined for the maximum is not greater than the value you have defined for the minimum.</p>\n                "
    },
    "shortDescription": "Properties defining maximums (<code>maximum</code>, <code>maxLegth</code> or <code>maxItems</code>) must have values that are greater than the values of the corresponding minimum properties (<code>minimum</code>, <code>minLegth</code>, or <code>minItems</code>). However, the value you have defined for the maximum is not greater than the value you have defined for the minimum.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined maximum values that are greater than the corresponding minimum values.</p>\n                "
        }
      ]
    }
  },
  "validation-property-integer": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property must have an integer value</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question requires a value of the type <code>integer</code>, but the value you have defined does not match this.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property in question requires a value of the type <code>integer</code>, but the value you have defined does not match this.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined values that match the type that the properties require.</p>\n                "
        }
      ]
    }
  },
  "validation-property-integer-positive": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property must have a positive integer value</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question requires a positive value of the type <code>integer</code>, but the value you have defined does not match this.</p>\n                "
    },
    "shortDescription": "The property in question requires a positive value of the type <code>integer</code>, but the value you have defined does not match this.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined values that match the type that the properties require.</p>\n                "
        }
      ]
    }
  },
  "validation-property-overflow": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Value of the numeric property is too big for the type of the property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value you have defined for a numeric property is too big for the <code>type</code> of that property.</p>\n                "
    },
    "shortDescription": "The value you have defined for a numeric property is too big for the <code>type</code> of that property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have defined values for numeric properties that are not too big for the types of the properties.</p>\n                "
        }
      ]
    }
  },
  "validation-property-pattern": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Host or basePath property does not match the pattern constraining the host or basePath values</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question does not match the required pattern.</p>\n                "
    },
    "shortDescription": "The property in question does not match the required pattern.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties match the required patterns.</p>\n                "
        }
      ]
    }
  },
  "validation-property-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property required by the OpenAPI Specification is missing</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Your API is missing one or more properties that the OpenAPI Specification (OAS) defines as mandatory.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#openapi-specification\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "Your API is missing one or more properties that the OpenAPI Specification (OAS) defines as mandatory.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The <code>info</code> field of this sample API is missing the version of the API, which is defined as a required property in the OAS:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"info\": {\n    \"title\": \"Sample API\",\n    \"description\": \"This is a sample API.\",\n   }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that your API has all the properties that the OAS requires.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Sample API\",\n    \"description\": \"This is a sample API.\",\n   }</code></pre>"
        }
      ]
    }
  },
  "validation-property-unique": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property must be unique throughout the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question is not unique. All properties must be unique throughout your whole API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#format\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property in question is not unique. All properties must be unique throughout your whole API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties in your API are unique.</p>\n                "
        }
      ]
    }
  },
  "validation-property-value-type": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property value has different type than what the OpenAPI Specification requires for this property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property in question has a value of a type does not match the required type.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property in question has a value of a type does not match the required type.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the values of all properties match the types required.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-circular": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Circular reference is not allowed</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more schemas in your API have a circular reference, meaning that they reference themselves at the same level.</p>\n                    <p>For example, a <code>schema</code> object in <code>allOf</code> must not reference the schema holding the <code>allOf</code> property. Same applies to <code>oneOf</code>, <code>anyOf</code> and <code>not</code> properties.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more schemas in your API have a circular reference, meaning that they reference themselves at the same level.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have not defined any circular references for the schemas in your API.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-parameter": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Parameter cannot be a JSON reference that points outside '#/parameters'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the parameter in question as a JSON reference that points outside of the <code>parameters</code> object. This is not possible.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#reference-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined the parameter in question as a JSON reference that points outside of the <code>parameters</code> object. This is not possible.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all parameters that are JSON references are defined in the <code>parameters</code> object.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-parameter-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the parameter does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the parameter cannot be found in your API. You must define the target parameter in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the parameter cannot be found in your API. You must define the target parameter in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-pathitem": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>External references at the path item level are not supported</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the path item in question as an external reference. External references are not supported at the path item level.</p>\n                "
    },
    "shortDescription": "You have defined the path item in question as an external reference. External references are not supported at the path item level.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not define path items as external references.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-response": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Response cannot be a JSON reference that points outside '#/responses'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the response in question as a JSON reference that points outside of the <code>responses</code> object. This is not possible.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#reference-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined the response in question as a JSON reference that points outside of the <code>responses</code> object. This is not possible.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all responses that all JSON references are defined in the <code>responses</code> object.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-response-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the response does not exist in the API</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the response cannot be found in your API. You must define the target response in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the response cannot be found in your API. You must define the target response in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-schema": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Schema cannot be a JSON reference that points outside '#/definitions'</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined the schema in question as a JSON reference that points outside of the <code>definitions</code> object. This is not possible.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined the schema in question as a JSON reference that points outside of the <code>definitions</code> object. This is not possible.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all schemas that are JSON references are defined in the <code>definitions</code> object.</p>\n                "
        }
      ]
    }
  },
  "validation-reference-schema-unresolved": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Target of the JSON reference of the schema does not exist</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The target of the JSON reference of the schema cannot be found in your API. You must define the target schema in your API.</p>\n                "
    },
    "shortDescription": "The target of the JSON reference of the schema cannot be found in your API. You must define the target schema in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all targets of JSON references are defined in your API.</p>\n                "
        }
      ]
    }
  },
  "validation-response-empty": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Responses object must contain at least one HTTP response code or a default response</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>responses</code> objects in your API are empty. The <code>responses</code> objects must contain at least one HTTP response code key, preferably for a successful operation. Alternatively, you can set the <code>responses</code> object to use the default response you have defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#responses-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>responses</code> objects in your API are empty. The <code>responses</code> objects must contain at least one HTTP response code key, preferably for a successful operation. Alternatively, you can set the <code>responses</code> object to use the default response you have defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  ...\n  \"responses\": {\n    }\n  }\n            </code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all <code>responses</code> objects have a HTTP response code key defined or the value <code>default</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  ...\n  \"responses\": {\n    \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n      }\n    }\n  ...\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "validation-response-httpstatus": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>HTTP status codes in responses must be between 100 and 999</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more <code>responses</code> objects in your API have non-standard HTTP response code keys. The HTTP response code keys must be between <code>100</code> and <code>999</code>.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#http-status-codes\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more <code>responses</code> objects in your API have non-standard HTTP response code keys. The HTTP response code keys must be between <code>100</code> and <code>999</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the response code has a typo and is missing one number:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"20\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all <code>responses</code> objects have HTTP response code keys between <code>100</code> and <code>999</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"2\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n    \"description\": \"Expected response to a valid request\",\n    \"schema\": {\n      \"$ref\": \"#/definitions/Pets\"\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "validation-schema-array-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Schema is an array, the 'items' property must be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema in question is an array schema, but you have not defined the <code>items</code> property for it. Array schemas must have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema in question is an array schema, but you have not defined the <code>items</code> property for it. Array schemas must have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"name\": \"user\",\n  \"in\": \"body\",\n  \"description\": \"The user to be added\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"array\",\n    \"type\": \"string\"\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all array schemas have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n\"name\": \"user\",\n  \"in\": \"body\",\n  \"description\": \"The user to be added\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"array\",\n    \"additionalProperties\": \"false\",\n    \"items\": {\n      \"type\": \"string\"\n       }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "validation-schema-notarray-items": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Schema is not an array, the 'items' property must not be defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema in question is not an array schema, but you have defined the <code>items</code> property for it. Non-array schemas must not have the <code>items</code> property defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema in question is not an array schema, but you have defined the <code>items</code> property for it. Non-array schemas must not have the <code>items</code> property defined.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"5\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"description\": \"A simple response returning the name of the pet\",\n  \"schema\": {\n    \"type\": \"string\",\n    \"items\" {\n     ...\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that non-array schemas do not have the <code>items</code> property defined.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"description\": \"A simple response returning the name of the pet\",\n  \"schema\": {\n    \"type\": \"string\",\n    \"additionalProperties\": \"false\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "validation-security-oauth-exclusive": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>OAuth2 security scheme defines a property not applicable to the defined OAuth2 flow</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a property for your security scheme that is not applicable to the OAuth2 flow you have chosen.</p>\n                "
    },
    "shortDescription": "You have defined a property for your security scheme that is not applicable to the OAuth2 flow you have chosen.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you have define only properties applicable to your chosen OAuth2 flow in your OAuth2 security schemes.</p>\n                "
        }
      ]
    }
  },
  "validation-security-oauth-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>OAuth2 security scheme does not define a property that the defined OAuth2 flow requires</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some security schemes for OAuth2 flows in your API require the property in question. You must define the property.</p>\n                "
    },
    "shortDescription": "Some security schemes for OAuth2 flows in your API require the property in question. You must define the property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Replace with the description of how to fix the issue.</p>\n                "
        }
      ]
    }
  },
  "validation-security-required": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Security scheme does not define a required property</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>Some security schemes in your API require the property in question. You must define the property.</p>\n                "
    },
    "shortDescription": "Some security schemes in your API require the property in question. You must define the property.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties required by security schemes are defined correctly.</p>\n                "
        }
      ]
    }
  },
  "validation-security-type-exclusive": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Security scheme defines a property not applicable to it</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a property that is exclusive for some security schemes. However, other security schemes can use this property too. You must exclude the property from the latter security schemes.</p>\n                "
    },
    "shortDescription": "You have defined a property that is exclusive for some security schemes. However, other security schemes can use this property too. You must exclude the property from the latter security schemes.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that exclusive properties are not used by security schemes that the properties are not defined for.</p>\n                "
        }
      ]
    }
  },
  "validation-unknown-property": {
    "group": "oasconformance",
    "subgroup": "structure",
    "title": {
      "text": "<h1>Property is not defined in the OpenAPI Specification</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The property you have defined is unknown. This property is not included in the OpenAPI Specification (OAS).</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#openapi-specification\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The property you have defined is unknown. This property is not included in the OpenAPI Specification (OAS).",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The OAS does not recognize a property called <code>language</code> for strings:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"maxLength\": 8,\n     \"language\": \"en-US\",\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Do not use unknown properties not defined in the OAS.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"maxLength\": 8,\n     \"description\": \"Identifier of the object to be extracted.\"\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-contact-email": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Contact object email is not a proper email address</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The email address defined the <code>email</code> field of the <code>contact</code> object is not a proper email address. The OpenAPI Specification (OAS) requires that email addresses in the contract must be proper email addresses in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#contactObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The email address defined the <code>email</code> field of the <code>contact</code> object is not a proper email address. The OpenAPI Specification (OAS) requires that email addresses in the contract must be proper email addresses in a valid format.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"contact\": {\n    \"name\": \"API Team\",\n    \"email\": \"will add later\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all email addresses are proper email addresses and have the valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"contact\": {\n    \"name\": \"API Team\",\n    \"email\": \"contact@apisecurity.io\"\n}</code></pre>"
        }
      ]
    }
  },
  "warning-contact-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Contact object URL is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the <code>contact</code> object is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#contactObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the <code>contact</code> object is not a proper URL. The OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. In this example, the URL is missing the protocol and has an extra space in the middle:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"API Support\",\n  \"url\": \"www.example.com/ support\",\n  \"email\": \"support@example.com\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"API Support\",\n  \"url\": \"http://www.example.com/support\",\n  \"email\": \"support@example.com\"\n}</code></pre>"
        }
      ]
    }
  },
  "warning-content-type-badformat": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>MIME type has an improper value</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value you have defined for the MIME type is not a proper value. For example, it might contain characters that are not allowed, or it might not follow the format <code>prefix/subtype[+suffix][;parameters]</code>.</p>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc6838\" target=\"_blank\" rel=\"noopener\">RFC 6838</a>.</p>\n                "
    },
    "shortDescription": "The value you have defined for the MIME type is not a proper value. For example, it might contain characters that are not allowed, or it might not follow the format <code>prefix/subtype[+suffix][;parameters]</code>.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The prefix, subtype, and suffix are separated by spaces:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"Cute cat picture\",\n        \"content\": {\n            \"image svg xml\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/Kitty\"\n                }\n            }\n        }\n    },\n...\n\t\t\t\t</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all MIME type definitions follow the format <code>prefix/subtype[+suffix][;parameters]</code> and do not contain restricted characters.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"5\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n    \"200\": {\n        \"description\": \"Cute cat picture\",\n        \"content\": {\n            \"image/svg+xml\": {\n                \"schema\": {\n                    \"$ref\": \"#/definitions/Kitty\"\n                }\n            }\n        }\n    },\n...\n\t\t\t\t</code></pre>"
        }
      ]
    }
  },
  "warning-content-type-unknownprefix": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Prefix is not a known prefix</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You are referencing a media type using an unknown prefix. All media types referenced should be proper MIME types.</p>\n                    <p>Known prefixes for media types are:</p>\n                    <ul>\n                        <li value=\"1\"><code>application</code>\n                        </li>\n                        <li value=\"2\"><code>audio</code>\n                        </li>\n                        <li value=\"3\"><code>font</code>\n                        </li>\n                        <li value=\"4\"><code>example</code>\n                        </li>\n                        <li value=\"5\"><code>image</code>\n                        </li>\n                        <li value=\"6\"><code>message</code>\n                        </li>\n                        <li value=\"7\"><code>model</code>\n                        </li>\n                        <li value=\"8\"><code>multipart</code>\n                        </li>\n                        <li value=\"9\"><code>text</code>\n                        </li>\n                        <li value=\"10\"><code>video</code>\n                        </li>\n                    </ul>\n                    <p>For more details, see <a href=\"https://tools.ietf.org/html/rfc2046\" target=\"_blank\" rel=\"noopener\">RFC 2046</a>.</p>\n                "
    },
    "shortDescription": "You are referencing a media type using an unknown prefix. All media types referenced should be proper MIME types.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The media type prefix has been misspelt:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"7\" xml:space=\"preserve\">\n                        <code class=\"language-json\">{\n  \"/pets\": {\n    \"put\": {\n      \"summary\": \"Updates a pet in the store with form data\",\n      \"operationId\": \"updatePetWithForm\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"parameters\": [\n...\n}</code>\n                    </pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you only use known media type prefixes.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" data-line=\"7\" xml:space=\"preserve\">\n                        <code class=\"language-json\">{\n  \"/pets\": {\n    \"put\": {\n      \"summary\": \"Updates a pet in the store with form data\",\n      \"operationId\": \"updatePetWithForm\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"parameters\": [\n...\n}</code>\n                    </pre>"
        }
      ]
    }
  },
  "warning-global-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>External Documentation object URL is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the top-level <code>External Documentation</code> object is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the top-level <code>External Documentation</code> object is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the <code>url</code> field has just a placeholder string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">   \"externalDocs\" : {\n       \"description\": \"Additional documentation\",\n       \"url\": \"need to add later\"\n  }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">  \"externalDocs\" : {\n       \"description\": \"Additional documentation\",\n       \"url\": \"http://my.api.com/docs/\"\n  }</code></pre>"
        }
      ]
    }
  },
  "warning-global-parameter-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable parameter definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable parameter you have defined in <code>#/parameters</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parametersDefinitionsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a></p>\n                "
    },
    "shortDescription": "A reusable parameter you have defined in <code>#/parameters</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable parameters, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "warning-global-response-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable response definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable response you have defined in <code>#/responses</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#responses-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable response you have defined in <code>#/responses</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable responses, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "warning-global-schema-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable schema definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable schema you have defined in <code>#/definitions</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#definitionsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a></p>\n                "
    },
    "shortDescription": "A reusable schema you have defined in <code>#/definitions</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable schemas, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "warning-global-security-scheme-unused": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Reusable security scheme definition is not used in the OpenAPI definition</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A reusable security scheme you have defined in <code>#/securityDefinitions</code> is not used anywhere in your API.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#securityDefinitionsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A reusable security scheme you have defined in <code>#/securityDefinitions</code> is not used anywhere in your API.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Remove unused reusable security schemes, or make sure they are used in the API.</p>\n                "
        }
      ]
    }
  },
  "warning-header-enum-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property constraining header values is defined even though the header's values are defined in an enum</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have specified a property constraining header values even though the header's values are defined in an enum. This makes little sense.</p>\n                "
    },
    "shortDescription": "You have specified a property constraining header values even though the header's values are defined in an enum. This makes little sense.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Do not define unnecessary properties for headers constrained by enums.</p>\n                "
        }
      ]
    }
  },
  "warning-header-format-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header format is not applicable to the header's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The format you have specified for a numeric header is not consistent with the type you have defined. While this is acceptable, it may not be what you want.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The format you have specified for a numeric header is not consistent with the type you have defined. While this is acceptable, it may not be what you want.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The header type is integer, but format is float which is not an integer format:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"float\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the formats of all numeric headers match the type of the headers.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"responses\": {\n  \"200\": {\n    \"description\": \"OK\",\n    \"headers\": {\n      \"x-ids\": {\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-header-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header property is not applicable to the header's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A property defined for a header is not applicable to the type of the header.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A property defined for a header is not applicable to the type of the header.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The rate limiting header can include parameters of the type <code>integer</code>, but the parameters also have the property <code>maxLength</code> defined which is a property of string parameters, not integers:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n \"headers\": {\n    \"X-Rate-Limit-Limit\": {\n      \"description\": \"The number of requests allowed in the current period\",\n      \"type\": \"integer\",\n      \"maxLength\": 8,\n    },\n    ...\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties defined for headers match the header type.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n \"headers\": {\n    \"X-Rate-Limit-Limit\": {\n      \"description\": \"The number of requests allowed in the current period\",\n      \"type\": \"integer\"\n    },\n    ...\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-header-sample-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Value of the 'x-42c-sample' extension is not consistent with the header</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value of the extension <code>x-42c-sample</code> is not consistent with the associated header.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#headerObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The value of the extension <code>x-42c-sample</code> is not consistent with the associated header.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>x-42c-sample</code> extension matches the associated header.</p>\n                "
        }
      ]
    }
  },
  "warning-items-enum-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property constraining the item values is defined even though the item's values are defined in an enum</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have specified a property constraining the values of array items even though the items' values are defined in an enum. This makes little sense.</p>\n                "
    },
    "shortDescription": "You have specified a property constraining the values of array items even though the items' values are defined in an enum. This makes little sense.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Do not define unnecessary properties for array items constrained by enums.</p>\n                "
        }
      ]
    }
  },
  "warning-items-format-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Item format is not applicable to the type the array items</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The format you have specified for one or more numeric array items is not consistent with their type. While this is acceptable, it probably is not what you want.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The format you have specified for one or more numeric array items is not consistent with their type. While this is acceptable, it probably is not what you want.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The array accepts items of the type <code>integer</code>, but the format <code>float</code> is not an integer format:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"14,15\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"lockCombo\",\n  \"in\": \"body\",\n  \"description\": \"Lock combination to add to the list\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"combination\"\n    ],\n    \"properties\": {\n    \"combination\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"type\": \"float\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the formats of all numeric array items match the type of the items.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"14,15\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"lockCombo\",\n  \"in\": \"body\",\n  \"description\": \"Lock combination to add to the list\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"object\",\n    \"required\": [\n      \"combination\"\n    ],\n    \"properties\": {\n    \"combination\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\",\n        \"type\": \"int32\"\n        }\n      }\n    }\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-items-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property defined for an array item is not applicable to the array item type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A property defined for an array item is not applicable to the type of the array item.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A property defined for an array item is not applicable to the type of the array item.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The array accepts string items but also has the property <code>maximum</code> defined which is a property of integers and numbers:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"someArray\",\n  \"in\": \"body\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\",\n    \"pattern\": ^((4\\d{3})|(5[1-5]\\d{2})|(6011))-?\\d{4}-?\\d{4}-?\\d{4}|3[4,7]\\d{13}$,\n    \"maximum\": 8\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties defined for array items match the array item type.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"8\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"name\": \"someArray\",\n  \"in\": \"body\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\",\n    \"pattern\": ^((4\\d{3})|(5[1-5]\\d{2})|(6011))-?\\d{4}-?\\d{4}-?\\d{4}|3[4,7]\\d{13}$,\n    \"maxLength\": 8\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-items-sample-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Value of the 'x-42c-sample' extension is not consistent with the items</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value of the extension <code>x-42c-sample</code> is not consistent with the associated array items.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#itemsObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The value of the extension <code>x-42c-sample</code> is not consistent with the associated array items.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>x-42c-sample</code> extension matches the associated array items.</p>\n                "
        }
      ]
    }
  },
  "warning-license-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>License object URL is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined in the <code>url</code> field of the <code>license</code> object is not a proper URL.</p>\n                    <p>The <code>license</code> object itself and the <code>url</code> field in it are optional. If you do not defined either, your OpenAPI definition is still a valid contract. However, if you do reference your license location, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#license-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a></p>\n                "
    },
    "shortDescription": "The URL defined in the <code>url</code> field of the <code>license</code> object is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. In this case, the URL is missing the protocol prefix and has an extra space:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"license\" : {\n  \"name\": \"Apache 2.0\",\n  \"url\": \"www.apache.org/licenses/ LICENSE-2.0.html\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"3\" xml:space=\"preserve\"><code class=\"language-json\">\"license\" : {\n  \"name\": \"Apache 2.0\",\n  \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n}</code></pre>"
        }
      ]
    }
  },
  "warning-operation-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>'External Documentation' URL of the operation is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined in the <code>url</code> field of the <code>External Documentation</code> object for the API operation in question is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined in the <code>url</code> field of the <code>External Documentation</code> object for the API operation in question is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. In this case, the URL is missing the protocol prefix and has a space in the middle:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"externalDocs\" : { \n          \"description\": \"Find more info here\",\n          \"url\": \"will add later\"\n      },</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"10\" xml:space=\"preserve\"><code class=\"language-json\">\"get\": {\n      \"description\": \"Returns all pets from the system that the user has access to\",\n      \"produces\": [\n        \"application/json\"\n      ],\n      \"externalDocs\" : { \n          \"description\": \"Find more info here\",\n          \"url\": \"http://petstore.api.com/docs/pets\"\n      },</code></pre>"
        }
      ]
    }
  },
  "warning-operation-summary": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Operation summary should be less than 120 characters</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>To be easier to read, an operation summary should be less than 120 characters long.</p>\n                "
    },
    "shortDescription": "To be easier to read, an operation summary should be less than 120 characters long.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Condense all operation summaries to be under 120 characters.</p>\n                "
        }
      ]
    }
  },
  "warning-parameter-enum-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Property constraining parameter values is defined even though the parameter's values are defined in an enum</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have specified a parameter property constraining parameter values even though the parameter's values are defined in an enum. This makes little sense.</p>\n                "
    },
    "shortDescription": "You have specified a parameter property constraining parameter values even though the parameter's values are defined in an enum. This makes little sense.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Do not define unnecessary parameter properties for parameters constrained by enums.</p>\n                "
        }
      ]
    }
  },
  "warning-parameter-format-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Parameter format is not applicable to the parameter's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The format you have specified for a numeric parameter is not consistent with the type you have defined for the parameter. While this is acceptable, it may not be what you want.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The format you have specified for a numeric parameter is not consistent with the type you have defined for the parameter. While this is acceptable, it may not be what you want.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The type of the parameter is <code>integer</code>, but the format is <code>float</code> which is not an integer format:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"format\": \"float\",\n     \"description\": \"Number of the objects in the array.\"\n   }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the formats of all numeric parameters match the type of the parameters.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"type\": \"integer\",\n     \"name\": \"total\",\n     \"in\": \"query\",\n     \"format\": \"int32\",\n     \"description\": \"Number of the objects in the array.\"\n   }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-parameter-header-accept": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header parameter with the name 'Accept' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"name\": \"Accept\",\n    \"in\": \"header\",\n    \"description\": \"Supported content types\",\n    \"required\": true,\n    \"type\": \"string\",\n    \"pattern\": \"^application/json$|^application/xml$\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header parameter names.</p>\n                "
        }
      ]
    }
  },
  "warning-parameter-header-authorization": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header parameter with the name 'Authorization' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"name\": \"Authorization\",\n    \"in\": \"header\",\n    \"description\": \"token to be passed as a header\",\n    \"required\": true,\n    \"type\": \"array\",\n    \"items\": {\n        \"type\": \"integer\",\n        \"format\": \"int64\"\n    },\n    \"collectionFormat\": \"csv\"\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header parameter names.</p>\n                    <p>Make sure that you have properly defined the security section of your OpenAPI definition and are not trying to use a header parameter to define what in fact should be conveyed in the actual <code>Authorization</code> header.</p>\n                "
        }
      ]
    }
  },
  "warning-parameter-header-content-type": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header parameter with the name 'Content-Type' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header parameter. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n    \"name\": \"Content-Type\",\n    \"in\": \"header\",\n    \"description\": \"Supported content types\",\n    \"required\": true,\n    \"type\": \"string\",\n    \"pattern\": \"^application/json$|^application/xml$\",\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header parameter names.</p>\n                "
        }
      ]
    }
  },
  "warning-parameter-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Parameter property is not applicable to the parameter's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A property defined for a parameter is not applicable to the type of the parameter.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A property defined for a parameter is not applicable to the type of the parameter.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The string parameter has the property <code>maximum</code> defined which is a property of integers and numbers:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"description\": \"Identifier of the object to be extracted.\",\n     \"maximum\": 8\n  }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties defined for parameters match the parameter type.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"7\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">{\n  \"parameters\": {\n     \"in\": \"query\",\n     \"name\": \"id\",\n     \"type\": \"string\",\n     \"description\": \"Identifier of the object to be extracted.\",\n     \"maxLength\": 8\n  }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-parameter-required-default": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Default value unnecessarily declared for a required parameter type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have specified a default value for a required parameter. The values for required parameters are always specified in requests, so there is no need to specify a default value that the server could use.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have specified a default value for a required parameter. The values for required parameters are always specified in requests, so there is no need to specify a default value that the server could use.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"18\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n            \"default: \"Fido\"\n           },\n          ...\n          }\n         }\n       }\n     }\n   ]\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not specify default responses for required parameters.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"16\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"post\": {\n  \"description\": \"Creates a new pet in the store\",\n  \"operationId\": \"addPet\",\n  \"parameters\": [\n    {\n      \"name\": \"pet\",\n      \"in\": \"body\",\n      \"description\": \"pet to add to the system\",\n      \"required\": true,\n      \"schema\": {  \n        \"type\": \"object\",\n        \"additionalProperties\": \"false\",\n        \"required\": [\n          \"name\"\n          ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n           },\n          ...\n          }\n         }\n       }\n     }\n   ]\n}</code></pre>"
        }
      ]
    }
  },
  "warning-parameter-sample-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Value of the 'x-42c-sample' extension is not consistent with the parameter</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value of the extension <code>x-42c-sample</code> is not consistent with the associated parameter.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#parameter-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The value of the extension <code>x-42c-sample</code> is not consistent with the associated parameter.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>x-42c-sample</code> extension matches the associated parameter.</p>\n                "
        }
      ]
    }
  },
  "warning-path-pathitems-empty": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Path has no operation defined</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>A path in your API has no operation defined in it. This could happen, for example, if you did not have the proper access rights when retrieving the API definition.</p>\n                    <p>The OpenAPI Specification (OAS) allows paths that do not have operation, but it probably is not what you want to do.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#security-filtering\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "A path in your API has no operation defined in it. This could happen, for example, if you did not have the proper access rights when retrieving the API definition.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Define operations for all paths your API exposes.</p>\n                "
        }
      ]
    }
  },
  "warning-reference-property": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>No properties allowed alongside a JSON reference</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have defined a property alongside a <code>$ref</code> JSON reference. This is not allowed.</p>\n                    <p> For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#reference-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "You have defined a property alongside a <code>$ref</code> JSON reference. This is not allowed.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not define any properties alongside <code>$ref</code> properties.</p>\n                "
        }
      ]
    }
  },
  "warning-response-header-content-type": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Header with the name 'Content-Type' is ignored</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a restricted value as the name of a header. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.</p>\n                "
    },
    "shortDescription": "You have used a restricted value as the name of a header. The values <code>Accept</code>, <code>Content-Type</code>, and <code>Authorization</code> are restricted values and should not be used as the header name. A header with any of these values as the header name is ignored.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that you do not use the restricted values as header names.</p>\n                "
        }
      ]
    }
  },
  "warning-responses-http-status-successful": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>If operation has only one HTTP response defined, the HTTP status code should be for a success</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>One or more operations in your API have only one response defined for them, but the HTTP status code in the response definition is not for a successful operation.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#responses-object\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "One or more operations in your API have only one response defined for them, but the HTTP status code in the response definition is not for a successful operation.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all operations have at least one HTTP response for a successful operation defined.</p>\n                "
        }
      ]
    }
  },
  "warning-schema-enum-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Schema keyword used alongside enum</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>You have used a schema keyword alongside an enum. This is not allowed.</p>\n                "
    },
    "shortDescription": "You have used a schema keyword alongside an enum. This is not allowed.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that schema properties that should not appear alongside enums do not do so.</p>\n                "
        }
      ]
    }
  },
  "warning-schema-example-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Value of a schema example is not consistent with the schema</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The <code>example</code> object you have defined is not consistent with the schema of the associated value.</p>\n                "
    },
    "shortDescription": "The <code>example</code> object you have defined is not consistent with the schema of the associated value.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>example</code> objects you define match the schemas of their associated values.</p>\n                "
        }
      ]
    }
  },
  "warning-schema-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>'External Documentation' URL of the schema is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the <code>External Documentation</code> object for the schema in question is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the <code>External Documentation</code> object for the schema in question is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the <code>url</code> field has just a placeholder string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"schema\" : {\n    \"type\": \"string\",\n    \"format\": \"email\",\n    \"externalDocs\" : {\n         \"description\": \"Find more info here\",\n         \"url\": \"need to add later\"\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"schema\" : {\n    \"type\": \"string\",\n    \"format\": \"email\",\n    \"externalDocs\" : {\n         \"description\": \"Find more info here\",\n         \"url\": \"http://my.api.com/docs/email\"\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-schema-format-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Schema format is not applicable to the schema's type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The format you have specified for a numeric schema is not consistent with the type you have defined for the schema. While this is acceptable, it may not be what you want.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The format you have specified for a numeric schema is not consistent with the type you have defined for the schema. While this is acceptable, it may not be what you want.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. The type of the schema is <code>integer</code>, but the format is <code>float</code> which is not an integer format:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"User\": {\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"float\"\n        }\n    }\n}</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the formats of all numeric schemas match the type of the schemas.</p>\n                    <p>Numeric parameters type <code>integer</code> can have the format <code>int32</code> or <code>int64</code>. Numeric parameters type <code>number</code> can have the format <code>float</code> or <code>double</code>.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" data-start=\"1\" xml:space=\"preserve\"><code class=\"language-json\">\"User\": {\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n        }\n    }\n}</code></pre>"
        }
      ]
    }
  },
  "warning-schema-property-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Schema keyword is not applicable to the defined data type</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The schema keyword you have defined is not applicable to the data type you have defined.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The schema keyword you have defined is not applicable to the data type you have defined.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all properties defined for schema properties match the data type.</p>\n                "
        }
      ]
    }
  },
  "warning-schema-sample-improper": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>Value of the 'x-42c-sample' extension is not consistent with the schema</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The value of the extension <code>x-42c-sample</code> is not consistent with the schema of the associated value.</p>\n                "
    },
    "shortDescription": "The value of the extension <code>x-42c-sample</code> is not consistent with the schema of the associated value.",
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that the <code>x-42c-sample</code> extension matches the schema of the associated value.</p>\n                "
        }
      ]
    }
  },
  "warning-tag-externaldocumentation-url": {
    "group": "oasconformance",
    "subgroup": "bestpractices",
    "title": {
      "text": "<h1>'External Documentation' URL of the tag is not a proper URL</h1>"
    },
    "description": {
      "text": "\n                    <h2>Description</h2>\n                    <p>The URL defined the <code>url</code> field of the <code>External Documentation</code> object for a tag is not a proper URL.</p>\n                    <p>You can use the externalDocs field to reference an external resource that offers extended documentation for your API. This is field is optional. However, if you do reference external documentation, the OpenAPI Specification (OAS) requires that all URLs in the API contract must be proper URLs in a valid format.</p>\n                    <p>For more details, see the <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#externalDocumentationObject\" target=\"_blank\" rel=\"noopener\">OpenAPI Specification</a>.</p>\n                "
    },
    "shortDescription": "The URL defined the <code>url</code> field of the <code>External Documentation</code> object for a tag is not a proper URL.",
    "example": {
      "sections": [
        {
          "text": "\n                    <h2>Example</h2>\n                    <p>The following is an example of how this issue could look in your API definition. Here, the <code>url</code> field has just a placeholder string:</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"tag\" : {\n    \"name\": \"pet\",\n    \"description\": \"Pet operations\",\n        \"externalDocs\" : {\n             \"description\": \"Find more info here\",\n             \"url\": \"need to add later\"\n        }</code></pre>"
        }
      ]
    },
    "remediation": {
      "sections": [
        {
          "text": "\n                    <h2>Remediation</h2>\n                    <p>Make sure that all URLs in your API are proper URLs and have a valid format.</p>\n                "
        },
        {
          "code": "<pre class=\"line-numbers\" data-line=\"6\" xml:space=\"preserve\"><code class=\"language-json\">\"tag\" : {\n    \"name\": \"pet\",\n    \"description\": \"Pet operations\",\n        \"externalDocs\" : {\n             \"description\": \"Find more info here\",\n             \"url\": \"http://petstore.api.com/docs/petsoperations\"\n        }</code></pre>"
        }
      ]
    }
  }
}
